{"version":3,"sources":["../node_modules/handlebars/lib/handlebars/utils.js","../node_modules/handlebars/lib/handlebars/exception.js","../node_modules/handlebars/lib/handlebars/helpers/block-helper-missing.js","../node_modules/handlebars/lib/handlebars/helpers/each.js","../node_modules/handlebars/lib/handlebars/helpers/helper-missing.js","../node_modules/handlebars/lib/handlebars/helpers/if.js","../node_modules/handlebars/lib/handlebars/helpers/log.js","../node_modules/handlebars/lib/handlebars/helpers/lookup.js","../node_modules/handlebars/lib/handlebars/helpers/with.js","../node_modules/handlebars/lib/handlebars/helpers.js","../node_modules/handlebars/lib/handlebars/decorators/inline.js","../node_modules/handlebars/lib/handlebars/decorators.js","../node_modules/handlebars/lib/handlebars/logger.js","../node_modules/handlebars/lib/handlebars/internal/create-new-lookup-object.js","../node_modules/handlebars/lib/handlebars/internal/proto-access.js","../node_modules/handlebars/lib/handlebars/base.js","../node_modules/handlebars/lib/handlebars/safe-string.js","../node_modules/handlebars/lib/handlebars/internal/wrapHelper.js","../node_modules/handlebars/lib/handlebars/runtime.js","../node_modules/handlebars/lib/handlebars/no-conflict.js","../node_modules/handlebars/lib/handlebars.runtime.js","../node_modules/handlebars/lib/handlebars/compiler/ast.js","../node_modules/handlebars/lib/handlebars/compiler/parser.js","../node_modules/handlebars/lib/handlebars/compiler/visitor.js","../node_modules/handlebars/lib/handlebars/compiler/whitespace-control.js","../node_modules/handlebars/lib/handlebars/compiler/helpers.js","../node_modules/handlebars/lib/handlebars/compiler/base.js","../node_modules/handlebars/lib/handlebars/compiler/compiler.js","../node_modules/handlebars/node_modules/source-map/lib/base64.js","../node_modules/handlebars/node_modules/source-map/lib/base64-vlq.js","../node_modules/handlebars/node_modules/source-map/lib/util.js","../node_modules/handlebars/node_modules/source-map/lib/array-set.js","../node_modules/handlebars/node_modules/source-map/lib/mapping-list.js","../node_modules/handlebars/node_modules/source-map/lib/source-map-generator.js","../node_modules/handlebars/node_modules/source-map/lib/binary-search.js","../node_modules/handlebars/node_modules/source-map/lib/quick-sort.js","../node_modules/handlebars/node_modules/source-map/lib/source-map-consumer.js","../node_modules/handlebars/node_modules/source-map/lib/source-node.js","../node_modules/handlebars/node_modules/source-map/source-map.js","../node_modules/handlebars/lib/handlebars/compiler/code-gen.js","../node_modules/handlebars/lib/handlebars/compiler/javascript-compiler.js","../node_modules/handlebars/lib/handlebars.js","../node_modules/handlebars/lib/handlebars/compiler/printer.js","../node_modules/handlebars/lib/index.js","../node_modules/js-sha1/src/sha1.js","../node_modules/retry/lib/retry_operation.js","../node_modules/retry/lib/retry.js","../node_modules/retry/index.js","../node_modules/p-retry/index.js","../node_modules/eventemitter3/index.js","../node_modules/p-finally/index.js","../node_modules/p-timeout/index.js","../node_modules/p-queue/dist/lower-bound.js","../node_modules/p-queue/dist/priority-queue.js","../node_modules/p-queue/dist/index.js","../node_modules/semver/internal/constants.js","../node_modules/semver/internal/debug.js","../node_modules/semver/internal/re.js","../node_modules/semver/internal/parse-options.js","../node_modules/semver/internal/identifiers.js","../node_modules/semver/classes/semver.js","../node_modules/semver/functions/parse.js","../node_modules/semver/functions/valid.js","../node_modules/semver/functions/clean.js","../node_modules/semver/functions/inc.js","../node_modules/semver/functions/diff.js","../node_modules/semver/functions/major.js","../node_modules/semver/functions/minor.js","../node_modules/semver/functions/patch.js","../node_modules/semver/functions/prerelease.js","../node_modules/semver/functions/compare.js","../node_modules/semver/functions/rcompare.js","../node_modules/semver/functions/compare-loose.js","../node_modules/semver/functions/compare-build.js","../node_modules/semver/functions/sort.js","../node_modules/semver/functions/rsort.js","../node_modules/semver/functions/gt.js","../node_modules/semver/functions/lt.js","../node_modules/semver/functions/eq.js","../node_modules/semver/functions/neq.js","../node_modules/semver/functions/gte.js","../node_modules/semver/functions/lte.js","../node_modules/semver/functions/cmp.js","../node_modules/semver/functions/coerce.js","../node_modules/semver/internal/lrucache.js","../node_modules/semver/classes/range.js","../node_modules/semver/classes/comparator.js","../node_modules/semver/functions/satisfies.js","../node_modules/semver/ranges/to-comparators.js","../node_modules/semver/ranges/max-satisfying.js","../node_modules/semver/ranges/min-satisfying.js","../node_modules/semver/ranges/min-version.js","../node_modules/semver/ranges/valid.js","../node_modules/semver/ranges/outside.js","../node_modules/semver/ranges/gtr.js","../node_modules/semver/ranges/ltr.js","../node_modules/semver/ranges/intersects.js","../node_modules/semver/ranges/simplify.js","../node_modules/semver/ranges/subset.js","../node_modules/semver/index.js","../node_modules/decamelize/index.js","../node_modules/camelcase/index.js","../node_modules/ansi-styles/index.js","../node_modules/base64-js/index.js","../node_modules/pino-std-serializers/lib/err-helpers.js","../node_modules/pino-std-serializers/lib/err-proto.js","../node_modules/pino-std-serializers/lib/err.js","../node_modules/pino-std-serializers/lib/err-with-cause.js","../node_modules/pino-std-serializers/lib/req.js","../node_modules/pino-std-serializers/lib/res.js","../node_modules/pino-std-serializers/index.js","../node_modules/pino/lib/caller.js","../node_modules/fast-redact/lib/validator.js","../node_modules/fast-redact/lib/rx.js","../node_modules/fast-redact/lib/parse.js","../node_modules/fast-redact/lib/redactor.js","../node_modules/fast-redact/lib/modifiers.js","../node_modules/fast-redact/lib/restorer.js","../node_modules/fast-redact/lib/state.js","../node_modules/fast-redact/index.js","../node_modules/pino/lib/symbols.js","../node_modules/pino/lib/redaction.js","../node_modules/pino/lib/time.js","../node_modules/quick-format-unescaped/index.js","../node_modules/thread-stream/package.json","../node_modules/thread-stream/lib/wait.js","../node_modules/thread-stream/lib/indexes.js","../node_modules/thread-stream/index.js","../node_modules/pino/lib/transport.js","../node_modules/pino/lib/tools.js","../node_modules/pino/lib/constants.js","../node_modules/pino/lib/levels.js","../node_modules/pino/lib/meta.js","../node_modules/pino/lib/proto.js","../node_modules/safe-stable-stringify/index.js","../node_modules/pino/lib/multistream.js","../node_modules/pino/pino.js","../node_modules/@elizaos/core/dist/index.js","../node_modules/@langchain/core/dist/runnables/base.js","../node_modules/langsmith/dist/run_trees.js","../node_modules/langsmith/dist/client.js","../node_modules/langsmith/dist/utils/async_caller.js","../node_modules/langsmith/dist/utils/project.js","../node_modules/langsmith/dist/index.js","../node_modules/langsmith/dist/utils/env.js","../node_modules/langsmith/dist/singletons/fetch.js","../node_modules/langsmith/dist/utils/messages.js","../node_modules/langsmith/dist/utils/_uuid.js","../node_modules/langsmith/dist/utils/warn.js","../node_modules/langsmith/dist/utils/prompts.js","../node_modules/langsmith/dist/utils/error.js","../node_modules/langsmith/dist/utils/fast-safe-stringify/index.js","../node_modules/langsmith/dist/env.js","../node_modules/langsmith/dist/singletons/constants.js","../node_modules/langsmith/dist/singletons/traceable.js","../node_modules/@langchain/core/dist/utils/fast-json-patch/src/core.js","../node_modules/@langchain/core/dist/utils/fast-json-patch/src/helpers.js","../node_modules/@langchain/core/dist/utils/fast-json-patch/index.js","../node_modules/@langchain/core/dist/callbacks/base.js","../node_modules/@langchain/core/dist/load/map_keys.js","../node_modules/@langchain/core/dist/load/serializable.js","../node_modules/@langchain/core/dist/utils/env.js","../node_modules/@langchain/core/dist/tracers/base.js","../node_modules/@langchain/core/dist/callbacks/manager.js","../node_modules/@langchain/core/dist/tracers/console.js","../node_modules/@langchain/core/dist/messages/base.js","../node_modules/@langchain/core/dist/messages/utils.js","../node_modules/@langchain/core/dist/singletons/tracer.js","../node_modules/@langchain/core/dist/tracers/tracer_langchain.js","../node_modules/@langchain/core/dist/singletons/callbacks.js","../node_modules/@langchain/core/dist/singletons/async_local_storage/globals.js","../node_modules/@langchain/core/dist/utils/callbacks.js","../node_modules/@langchain/core/dist/singletons/async_local_storage/context.js","../node_modules/@langchain/core/dist/singletons/async_local_storage/index.js","../node_modules/@langchain/core/dist/utils/async_caller.js","../node_modules/@langchain/core/dist/runnables/graph.js","../node_modules/@langchain/core/dist/utils/json_schema.js","../node_modules/zod-to-json-schema/dist/esm/Options.js","../node_modules/zod-to-json-schema/dist/esm/selectParser.js","../node_modules/zod-to-json-schema/dist/esm/parsers/array.js","../node_modules/zod-to-json-schema/dist/esm/parsers/record.js","../node_modules/zod-to-json-schema/dist/esm/parsers/string.js","../node_modules/zod-to-json-schema/dist/esm/parsers/object.js","../node_modules/@cfworker/json-schema/dist/esm/dereference.js","../node_modules/@cfworker/json-schema/dist/esm/format.js","../node_modules/@cfworker/json-schema/dist/esm/types.js","../node_modules/@langchain/core/dist/utils/types/zod.js","../node_modules/js-tiktoken/dist/chunk-ZDNLBERF.js","../node_modules/@sentry/core/src/debug-build.ts","../node_modules/@sentry/core/src/utils/worldwide.ts","../node_modules/@sentry/core/src/utils/version.ts","../node_modules/@sentry/core/src/carrier.ts","../node_modules/@sentry/core/src/utils/logger.ts","../node_modules/@sentry/core/src/utils/stacktrace.ts","../node_modules/@sentry/core/src/instrument/handlers.ts","../node_modules/@sentry/core/src/instrument/globalError.ts","../node_modules/@sentry/core/src/instrument/globalUnhandledRejection.ts","../node_modules/@sentry/core/src/utils/is.ts","../node_modules/@sentry/core/src/utils/browser.ts","../node_modules/@sentry/core/src/utils/string.ts","../node_modules/@sentry/core/src/utils/object.ts","../node_modules/@sentry/core/src/utils/misc.ts","../node_modules/@sentry/core/src/utils/time.ts","../node_modules/@sentry/core/src/session.ts","../node_modules/@sentry/core/src/utils/merge.ts","../node_modules/@sentry/core/src/utils/propagationContext.ts","../node_modules/@sentry/core/src/utils/spanOnScope.ts","../node_modules/@sentry/core/src/scope.ts","../node_modules/@sentry/core/src/defaultScopes.ts","../node_modules/@sentry/core/src/asyncContext/stackStrategy.ts","../node_modules/@sentry/core/src/asyncContext/index.ts","../node_modules/@sentry/core/src/currentScopes.ts","../node_modules/@sentry/core/src/semanticAttributes.ts","../node_modules/@sentry/core/src/tracing/spanstatus.ts","../node_modules/@sentry/core/src/tracing/utils.ts","../node_modules/@sentry/core/src/utils/baggage.ts","../node_modules/@sentry/core/src/utils/parseSampleRate.ts","../node_modules/@sentry/core/src/utils/spanUtils.ts","../node_modules/@sentry/core/src/utils/hasSpansEnabled.ts","../node_modules/@sentry/core/src/constants.ts","../node_modules/@sentry/core/src/utils/dsn.ts","../node_modules/@sentry/core/src/tracing/dynamicSamplingContext.ts","../node_modules/@sentry/core/src/utils/normalize.ts","../node_modules/@sentry/core/src/utils/envelope.ts","../node_modules/@sentry/core/src/envelope.ts","../node_modules/@sentry/core/src/utils/syncpromise.ts","../node_modules/@sentry/core/src/eventProcessors.ts","../node_modules/@sentry/core/src/utils/applyScopeDataToEvent.ts","../node_modules/@sentry/core/src/utils/debug-ids.ts","../node_modules/@sentry/core/src/utils/prepareEvent.ts","../node_modules/@sentry/core/src/exports.ts","../node_modules/@sentry/core/src/api.ts","../node_modules/@sentry/core/src/integration.ts","../node_modules/@sentry/core/src/utils/clientreport.ts","../node_modules/@sentry/core/src/utils/eventUtils.ts","../node_modules/@sentry/core/src/utils/transactionEvent.ts","../node_modules/@sentry/core/src/client.ts","../node_modules/@sentry/core/src/logs/envelope.ts","../node_modules/@sentry/core/src/logs/exports.ts","../node_modules/@sentry/core/src/sdk.ts","../node_modules/@sentry/core/src/utils/promisebuffer.ts","../node_modules/@sentry/core/src/utils/ratelimit.ts","../node_modules/@sentry/core/src/transports/base.ts","../node_modules/@sentry/core/src/utils/ipAddress.ts","../node_modules/@sentry/core/src/utils/sdkMetadata.ts","../node_modules/@sentry/core/src/breadcrumbs.ts","../node_modules/@sentry/core/src/integrations/functiontostring.ts","../node_modules/@sentry/core/src/integrations/eventFilters.ts","../node_modules/@sentry/core/src/utils/aggregate-errors.ts","../node_modules/@sentry/core/src/instrument/console.ts","../node_modules/@sentry/core/src/utils/severity.ts","../node_modules/@sentry/core/src/integrations/dedupe.ts","../node_modules/@sentry/core/src/utils/url.ts","../node_modules/@sentry/core/src/utils/breadcrumb-log-level.ts","../node_modules/@sentry/core/src/utils/supports.ts","../node_modules/@sentry/core/src/instrument/fetch.ts","../node_modules/@sentry/core/src/utils/env.ts","../node_modules/@sentry/browser/src/helpers.ts","../node_modules/@sentry/browser/src/eventbuilder.ts","../node_modules/@sentry/browser/src/client.ts","../node_modules/@sentry-internal/browser-utils/src/debug-build.ts","../node_modules/@sentry-internal/browser-utils/src/types.ts","../node_modules/@sentry-internal/browser-utils/src/instrument/dom.ts","../node_modules/@sentry-internal/browser-utils/src/instrument/history.ts","../node_modules/@sentry-internal/browser-utils/src/getNativeImplementation.ts","../node_modules/@sentry-internal/browser-utils/src/instrument/xhr.ts","../node_modules/@sentry/browser/src/transports/fetch.ts","../node_modules/@sentry/browser/src/stack-parsers.ts","../node_modules/@sentry/browser/src/debug-build.ts","../node_modules/@sentry/browser/src/integrations/breadcrumbs.ts","../node_modules/@sentry/browser/src/integrations/browserapierrors.ts","../node_modules/@sentry/browser/src/integrations/browsersession.ts","../node_modules/@sentry/browser/src/integrations/globalhandlers.ts","../node_modules/@sentry/browser/src/integrations/httpcontext.ts","../node_modules/@sentry/browser/src/integrations/linkederrors.ts","../node_modules/@sentry/browser/src/utils/detectBrowserExtension.ts","../node_modules/@sentry/browser/src/sdk.ts","../src/plugin.ts","../src/agent.ts","../src/__tests__/e2e/project.test.ts","../src/__tests__/e2e/starter-plugin.test.ts","../src/__tests__/e2e/natural-language.test.ts","../src/__tests__/e2e/index.ts","../src/index.ts"],"sourcesContent":["const escape = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n  '=': '&#x3D;'\n};\n\nconst badChars = /[&<>\"'`=]/g,\n  possible = /[&<>\"'`=]/;\n\nfunction escapeChar(chr) {\n  return escape[chr];\n}\n\nexport function extend(obj /* , ...source */) {\n  for (let i = 1; i < arguments.length; i++) {\n    for (let key in arguments[i]) {\n      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n        obj[key] = arguments[i][key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nexport let toString = Object.prototype.toString;\n\n// Sourced from lodash\n// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\n/* eslint-disable func-style */\nlet isFunction = function(value) {\n  return typeof value === 'function';\n};\n// fallback for older versions of Chrome and Safari\n/* istanbul ignore next */\nif (isFunction(/x/)) {\n  isFunction = function(value) {\n    return (\n      typeof value === 'function' &&\n      toString.call(value) === '[object Function]'\n    );\n  };\n}\nexport { isFunction };\n/* eslint-enable func-style */\n\n/* istanbul ignore next */\nexport const isArray =\n  Array.isArray ||\n  function(value) {\n    return value && typeof value === 'object'\n      ? toString.call(value) === '[object Array]'\n      : false;\n  };\n\n// Older IE versions do not directly support indexOf so we must implement our own, sadly.\nexport function indexOf(array, value) {\n  for (let i = 0, len = array.length; i < len; i++) {\n    if (array[i] === value) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport function escapeExpression(string) {\n  if (typeof string !== 'string') {\n    // don't escape SafeStrings, since they're already safe\n    if (string && string.toHTML) {\n      return string.toHTML();\n    } else if (string == null) {\n      return '';\n    } else if (!string) {\n      return string + '';\n    }\n\n    // Force a string conversion as this will be done by the append regardless and\n    // the regex test will do this transparently behind the scenes, causing issues if\n    // an object's to string has escaped characters in it.\n    string = '' + string;\n  }\n\n  if (!possible.test(string)) {\n    return string;\n  }\n  return string.replace(badChars, escapeChar);\n}\n\nexport function isEmpty(value) {\n  if (!value && value !== 0) {\n    return true;\n  } else if (isArray(value) && value.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function createFrame(object) {\n  let frame = extend({}, object);\n  frame._parent = object;\n  return frame;\n}\n\nexport function blockParams(params, ids) {\n  params.path = ids;\n  return params;\n}\n\nexport function appendContextPath(contextPath, id) {\n  return (contextPath ? contextPath + '.' : '') + id;\n}\n","const errorProps = [\n  'description',\n  'fileName',\n  'lineNumber',\n  'endLineNumber',\n  'message',\n  'name',\n  'number',\n  'stack'\n];\n\nfunction Exception(message, node) {\n  let loc = node && node.loc,\n    line,\n    endLineNumber,\n    column,\n    endColumn;\n\n  if (loc) {\n    line = loc.start.line;\n    endLineNumber = loc.end.line;\n    column = loc.start.column;\n    endColumn = loc.end.column;\n\n    message += ' - ' + line + ':' + column;\n  }\n\n  let tmp = Error.prototype.constructor.call(this, message);\n\n  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n  for (let idx = 0; idx < errorProps.length; idx++) {\n    this[errorProps[idx]] = tmp[errorProps[idx]];\n  }\n\n  /* istanbul ignore else */\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, Exception);\n  }\n\n  try {\n    if (loc) {\n      this.lineNumber = line;\n      this.endLineNumber = endLineNumber;\n\n      // Work around issue under safari where we can't directly set the column value\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(this, 'column', {\n          value: column,\n          enumerable: true\n        });\n        Object.defineProperty(this, 'endColumn', {\n          value: endColumn,\n          enumerable: true\n        });\n      } else {\n        this.column = column;\n        this.endColumn = endColumn;\n      }\n    }\n  } catch (nop) {\n    /* Ignore if the browser is very particular */\n  }\n}\n\nException.prototype = new Error();\n\nexport default Exception;\n","import { appendContextPath, createFrame, isArray } from '../utils';\n\nexport default function(instance) {\n  instance.registerHelper('blockHelperMissing', function(context, options) {\n    let inverse = options.inverse,\n      fn = options.fn;\n\n    if (context === true) {\n      return fn(this);\n    } else if (context === false || context == null) {\n      return inverse(this);\n    } else if (isArray(context)) {\n      if (context.length > 0) {\n        if (options.ids) {\n          options.ids = [options.name];\n        }\n\n        return instance.helpers.each(context, options);\n      } else {\n        return inverse(this);\n      }\n    } else {\n      if (options.data && options.ids) {\n        let data = createFrame(options.data);\n        data.contextPath = appendContextPath(\n          options.data.contextPath,\n          options.name\n        );\n        options = { data: data };\n      }\n\n      return fn(context, options);\n    }\n  });\n}\n","import {\n  appendContextPath,\n  blockParams,\n  createFrame,\n  isArray,\n  isFunction\n} from '../utils';\nimport Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('each', function(context, options) {\n    if (!options) {\n      throw new Exception('Must pass iterator to #each');\n    }\n\n    let fn = options.fn,\n      inverse = options.inverse,\n      i = 0,\n      ret = '',\n      data,\n      contextPath;\n\n    if (options.data && options.ids) {\n      contextPath =\n        appendContextPath(options.data.contextPath, options.ids[0]) + '.';\n    }\n\n    if (isFunction(context)) {\n      context = context.call(this);\n    }\n\n    if (options.data) {\n      data = createFrame(options.data);\n    }\n\n    function execIteration(field, index, last) {\n      if (data) {\n        data.key = field;\n        data.index = index;\n        data.first = index === 0;\n        data.last = !!last;\n\n        if (contextPath) {\n          data.contextPath = contextPath + field;\n        }\n      }\n\n      ret =\n        ret +\n        fn(context[field], {\n          data: data,\n          blockParams: blockParams(\n            [context[field], field],\n            [contextPath + field, null]\n          )\n        });\n    }\n\n    if (context && typeof context === 'object') {\n      if (isArray(context)) {\n        for (let j = context.length; i < j; i++) {\n          if (i in context) {\n            execIteration(i, i, i === context.length - 1);\n          }\n        }\n      } else if (typeof Symbol === 'function' && context[Symbol.iterator]) {\n        const newContext = [];\n        const iterator = context[Symbol.iterator]();\n        for (let it = iterator.next(); !it.done; it = iterator.next()) {\n          newContext.push(it.value);\n        }\n        context = newContext;\n        for (let j = context.length; i < j; i++) {\n          execIteration(i, i, i === context.length - 1);\n        }\n      } else {\n        let priorKey;\n\n        Object.keys(context).forEach(key => {\n          // We're running the iterations one step out of sync so we can detect\n          // the last iteration without have to scan the object twice and create\n          // an itermediate keys array.\n          if (priorKey !== undefined) {\n            execIteration(priorKey, i - 1);\n          }\n          priorKey = key;\n          i++;\n        });\n        if (priorKey !== undefined) {\n          execIteration(priorKey, i - 1, true);\n        }\n      }\n    }\n\n    if (i === 0) {\n      ret = inverse(this);\n    }\n\n    return ret;\n  });\n}\n","import Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('helperMissing', function(/* [args, ]options */) {\n    if (arguments.length === 1) {\n      // A missing field in a {{foo}} construct.\n      return undefined;\n    } else {\n      // Someone is actually trying to call something, blow up.\n      throw new Exception(\n        'Missing helper: \"' + arguments[arguments.length - 1].name + '\"'\n      );\n    }\n  });\n}\n","import { isEmpty, isFunction } from '../utils';\nimport Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('if', function(conditional, options) {\n    if (arguments.length != 2) {\n      throw new Exception('#if requires exactly one argument');\n    }\n    if (isFunction(conditional)) {\n      conditional = conditional.call(this);\n    }\n\n    // Default behavior is to render the positive path if the value is truthy and not empty.\n    // The `includeZero` option may be set to treat the condtional as purely not empty based on the\n    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.\n    if ((!options.hash.includeZero && !conditional) || isEmpty(conditional)) {\n      return options.inverse(this);\n    } else {\n      return options.fn(this);\n    }\n  });\n\n  instance.registerHelper('unless', function(conditional, options) {\n    if (arguments.length != 2) {\n      throw new Exception('#unless requires exactly one argument');\n    }\n    return instance.helpers['if'].call(this, conditional, {\n      fn: options.inverse,\n      inverse: options.fn,\n      hash: options.hash\n    });\n  });\n}\n","export default function(instance) {\n  instance.registerHelper('log', function(/* message, options */) {\n    let args = [undefined],\n      options = arguments[arguments.length - 1];\n    for (let i = 0; i < arguments.length - 1; i++) {\n      args.push(arguments[i]);\n    }\n\n    let level = 1;\n    if (options.hash.level != null) {\n      level = options.hash.level;\n    } else if (options.data && options.data.level != null) {\n      level = options.data.level;\n    }\n    args[0] = level;\n\n    instance.log(...args);\n  });\n}\n","export default function(instance) {\n  instance.registerHelper('lookup', function(obj, field, options) {\n    if (!obj) {\n      // Note for 5.0: Change to \"obj == null\" in 5.0\n      return obj;\n    }\n    return options.lookupProperty(obj, field);\n  });\n}\n","import {\n  appendContextPath,\n  blockParams,\n  createFrame,\n  isEmpty,\n  isFunction\n} from '../utils';\nimport Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('with', function(context, options) {\n    if (arguments.length != 2) {\n      throw new Exception('#with requires exactly one argument');\n    }\n    if (isFunction(context)) {\n      context = context.call(this);\n    }\n\n    let fn = options.fn;\n\n    if (!isEmpty(context)) {\n      let data = options.data;\n      if (options.data && options.ids) {\n        data = createFrame(options.data);\n        data.contextPath = appendContextPath(\n          options.data.contextPath,\n          options.ids[0]\n        );\n      }\n\n      return fn(context, {\n        data: data,\n        blockParams: blockParams([context], [data && data.contextPath])\n      });\n    } else {\n      return options.inverse(this);\n    }\n  });\n}\n","import registerBlockHelperMissing from './helpers/block-helper-missing';\nimport registerEach from './helpers/each';\nimport registerHelperMissing from './helpers/helper-missing';\nimport registerIf from './helpers/if';\nimport registerLog from './helpers/log';\nimport registerLookup from './helpers/lookup';\nimport registerWith from './helpers/with';\n\nexport function registerDefaultHelpers(instance) {\n  registerBlockHelperMissing(instance);\n  registerEach(instance);\n  registerHelperMissing(instance);\n  registerIf(instance);\n  registerLog(instance);\n  registerLookup(instance);\n  registerWith(instance);\n}\n\nexport function moveHelperToHooks(instance, helperName, keepHelper) {\n  if (instance.helpers[helperName]) {\n    instance.hooks[helperName] = instance.helpers[helperName];\n    if (!keepHelper) {\n      delete instance.helpers[helperName];\n    }\n  }\n}\n","import { extend } from '../utils';\n\nexport default function(instance) {\n  instance.registerDecorator('inline', function(fn, props, container, options) {\n    let ret = fn;\n    if (!props.partials) {\n      props.partials = {};\n      ret = function(context, options) {\n        // Create a new partials stack frame prior to exec.\n        let original = container.partials;\n        container.partials = extend({}, original, props.partials);\n        let ret = fn(context, options);\n        container.partials = original;\n        return ret;\n      };\n    }\n\n    props.partials[options.args[0]] = options.fn;\n\n    return ret;\n  });\n}\n","import registerInline from './decorators/inline';\n\nexport function registerDefaultDecorators(instance) {\n  registerInline(instance);\n}\n","import { indexOf } from './utils';\n\nlet logger = {\n  methodMap: ['debug', 'info', 'warn', 'error'],\n  level: 'info',\n\n  // Maps a given level value to the `methodMap` indexes above.\n  lookupLevel: function(level) {\n    if (typeof level === 'string') {\n      let levelMap = indexOf(logger.methodMap, level.toLowerCase());\n      if (levelMap >= 0) {\n        level = levelMap;\n      } else {\n        level = parseInt(level, 10);\n      }\n    }\n\n    return level;\n  },\n\n  // Can be overridden in the host environment\n  log: function(level, ...message) {\n    level = logger.lookupLevel(level);\n\n    if (\n      typeof console !== 'undefined' &&\n      logger.lookupLevel(logger.level) <= level\n    ) {\n      let method = logger.methodMap[level];\n      // eslint-disable-next-line no-console\n      if (!console[method]) {\n        method = 'log';\n      }\n      console[method](...message); // eslint-disable-line no-console\n    }\n  }\n};\n\nexport default logger;\n","import { extend } from '../utils';\n\n/**\n * Create a new object with \"null\"-prototype to avoid truthy results on prototype properties.\n * The resulting object can be used with \"object[property]\" to check if a property exists\n * @param {...object} sources a varargs parameter of source objects that will be merged\n * @returns {object}\n */\nexport function createNewLookupObject(...sources) {\n  return extend(Object.create(null), ...sources);\n}\n","import { createNewLookupObject } from './create-new-lookup-object';\nimport logger from '../logger';\n\nconst loggedProperties = Object.create(null);\n\nexport function createProtoAccessControl(runtimeOptions) {\n  let defaultMethodWhiteList = Object.create(null);\n  defaultMethodWhiteList['constructor'] = false;\n  defaultMethodWhiteList['__defineGetter__'] = false;\n  defaultMethodWhiteList['__defineSetter__'] = false;\n  defaultMethodWhiteList['__lookupGetter__'] = false;\n\n  let defaultPropertyWhiteList = Object.create(null);\n  // eslint-disable-next-line no-proto\n  defaultPropertyWhiteList['__proto__'] = false;\n\n  return {\n    properties: {\n      whitelist: createNewLookupObject(\n        defaultPropertyWhiteList,\n        runtimeOptions.allowedProtoProperties\n      ),\n      defaultValue: runtimeOptions.allowProtoPropertiesByDefault\n    },\n    methods: {\n      whitelist: createNewLookupObject(\n        defaultMethodWhiteList,\n        runtimeOptions.allowedProtoMethods\n      ),\n      defaultValue: runtimeOptions.allowProtoMethodsByDefault\n    }\n  };\n}\n\nexport function resultIsAllowed(result, protoAccessControl, propertyName) {\n  if (typeof result === 'function') {\n    return checkWhiteList(protoAccessControl.methods, propertyName);\n  } else {\n    return checkWhiteList(protoAccessControl.properties, propertyName);\n  }\n}\n\nfunction checkWhiteList(protoAccessControlForType, propertyName) {\n  if (protoAccessControlForType.whitelist[propertyName] !== undefined) {\n    return protoAccessControlForType.whitelist[propertyName] === true;\n  }\n  if (protoAccessControlForType.defaultValue !== undefined) {\n    return protoAccessControlForType.defaultValue;\n  }\n  logUnexpecedPropertyAccessOnce(propertyName);\n  return false;\n}\n\nfunction logUnexpecedPropertyAccessOnce(propertyName) {\n  if (loggedProperties[propertyName] !== true) {\n    loggedProperties[propertyName] = true;\n    logger.log(\n      'error',\n      `Handlebars: Access has been denied to resolve the property \"${propertyName}\" because it is not an \"own property\" of its parent.\\n` +\n        `You can add a runtime option to disable the check or this warning:\\n` +\n        `See https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details`\n    );\n  }\n}\n\nexport function resetLoggedProperties() {\n  Object.keys(loggedProperties).forEach(propertyName => {\n    delete loggedProperties[propertyName];\n  });\n}\n","import { createFrame, extend, toString } from './utils';\nimport Exception from './exception';\nimport { registerDefaultHelpers } from './helpers';\nimport { registerDefaultDecorators } from './decorators';\nimport logger from './logger';\nimport { resetLoggedProperties } from './internal/proto-access';\n\nexport const VERSION = '4.7.8';\nexport const COMPILER_REVISION = 8;\nexport const LAST_COMPATIBLE_COMPILER_REVISION = 7;\n\nexport const REVISION_CHANGES = {\n  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it\n  2: '== 1.0.0-rc.3',\n  3: '== 1.0.0-rc.4',\n  4: '== 1.x.x',\n  5: '== 2.0.0-alpha.x',\n  6: '>= 2.0.0-beta.1',\n  7: '>= 4.0.0 <4.3.0',\n  8: '>= 4.3.0'\n};\n\nconst objectType = '[object Object]';\n\nexport function HandlebarsEnvironment(helpers, partials, decorators) {\n  this.helpers = helpers || {};\n  this.partials = partials || {};\n  this.decorators = decorators || {};\n\n  registerDefaultHelpers(this);\n  registerDefaultDecorators(this);\n}\n\nHandlebarsEnvironment.prototype = {\n  constructor: HandlebarsEnvironment,\n\n  logger: logger,\n  log: logger.log,\n\n  registerHelper: function(name, fn) {\n    if (toString.call(name) === objectType) {\n      if (fn) {\n        throw new Exception('Arg not supported with multiple helpers');\n      }\n      extend(this.helpers, name);\n    } else {\n      this.helpers[name] = fn;\n    }\n  },\n  unregisterHelper: function(name) {\n    delete this.helpers[name];\n  },\n\n  registerPartial: function(name, partial) {\n    if (toString.call(name) === objectType) {\n      extend(this.partials, name);\n    } else {\n      if (typeof partial === 'undefined') {\n        throw new Exception(\n          `Attempting to register a partial called \"${name}\" as undefined`\n        );\n      }\n      this.partials[name] = partial;\n    }\n  },\n  unregisterPartial: function(name) {\n    delete this.partials[name];\n  },\n\n  registerDecorator: function(name, fn) {\n    if (toString.call(name) === objectType) {\n      if (fn) {\n        throw new Exception('Arg not supported with multiple decorators');\n      }\n      extend(this.decorators, name);\n    } else {\n      this.decorators[name] = fn;\n    }\n  },\n  unregisterDecorator: function(name) {\n    delete this.decorators[name];\n  },\n  /**\n   * Reset the memory of illegal property accesses that have already been logged.\n   * @deprecated should only be used in handlebars test-cases\n   */\n  resetLoggedPropertyAccesses() {\n    resetLoggedProperties();\n  }\n};\n\nexport let log = logger.log;\n\nexport { createFrame, logger };\n","// Build out our basic SafeString type\nfunction SafeString(string) {\n  this.string = string;\n}\n\nSafeString.prototype.toString = SafeString.prototype.toHTML = function() {\n  return '' + this.string;\n};\n\nexport default SafeString;\n","export function wrapHelper(helper, transformOptionsFn) {\n  if (typeof helper !== 'function') {\n    // This should not happen, but apparently it does in https://github.com/wycats/handlebars.js/issues/1639\n    // We try to make the wrapper least-invasive by not wrapping it, if the helper is not a function.\n    return helper;\n  }\n  let wrapper = function(/* dynamic arguments */) {\n    const options = arguments[arguments.length - 1];\n    arguments[arguments.length - 1] = transformOptionsFn(options);\n    return helper.apply(this, arguments);\n  };\n  return wrapper;\n}\n","import * as Utils from './utils';\nimport Exception from './exception';\nimport {\n  COMPILER_REVISION,\n  createFrame,\n  LAST_COMPATIBLE_COMPILER_REVISION,\n  REVISION_CHANGES\n} from './base';\nimport { moveHelperToHooks } from './helpers';\nimport { wrapHelper } from './internal/wrapHelper';\nimport {\n  createProtoAccessControl,\n  resultIsAllowed\n} from './internal/proto-access';\n\nexport function checkRevision(compilerInfo) {\n  const compilerRevision = (compilerInfo && compilerInfo[0]) || 1,\n    currentRevision = COMPILER_REVISION;\n\n  if (\n    compilerRevision >= LAST_COMPATIBLE_COMPILER_REVISION &&\n    compilerRevision <= COMPILER_REVISION\n  ) {\n    return;\n  }\n\n  if (compilerRevision < LAST_COMPATIBLE_COMPILER_REVISION) {\n    const runtimeVersions = REVISION_CHANGES[currentRevision],\n      compilerVersions = REVISION_CHANGES[compilerRevision];\n    throw new Exception(\n      'Template was precompiled with an older version of Handlebars than the current runtime. ' +\n        'Please update your precompiler to a newer version (' +\n        runtimeVersions +\n        ') or downgrade your runtime to an older version (' +\n        compilerVersions +\n        ').'\n    );\n  } else {\n    // Use the embedded version info since the runtime doesn't know about this revision yet\n    throw new Exception(\n      'Template was precompiled with a newer version of Handlebars than the current runtime. ' +\n        'Please update your runtime to a newer version (' +\n        compilerInfo[1] +\n        ').'\n    );\n  }\n}\n\nexport function template(templateSpec, env) {\n  /* istanbul ignore next */\n  if (!env) {\n    throw new Exception('No environment passed to template');\n  }\n  if (!templateSpec || !templateSpec.main) {\n    throw new Exception('Unknown template object: ' + typeof templateSpec);\n  }\n\n  templateSpec.main.decorator = templateSpec.main_d;\n\n  // Note: Using env.VM references rather than local var references throughout this section to allow\n  // for external users to override these as pseudo-supported APIs.\n  env.VM.checkRevision(templateSpec.compiler);\n\n  // backwards compatibility for precompiled templates with compiler-version 7 (<4.3.0)\n  const templateWasPrecompiledWithCompilerV7 =\n    templateSpec.compiler && templateSpec.compiler[0] === 7;\n\n  function invokePartialWrapper(partial, context, options) {\n    if (options.hash) {\n      context = Utils.extend({}, context, options.hash);\n      if (options.ids) {\n        options.ids[0] = true;\n      }\n    }\n    partial = env.VM.resolvePartial.call(this, partial, context, options);\n\n    let extendedOptions = Utils.extend({}, options, {\n      hooks: this.hooks,\n      protoAccessControl: this.protoAccessControl\n    });\n\n    let result = env.VM.invokePartial.call(\n      this,\n      partial,\n      context,\n      extendedOptions\n    );\n\n    if (result == null && env.compile) {\n      options.partials[options.name] = env.compile(\n        partial,\n        templateSpec.compilerOptions,\n        env\n      );\n      result = options.partials[options.name](context, extendedOptions);\n    }\n    if (result != null) {\n      if (options.indent) {\n        let lines = result.split('\\n');\n        for (let i = 0, l = lines.length; i < l; i++) {\n          if (!lines[i] && i + 1 === l) {\n            break;\n          }\n\n          lines[i] = options.indent + lines[i];\n        }\n        result = lines.join('\\n');\n      }\n      return result;\n    } else {\n      throw new Exception(\n        'The partial ' +\n          options.name +\n          ' could not be compiled when running in runtime-only mode'\n      );\n    }\n  }\n\n  // Just add water\n  let container = {\n    strict: function(obj, name, loc) {\n      if (!obj || !(name in obj)) {\n        throw new Exception('\"' + name + '\" not defined in ' + obj, {\n          loc: loc\n        });\n      }\n      return container.lookupProperty(obj, name);\n    },\n    lookupProperty: function(parent, propertyName) {\n      let result = parent[propertyName];\n      if (result == null) {\n        return result;\n      }\n      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n        return result;\n      }\n\n      if (resultIsAllowed(result, container.protoAccessControl, propertyName)) {\n        return result;\n      }\n      return undefined;\n    },\n    lookup: function(depths, name) {\n      const len = depths.length;\n      for (let i = 0; i < len; i++) {\n        let result = depths[i] && container.lookupProperty(depths[i], name);\n        if (result != null) {\n          return depths[i][name];\n        }\n      }\n    },\n    lambda: function(current, context) {\n      return typeof current === 'function' ? current.call(context) : current;\n    },\n\n    escapeExpression: Utils.escapeExpression,\n    invokePartial: invokePartialWrapper,\n\n    fn: function(i) {\n      let ret = templateSpec[i];\n      ret.decorator = templateSpec[i + '_d'];\n      return ret;\n    },\n\n    programs: [],\n    program: function(i, data, declaredBlockParams, blockParams, depths) {\n      let programWrapper = this.programs[i],\n        fn = this.fn(i);\n      if (data || depths || blockParams || declaredBlockParams) {\n        programWrapper = wrapProgram(\n          this,\n          i,\n          fn,\n          data,\n          declaredBlockParams,\n          blockParams,\n          depths\n        );\n      } else if (!programWrapper) {\n        programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n      }\n      return programWrapper;\n    },\n\n    data: function(value, depth) {\n      while (value && depth--) {\n        value = value._parent;\n      }\n      return value;\n    },\n    mergeIfNeeded: function(param, common) {\n      let obj = param || common;\n\n      if (param && common && param !== common) {\n        obj = Utils.extend({}, common, param);\n      }\n\n      return obj;\n    },\n    // An empty object to use as replacement for null-contexts\n    nullContext: Object.seal({}),\n\n    noop: env.VM.noop,\n    compilerInfo: templateSpec.compiler\n  };\n\n  function ret(context, options = {}) {\n    let data = options.data;\n\n    ret._setup(options);\n    if (!options.partial && templateSpec.useData) {\n      data = initData(context, data);\n    }\n    let depths,\n      blockParams = templateSpec.useBlockParams ? [] : undefined;\n    if (templateSpec.useDepths) {\n      if (options.depths) {\n        depths =\n          context != options.depths[0]\n            ? [context].concat(options.depths)\n            : options.depths;\n      } else {\n        depths = [context];\n      }\n    }\n\n    function main(context /*, options*/) {\n      return (\n        '' +\n        templateSpec.main(\n          container,\n          context,\n          container.helpers,\n          container.partials,\n          data,\n          blockParams,\n          depths\n        )\n      );\n    }\n\n    main = executeDecorators(\n      templateSpec.main,\n      main,\n      container,\n      options.depths || [],\n      data,\n      blockParams\n    );\n    return main(context, options);\n  }\n\n  ret.isTop = true;\n\n  ret._setup = function(options) {\n    if (!options.partial) {\n      let mergedHelpers = Utils.extend({}, env.helpers, options.helpers);\n      wrapHelpersToPassLookupProperty(mergedHelpers, container);\n      container.helpers = mergedHelpers;\n\n      if (templateSpec.usePartial) {\n        // Use mergeIfNeeded here to prevent compiling global partials multiple times\n        container.partials = container.mergeIfNeeded(\n          options.partials,\n          env.partials\n        );\n      }\n      if (templateSpec.usePartial || templateSpec.useDecorators) {\n        container.decorators = Utils.extend(\n          {},\n          env.decorators,\n          options.decorators\n        );\n      }\n\n      container.hooks = {};\n      container.protoAccessControl = createProtoAccessControl(options);\n\n      let keepHelperInHelpers =\n        options.allowCallsToHelperMissing ||\n        templateWasPrecompiledWithCompilerV7;\n      moveHelperToHooks(container, 'helperMissing', keepHelperInHelpers);\n      moveHelperToHooks(container, 'blockHelperMissing', keepHelperInHelpers);\n    } else {\n      container.protoAccessControl = options.protoAccessControl; // internal option\n      container.helpers = options.helpers;\n      container.partials = options.partials;\n      container.decorators = options.decorators;\n      container.hooks = options.hooks;\n    }\n  };\n\n  ret._child = function(i, data, blockParams, depths) {\n    if (templateSpec.useBlockParams && !blockParams) {\n      throw new Exception('must pass block params');\n    }\n    if (templateSpec.useDepths && !depths) {\n      throw new Exception('must pass parent depths');\n    }\n\n    return wrapProgram(\n      container,\n      i,\n      templateSpec[i],\n      data,\n      0,\n      blockParams,\n      depths\n    );\n  };\n  return ret;\n}\n\nexport function wrapProgram(\n  container,\n  i,\n  fn,\n  data,\n  declaredBlockParams,\n  blockParams,\n  depths\n) {\n  function prog(context, options = {}) {\n    let currentDepths = depths;\n    if (\n      depths &&\n      context != depths[0] &&\n      !(context === container.nullContext && depths[0] === null)\n    ) {\n      currentDepths = [context].concat(depths);\n    }\n\n    return fn(\n      container,\n      context,\n      container.helpers,\n      container.partials,\n      options.data || data,\n      blockParams && [options.blockParams].concat(blockParams),\n      currentDepths\n    );\n  }\n\n  prog = executeDecorators(fn, prog, container, depths, data, blockParams);\n\n  prog.program = i;\n  prog.depth = depths ? depths.length : 0;\n  prog.blockParams = declaredBlockParams || 0;\n  return prog;\n}\n\n/**\n * This is currently part of the official API, therefore implementation details should not be changed.\n */\nexport function resolvePartial(partial, context, options) {\n  if (!partial) {\n    if (options.name === '@partial-block') {\n      partial = options.data['partial-block'];\n    } else {\n      partial = options.partials[options.name];\n    }\n  } else if (!partial.call && !options.name) {\n    // This is a dynamic partial that returned a string\n    options.name = partial;\n    partial = options.partials[partial];\n  }\n  return partial;\n}\n\nexport function invokePartial(partial, context, options) {\n  // Use the current closure context to save the partial-block if this partial\n  const currentPartialBlock = options.data && options.data['partial-block'];\n  options.partial = true;\n  if (options.ids) {\n    options.data.contextPath = options.ids[0] || options.data.contextPath;\n  }\n\n  let partialBlock;\n  if (options.fn && options.fn !== noop) {\n    options.data = createFrame(options.data);\n    // Wrapper function to get access to currentPartialBlock from the closure\n    let fn = options.fn;\n    partialBlock = options.data['partial-block'] = function partialBlockWrapper(\n      context,\n      options = {}\n    ) {\n      // Restore the partial-block from the closure for the execution of the block\n      // i.e. the part inside the block of the partial call.\n      options.data = createFrame(options.data);\n      options.data['partial-block'] = currentPartialBlock;\n      return fn(context, options);\n    };\n    if (fn.partials) {\n      options.partials = Utils.extend({}, options.partials, fn.partials);\n    }\n  }\n\n  if (partial === undefined && partialBlock) {\n    partial = partialBlock;\n  }\n\n  if (partial === undefined) {\n    throw new Exception('The partial ' + options.name + ' could not be found');\n  } else if (partial instanceof Function) {\n    return partial(context, options);\n  }\n}\n\nexport function noop() {\n  return '';\n}\n\nfunction initData(context, data) {\n  if (!data || !('root' in data)) {\n    data = data ? createFrame(data) : {};\n    data.root = context;\n  }\n  return data;\n}\n\nfunction executeDecorators(fn, prog, container, depths, data, blockParams) {\n  if (fn.decorator) {\n    let props = {};\n    prog = fn.decorator(\n      prog,\n      props,\n      container,\n      depths && depths[0],\n      data,\n      blockParams,\n      depths\n    );\n    Utils.extend(prog, props);\n  }\n  return prog;\n}\n\nfunction wrapHelpersToPassLookupProperty(mergedHelpers, container) {\n  Object.keys(mergedHelpers).forEach(helperName => {\n    let helper = mergedHelpers[helperName];\n    mergedHelpers[helperName] = passLookupPropertyOption(helper, container);\n  });\n}\n\nfunction passLookupPropertyOption(helper, container) {\n  const lookupProperty = container.lookupProperty;\n  return wrapHelper(helper, options => {\n    return Utils.extend({ lookupProperty }, options);\n  });\n}\n","/* global globalThis */\nexport default function(Handlebars) {\n  /* istanbul ignore next */\n  // https://mathiasbynens.be/notes/globalthis\n  (function() {\n    if (typeof globalThis === 'object') return;\n    Object.prototype.__defineGetter__('__magic__', function() {\n      return this;\n    });\n    __magic__.globalThis = __magic__; // eslint-disable-line no-undef\n    delete Object.prototype.__magic__;\n  })();\n\n  const $Handlebars = globalThis.Handlebars;\n\n  /* istanbul ignore next */\n  Handlebars.noConflict = function() {\n    if (globalThis.Handlebars === Handlebars) {\n      globalThis.Handlebars = $Handlebars;\n    }\n    return Handlebars;\n  };\n}\n","import * as base from './handlebars/base';\n\n// Each of these augment the Handlebars object. No need to setup here.\n// (This is done to easily share code between commonjs and browse envs)\nimport SafeString from './handlebars/safe-string';\nimport Exception from './handlebars/exception';\nimport * as Utils from './handlebars/utils';\nimport * as runtime from './handlebars/runtime';\n\nimport noConflict from './handlebars/no-conflict';\n\n// For compatibility and usage outside of module systems, make the Handlebars object a namespace\nfunction create() {\n  let hb = new base.HandlebarsEnvironment();\n\n  Utils.extend(hb, base);\n  hb.SafeString = SafeString;\n  hb.Exception = Exception;\n  hb.Utils = Utils;\n  hb.escapeExpression = Utils.escapeExpression;\n\n  hb.VM = runtime;\n  hb.template = function(spec) {\n    return runtime.template(spec, hb);\n  };\n\n  return hb;\n}\n\nlet inst = create();\ninst.create = create;\n\nnoConflict(inst);\n\ninst['default'] = inst;\n\nexport default inst;\n","let AST = {\n  // Public API used to evaluate derived attributes regarding AST nodes\n  helpers: {\n    // a mustache is definitely a helper if:\n    // * it is an eligible helper, and\n    // * it has at least one parameter or hash segment\n    helperExpression: function(node) {\n      return (\n        node.type === 'SubExpression' ||\n        ((node.type === 'MustacheStatement' ||\n          node.type === 'BlockStatement') &&\n          !!((node.params && node.params.length) || node.hash))\n      );\n    },\n\n    scopedId: function(path) {\n      return /^\\.|this\\b/.test(path.original);\n    },\n\n    // an ID is simple if it only has one part, and that part is not\n    // `..` or `this`.\n    simpleId: function(path) {\n      return (\n        path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth\n      );\n    }\n  }\n};\n\n// Must be exported as an object rather than the root of the module as the jison lexer\n// must modify the object to operate properly.\nexport default AST;\n","// File ignored in coverage tests via setting in .istanbul.yml\n/* Jison generated parser */\nvar handlebars = (function(){\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"root\":3,\"program\":4,\"EOF\":5,\"program_repetition0\":6,\"statement\":7,\"mustache\":8,\"block\":9,\"rawBlock\":10,\"partial\":11,\"partialBlock\":12,\"content\":13,\"COMMENT\":14,\"CONTENT\":15,\"openRawBlock\":16,\"rawBlock_repetition0\":17,\"END_RAW_BLOCK\":18,\"OPEN_RAW_BLOCK\":19,\"helperName\":20,\"openRawBlock_repetition0\":21,\"openRawBlock_option0\":22,\"CLOSE_RAW_BLOCK\":23,\"openBlock\":24,\"block_option0\":25,\"closeBlock\":26,\"openInverse\":27,\"block_option1\":28,\"OPEN_BLOCK\":29,\"openBlock_repetition0\":30,\"openBlock_option0\":31,\"openBlock_option1\":32,\"CLOSE\":33,\"OPEN_INVERSE\":34,\"openInverse_repetition0\":35,\"openInverse_option0\":36,\"openInverse_option1\":37,\"openInverseChain\":38,\"OPEN_INVERSE_CHAIN\":39,\"openInverseChain_repetition0\":40,\"openInverseChain_option0\":41,\"openInverseChain_option1\":42,\"inverseAndProgram\":43,\"INVERSE\":44,\"inverseChain\":45,\"inverseChain_option0\":46,\"OPEN_ENDBLOCK\":47,\"OPEN\":48,\"mustache_repetition0\":49,\"mustache_option0\":50,\"OPEN_UNESCAPED\":51,\"mustache_repetition1\":52,\"mustache_option1\":53,\"CLOSE_UNESCAPED\":54,\"OPEN_PARTIAL\":55,\"partialName\":56,\"partial_repetition0\":57,\"partial_option0\":58,\"openPartialBlock\":59,\"OPEN_PARTIAL_BLOCK\":60,\"openPartialBlock_repetition0\":61,\"openPartialBlock_option0\":62,\"param\":63,\"sexpr\":64,\"OPEN_SEXPR\":65,\"sexpr_repetition0\":66,\"sexpr_option0\":67,\"CLOSE_SEXPR\":68,\"hash\":69,\"hash_repetition_plus0\":70,\"hashSegment\":71,\"ID\":72,\"EQUALS\":73,\"blockParams\":74,\"OPEN_BLOCK_PARAMS\":75,\"blockParams_repetition_plus0\":76,\"CLOSE_BLOCK_PARAMS\":77,\"path\":78,\"dataName\":79,\"STRING\":80,\"NUMBER\":81,\"BOOLEAN\":82,\"UNDEFINED\":83,\"NULL\":84,\"DATA\":85,\"pathSegments\":86,\"SEP\":87,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",14:\"COMMENT\",15:\"CONTENT\",18:\"END_RAW_BLOCK\",19:\"OPEN_RAW_BLOCK\",23:\"CLOSE_RAW_BLOCK\",29:\"OPEN_BLOCK\",33:\"CLOSE\",34:\"OPEN_INVERSE\",39:\"OPEN_INVERSE_CHAIN\",44:\"INVERSE\",47:\"OPEN_ENDBLOCK\",48:\"OPEN\",51:\"OPEN_UNESCAPED\",54:\"CLOSE_UNESCAPED\",55:\"OPEN_PARTIAL\",60:\"OPEN_PARTIAL_BLOCK\",65:\"OPEN_SEXPR\",68:\"CLOSE_SEXPR\",72:\"ID\",73:\"EQUALS\",75:\"OPEN_BLOCK_PARAMS\",77:\"CLOSE_BLOCK_PARAMS\",80:\"STRING\",81:\"NUMBER\",82:\"BOOLEAN\",83:\"UNDEFINED\",84:\"NULL\",85:\"DATA\",87:\"SEP\"},\nproductions_: [0,[3,2],[4,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[13,1],[10,3],[16,5],[9,4],[9,4],[24,6],[27,6],[38,6],[43,2],[45,3],[45,1],[26,3],[8,5],[8,5],[11,5],[12,3],[59,5],[63,1],[63,1],[64,5],[69,1],[71,3],[74,3],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[56,1],[56,1],[79,2],[78,1],[86,3],[86,1],[6,0],[6,2],[17,0],[17,2],[21,0],[21,2],[22,0],[22,1],[25,0],[25,1],[28,0],[28,1],[30,0],[30,2],[31,0],[31,1],[32,0],[32,1],[35,0],[35,2],[36,0],[36,1],[37,0],[37,1],[40,0],[40,2],[41,0],[41,1],[42,0],[42,1],[46,0],[46,1],[49,0],[49,2],[50,0],[50,1],[52,0],[52,2],[53,0],[53,1],[57,0],[57,2],[58,0],[58,1],[61,0],[61,2],[62,0],[62,1],[66,0],[66,2],[67,0],[67,1],[70,1],[70,2],[76,1],[76,2]],\nperformAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$\n) {\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: return $$[$0-1]; \nbreak;\ncase 2:this.$ = yy.prepareProgram($$[$0]);\nbreak;\ncase 3:this.$ = $$[$0];\nbreak;\ncase 4:this.$ = $$[$0];\nbreak;\ncase 5:this.$ = $$[$0];\nbreak;\ncase 6:this.$ = $$[$0];\nbreak;\ncase 7:this.$ = $$[$0];\nbreak;\ncase 8:this.$ = $$[$0];\nbreak;\ncase 9:\n    this.$ = {\n      type: 'CommentStatement',\n      value: yy.stripComment($$[$0]),\n      strip: yy.stripFlags($$[$0], $$[$0]),\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 10:\n    this.$ = {\n      type: 'ContentStatement',\n      original: $$[$0],\n      value: $$[$0],\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 11:this.$ = yy.prepareRawBlock($$[$0-2], $$[$0-1], $$[$0], this._$);\nbreak;\ncase 12:this.$ = { path: $$[$0-3], params: $$[$0-2], hash: $$[$0-1] };\nbreak;\ncase 13:this.$ = yy.prepareBlock($$[$0-3], $$[$0-2], $$[$0-1], $$[$0], false, this._$);\nbreak;\ncase 14:this.$ = yy.prepareBlock($$[$0-3], $$[$0-2], $$[$0-1], $$[$0], true, this._$);\nbreak;\ncase 15:this.$ = { open: $$[$0-5], path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 16:this.$ = { path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 17:this.$ = { path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 18:this.$ = { strip: yy.stripFlags($$[$0-1], $$[$0-1]), program: $$[$0] };\nbreak;\ncase 19:\n    var inverse = yy.prepareBlock($$[$0-2], $$[$0-1], $$[$0], $$[$0], false, this._$),\n        program = yy.prepareProgram([inverse], $$[$0-1].loc);\n    program.chained = true;\n\n    this.$ = { strip: $$[$0-2].strip, program: program, chain: true };\n  \nbreak;\ncase 20:this.$ = $$[$0];\nbreak;\ncase 21:this.$ = {path: $$[$0-1], strip: yy.stripFlags($$[$0-2], $$[$0])};\nbreak;\ncase 22:this.$ = yy.prepareMustache($$[$0-3], $$[$0-2], $$[$0-1], $$[$0-4], yy.stripFlags($$[$0-4], $$[$0]), this._$);\nbreak;\ncase 23:this.$ = yy.prepareMustache($$[$0-3], $$[$0-2], $$[$0-1], $$[$0-4], yy.stripFlags($$[$0-4], $$[$0]), this._$);\nbreak;\ncase 24:\n    this.$ = {\n      type: 'PartialStatement',\n      name: $$[$0-3],\n      params: $$[$0-2],\n      hash: $$[$0-1],\n      indent: '',\n      strip: yy.stripFlags($$[$0-4], $$[$0]),\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 25:this.$ = yy.preparePartialBlock($$[$0-2], $$[$0-1], $$[$0], this._$);\nbreak;\ncase 26:this.$ = { path: $$[$0-3], params: $$[$0-2], hash: $$[$0-1], strip: yy.stripFlags($$[$0-4], $$[$0]) };\nbreak;\ncase 27:this.$ = $$[$0];\nbreak;\ncase 28:this.$ = $$[$0];\nbreak;\ncase 29:\n    this.$ = {\n      type: 'SubExpression',\n      path: $$[$0-3],\n      params: $$[$0-2],\n      hash: $$[$0-1],\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 30:this.$ = {type: 'Hash', pairs: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 31:this.$ = {type: 'HashPair', key: yy.id($$[$0-2]), value: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 32:this.$ = yy.id($$[$0-1]);\nbreak;\ncase 33:this.$ = $$[$0];\nbreak;\ncase 34:this.$ = $$[$0];\nbreak;\ncase 35:this.$ = {type: 'StringLiteral', value: $$[$0], original: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 36:this.$ = {type: 'NumberLiteral', value: Number($$[$0]), original: Number($$[$0]), loc: yy.locInfo(this._$)};\nbreak;\ncase 37:this.$ = {type: 'BooleanLiteral', value: $$[$0] === 'true', original: $$[$0] === 'true', loc: yy.locInfo(this._$)};\nbreak;\ncase 38:this.$ = {type: 'UndefinedLiteral', original: undefined, value: undefined, loc: yy.locInfo(this._$)};\nbreak;\ncase 39:this.$ = {type: 'NullLiteral', original: null, value: null, loc: yy.locInfo(this._$)};\nbreak;\ncase 40:this.$ = $$[$0];\nbreak;\ncase 41:this.$ = $$[$0];\nbreak;\ncase 42:this.$ = yy.preparePath(true, $$[$0], this._$);\nbreak;\ncase 43:this.$ = yy.preparePath(false, $$[$0], this._$);\nbreak;\ncase 44: $$[$0-2].push({part: yy.id($$[$0]), original: $$[$0], separator: $$[$0-1]}); this.$ = $$[$0-2]; \nbreak;\ncase 45:this.$ = [{part: yy.id($$[$0]), original: $$[$0]}];\nbreak;\ncase 46:this.$ = [];\nbreak;\ncase 47:$$[$0-1].push($$[$0]);\nbreak;\ncase 48:this.$ = [];\nbreak;\ncase 49:$$[$0-1].push($$[$0]);\nbreak;\ncase 50:this.$ = [];\nbreak;\ncase 51:$$[$0-1].push($$[$0]);\nbreak;\ncase 58:this.$ = [];\nbreak;\ncase 59:$$[$0-1].push($$[$0]);\nbreak;\ncase 64:this.$ = [];\nbreak;\ncase 65:$$[$0-1].push($$[$0]);\nbreak;\ncase 70:this.$ = [];\nbreak;\ncase 71:$$[$0-1].push($$[$0]);\nbreak;\ncase 78:this.$ = [];\nbreak;\ncase 79:$$[$0-1].push($$[$0]);\nbreak;\ncase 82:this.$ = [];\nbreak;\ncase 83:$$[$0-1].push($$[$0]);\nbreak;\ncase 86:this.$ = [];\nbreak;\ncase 87:$$[$0-1].push($$[$0]);\nbreak;\ncase 90:this.$ = [];\nbreak;\ncase 91:$$[$0-1].push($$[$0]);\nbreak;\ncase 94:this.$ = [];\nbreak;\ncase 95:$$[$0-1].push($$[$0]);\nbreak;\ncase 98:this.$ = [$$[$0]];\nbreak;\ncase 99:$$[$0-1].push($$[$0]);\nbreak;\ncase 100:this.$ = [$$[$0]];\nbreak;\ncase 101:$$[$0-1].push($$[$0]);\nbreak;\n}\n},\ntable: [{3:1,4:2,5:[2,46],6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{1:[3]},{5:[1,4]},{5:[2,2],7:5,8:6,9:7,10:8,11:9,12:10,13:11,14:[1,12],15:[1,20],16:17,19:[1,23],24:15,27:16,29:[1,21],34:[1,22],39:[2,2],44:[2,2],47:[2,2],48:[1,13],51:[1,14],55:[1,18],59:19,60:[1,24]},{1:[2,1]},{5:[2,47],14:[2,47],15:[2,47],19:[2,47],29:[2,47],34:[2,47],39:[2,47],44:[2,47],47:[2,47],48:[2,47],51:[2,47],55:[2,47],60:[2,47]},{5:[2,3],14:[2,3],15:[2,3],19:[2,3],29:[2,3],34:[2,3],39:[2,3],44:[2,3],47:[2,3],48:[2,3],51:[2,3],55:[2,3],60:[2,3]},{5:[2,4],14:[2,4],15:[2,4],19:[2,4],29:[2,4],34:[2,4],39:[2,4],44:[2,4],47:[2,4],48:[2,4],51:[2,4],55:[2,4],60:[2,4]},{5:[2,5],14:[2,5],15:[2,5],19:[2,5],29:[2,5],34:[2,5],39:[2,5],44:[2,5],47:[2,5],48:[2,5],51:[2,5],55:[2,5],60:[2,5]},{5:[2,6],14:[2,6],15:[2,6],19:[2,6],29:[2,6],34:[2,6],39:[2,6],44:[2,6],47:[2,6],48:[2,6],51:[2,6],55:[2,6],60:[2,6]},{5:[2,7],14:[2,7],15:[2,7],19:[2,7],29:[2,7],34:[2,7],39:[2,7],44:[2,7],47:[2,7],48:[2,7],51:[2,7],55:[2,7],60:[2,7]},{5:[2,8],14:[2,8],15:[2,8],19:[2,8],29:[2,8],34:[2,8],39:[2,8],44:[2,8],47:[2,8],48:[2,8],51:[2,8],55:[2,8],60:[2,8]},{5:[2,9],14:[2,9],15:[2,9],19:[2,9],29:[2,9],34:[2,9],39:[2,9],44:[2,9],47:[2,9],48:[2,9],51:[2,9],55:[2,9],60:[2,9]},{20:25,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:36,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:37,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{4:38,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{15:[2,48],17:39,18:[2,48]},{20:41,56:40,64:42,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:44,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{5:[2,10],14:[2,10],15:[2,10],18:[2,10],19:[2,10],29:[2,10],34:[2,10],39:[2,10],44:[2,10],47:[2,10],48:[2,10],51:[2,10],55:[2,10],60:[2,10]},{20:45,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:46,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:47,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:41,56:48,64:42,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[2,78],49:49,65:[2,78],72:[2,78],80:[2,78],81:[2,78],82:[2,78],83:[2,78],84:[2,78],85:[2,78]},{23:[2,33],33:[2,33],54:[2,33],65:[2,33],68:[2,33],72:[2,33],75:[2,33],80:[2,33],81:[2,33],82:[2,33],83:[2,33],84:[2,33],85:[2,33]},{23:[2,34],33:[2,34],54:[2,34],65:[2,34],68:[2,34],72:[2,34],75:[2,34],80:[2,34],81:[2,34],82:[2,34],83:[2,34],84:[2,34],85:[2,34]},{23:[2,35],33:[2,35],54:[2,35],65:[2,35],68:[2,35],72:[2,35],75:[2,35],80:[2,35],81:[2,35],82:[2,35],83:[2,35],84:[2,35],85:[2,35]},{23:[2,36],33:[2,36],54:[2,36],65:[2,36],68:[2,36],72:[2,36],75:[2,36],80:[2,36],81:[2,36],82:[2,36],83:[2,36],84:[2,36],85:[2,36]},{23:[2,37],33:[2,37],54:[2,37],65:[2,37],68:[2,37],72:[2,37],75:[2,37],80:[2,37],81:[2,37],82:[2,37],83:[2,37],84:[2,37],85:[2,37]},{23:[2,38],33:[2,38],54:[2,38],65:[2,38],68:[2,38],72:[2,38],75:[2,38],80:[2,38],81:[2,38],82:[2,38],83:[2,38],84:[2,38],85:[2,38]},{23:[2,39],33:[2,39],54:[2,39],65:[2,39],68:[2,39],72:[2,39],75:[2,39],80:[2,39],81:[2,39],82:[2,39],83:[2,39],84:[2,39],85:[2,39]},{23:[2,43],33:[2,43],54:[2,43],65:[2,43],68:[2,43],72:[2,43],75:[2,43],80:[2,43],81:[2,43],82:[2,43],83:[2,43],84:[2,43],85:[2,43],87:[1,50]},{72:[1,35],86:51},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{52:52,54:[2,82],65:[2,82],72:[2,82],80:[2,82],81:[2,82],82:[2,82],83:[2,82],84:[2,82],85:[2,82]},{25:53,38:55,39:[1,57],43:56,44:[1,58],45:54,47:[2,54]},{28:59,43:60,44:[1,58],47:[2,56]},{13:62,15:[1,20],18:[1,61]},{33:[2,86],57:63,65:[2,86],72:[2,86],80:[2,86],81:[2,86],82:[2,86],83:[2,86],84:[2,86],85:[2,86]},{33:[2,40],65:[2,40],72:[2,40],80:[2,40],81:[2,40],82:[2,40],83:[2,40],84:[2,40],85:[2,40]},{33:[2,41],65:[2,41],72:[2,41],80:[2,41],81:[2,41],82:[2,41],83:[2,41],84:[2,41],85:[2,41]},{20:64,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:65,47:[1,66]},{30:67,33:[2,58],65:[2,58],72:[2,58],75:[2,58],80:[2,58],81:[2,58],82:[2,58],83:[2,58],84:[2,58],85:[2,58]},{33:[2,64],35:68,65:[2,64],72:[2,64],75:[2,64],80:[2,64],81:[2,64],82:[2,64],83:[2,64],84:[2,64],85:[2,64]},{21:69,23:[2,50],65:[2,50],72:[2,50],80:[2,50],81:[2,50],82:[2,50],83:[2,50],84:[2,50],85:[2,50]},{33:[2,90],61:70,65:[2,90],72:[2,90],80:[2,90],81:[2,90],82:[2,90],83:[2,90],84:[2,90],85:[2,90]},{20:74,33:[2,80],50:71,63:72,64:75,65:[1,43],69:73,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{72:[1,79]},{23:[2,42],33:[2,42],54:[2,42],65:[2,42],68:[2,42],72:[2,42],75:[2,42],80:[2,42],81:[2,42],82:[2,42],83:[2,42],84:[2,42],85:[2,42],87:[1,50]},{20:74,53:80,54:[2,84],63:81,64:75,65:[1,43],69:82,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:83,47:[1,66]},{47:[2,55]},{4:84,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{47:[2,20]},{20:85,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:86,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{26:87,47:[1,66]},{47:[2,57]},{5:[2,11],14:[2,11],15:[2,11],19:[2,11],29:[2,11],34:[2,11],39:[2,11],44:[2,11],47:[2,11],48:[2,11],51:[2,11],55:[2,11],60:[2,11]},{15:[2,49],18:[2,49]},{20:74,33:[2,88],58:88,63:89,64:75,65:[1,43],69:90,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{65:[2,94],66:91,68:[2,94],72:[2,94],80:[2,94],81:[2,94],82:[2,94],83:[2,94],84:[2,94],85:[2,94]},{5:[2,25],14:[2,25],15:[2,25],19:[2,25],29:[2,25],34:[2,25],39:[2,25],44:[2,25],47:[2,25],48:[2,25],51:[2,25],55:[2,25],60:[2,25]},{20:92,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,31:93,33:[2,60],63:94,64:75,65:[1,43],69:95,70:76,71:77,72:[1,78],75:[2,60],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,33:[2,66],36:96,63:97,64:75,65:[1,43],69:98,70:76,71:77,72:[1,78],75:[2,66],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,22:99,23:[2,52],63:100,64:75,65:[1,43],69:101,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,33:[2,92],62:102,63:103,64:75,65:[1,43],69:104,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,105]},{33:[2,79],65:[2,79],72:[2,79],80:[2,79],81:[2,79],82:[2,79],83:[2,79],84:[2,79],85:[2,79]},{33:[2,81]},{23:[2,27],33:[2,27],54:[2,27],65:[2,27],68:[2,27],72:[2,27],75:[2,27],80:[2,27],81:[2,27],82:[2,27],83:[2,27],84:[2,27],85:[2,27]},{23:[2,28],33:[2,28],54:[2,28],65:[2,28],68:[2,28],72:[2,28],75:[2,28],80:[2,28],81:[2,28],82:[2,28],83:[2,28],84:[2,28],85:[2,28]},{23:[2,30],33:[2,30],54:[2,30],68:[2,30],71:106,72:[1,107],75:[2,30]},{23:[2,98],33:[2,98],54:[2,98],68:[2,98],72:[2,98],75:[2,98]},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],73:[1,108],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{23:[2,44],33:[2,44],54:[2,44],65:[2,44],68:[2,44],72:[2,44],75:[2,44],80:[2,44],81:[2,44],82:[2,44],83:[2,44],84:[2,44],85:[2,44],87:[2,44]},{54:[1,109]},{54:[2,83],65:[2,83],72:[2,83],80:[2,83],81:[2,83],82:[2,83],83:[2,83],84:[2,83],85:[2,83]},{54:[2,85]},{5:[2,13],14:[2,13],15:[2,13],19:[2,13],29:[2,13],34:[2,13],39:[2,13],44:[2,13],47:[2,13],48:[2,13],51:[2,13],55:[2,13],60:[2,13]},{38:55,39:[1,57],43:56,44:[1,58],45:111,46:110,47:[2,76]},{33:[2,70],40:112,65:[2,70],72:[2,70],75:[2,70],80:[2,70],81:[2,70],82:[2,70],83:[2,70],84:[2,70],85:[2,70]},{47:[2,18]},{5:[2,14],14:[2,14],15:[2,14],19:[2,14],29:[2,14],34:[2,14],39:[2,14],44:[2,14],47:[2,14],48:[2,14],51:[2,14],55:[2,14],60:[2,14]},{33:[1,113]},{33:[2,87],65:[2,87],72:[2,87],80:[2,87],81:[2,87],82:[2,87],83:[2,87],84:[2,87],85:[2,87]},{33:[2,89]},{20:74,63:115,64:75,65:[1,43],67:114,68:[2,96],69:116,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,117]},{32:118,33:[2,62],74:119,75:[1,120]},{33:[2,59],65:[2,59],72:[2,59],75:[2,59],80:[2,59],81:[2,59],82:[2,59],83:[2,59],84:[2,59],85:[2,59]},{33:[2,61],75:[2,61]},{33:[2,68],37:121,74:122,75:[1,120]},{33:[2,65],65:[2,65],72:[2,65],75:[2,65],80:[2,65],81:[2,65],82:[2,65],83:[2,65],84:[2,65],85:[2,65]},{33:[2,67],75:[2,67]},{23:[1,123]},{23:[2,51],65:[2,51],72:[2,51],80:[2,51],81:[2,51],82:[2,51],83:[2,51],84:[2,51],85:[2,51]},{23:[2,53]},{33:[1,124]},{33:[2,91],65:[2,91],72:[2,91],80:[2,91],81:[2,91],82:[2,91],83:[2,91],84:[2,91],85:[2,91]},{33:[2,93]},{5:[2,22],14:[2,22],15:[2,22],19:[2,22],29:[2,22],34:[2,22],39:[2,22],44:[2,22],47:[2,22],48:[2,22],51:[2,22],55:[2,22],60:[2,22]},{23:[2,99],33:[2,99],54:[2,99],68:[2,99],72:[2,99],75:[2,99]},{73:[1,108]},{20:74,63:125,64:75,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,23],14:[2,23],15:[2,23],19:[2,23],29:[2,23],34:[2,23],39:[2,23],44:[2,23],47:[2,23],48:[2,23],51:[2,23],55:[2,23],60:[2,23]},{47:[2,19]},{47:[2,77]},{20:74,33:[2,72],41:126,63:127,64:75,65:[1,43],69:128,70:76,71:77,72:[1,78],75:[2,72],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,24],14:[2,24],15:[2,24],19:[2,24],29:[2,24],34:[2,24],39:[2,24],44:[2,24],47:[2,24],48:[2,24],51:[2,24],55:[2,24],60:[2,24]},{68:[1,129]},{65:[2,95],68:[2,95],72:[2,95],80:[2,95],81:[2,95],82:[2,95],83:[2,95],84:[2,95],85:[2,95]},{68:[2,97]},{5:[2,21],14:[2,21],15:[2,21],19:[2,21],29:[2,21],34:[2,21],39:[2,21],44:[2,21],47:[2,21],48:[2,21],51:[2,21],55:[2,21],60:[2,21]},{33:[1,130]},{33:[2,63]},{72:[1,132],76:131},{33:[1,133]},{33:[2,69]},{15:[2,12],18:[2,12]},{14:[2,26],15:[2,26],19:[2,26],29:[2,26],34:[2,26],47:[2,26],48:[2,26],51:[2,26],55:[2,26],60:[2,26]},{23:[2,31],33:[2,31],54:[2,31],68:[2,31],72:[2,31],75:[2,31]},{33:[2,74],42:134,74:135,75:[1,120]},{33:[2,71],65:[2,71],72:[2,71],75:[2,71],80:[2,71],81:[2,71],82:[2,71],83:[2,71],84:[2,71],85:[2,71]},{33:[2,73],75:[2,73]},{23:[2,29],33:[2,29],54:[2,29],65:[2,29],68:[2,29],72:[2,29],75:[2,29],80:[2,29],81:[2,29],82:[2,29],83:[2,29],84:[2,29],85:[2,29]},{14:[2,15],15:[2,15],19:[2,15],29:[2,15],34:[2,15],39:[2,15],44:[2,15],47:[2,15],48:[2,15],51:[2,15],55:[2,15],60:[2,15]},{72:[1,137],77:[1,136]},{72:[2,100],77:[2,100]},{14:[2,16],15:[2,16],19:[2,16],29:[2,16],34:[2,16],44:[2,16],47:[2,16],48:[2,16],51:[2,16],55:[2,16],60:[2,16]},{33:[1,138]},{33:[2,75]},{33:[2,32]},{72:[2,101],77:[2,101]},{14:[2,17],15:[2,17],19:[2,17],29:[2,17],34:[2,17],39:[2,17],44:[2,17],47:[2,17],48:[2,17],51:[2,17],55:[2,17],60:[2,17]}],\ndefaultActions: {4:[2,1],54:[2,55],56:[2,20],60:[2,57],73:[2,81],82:[2,85],86:[2,18],90:[2,89],101:[2,53],104:[2,93],110:[2,19],111:[2,77],116:[2,97],119:[2,63],122:[2,69],135:[2,75],136:[2,32]},\nparseError: function parseError (str, hash) {\n    throw new Error(str);\n},\nparse: function parse(input) {\n    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    this.lexer.setInput(input);\n    this.lexer.yy = this.yy;\n    this.yy.lexer = this.lexer;\n    this.yy.parser = this;\n    if (typeof this.lexer.yylloc == \"undefined\")\n        this.lexer.yylloc = {};\n    var yyloc = this.lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = this.lexer.options && this.lexer.options.ranges;\n    if (typeof this.yy.parseError === \"function\")\n        this.parseError = this.yy.parseError;\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    function lex() {\n        var token;\n        token = self.lexer.lex() || 1;\n        if (typeof token !== \"number\") {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == \"undefined\") {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n            var errStr = \"\";\n            if (!recovering) {\n                expected = [];\n                for (p in table[state])\n                    if (this.terminals_[p] && p > 2) {\n                        expected.push(\"'\" + this.terminals_[p] + \"'\");\n                    }\n                if (this.lexer.showPosition) {\n                    errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + this.lexer.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n                } else {\n                    errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == 1?\"end of input\":\"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n                }\n                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});\n            }\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(this.lexer.yytext);\n            lstack.push(this.lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = this.lexer.yyleng;\n                yytext = this.lexer.yytext;\n                yylineno = this.lexer.yylineno;\n                yyloc = this.lexer.yylloc;\n                if (recovering > 0)\n                    recovering--;\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};\n            if (ranges) {\n                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n            }\n            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n            if (typeof r !== \"undefined\") {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}\n};\n/* Jison generated lexer */\nvar lexer = (function(){\nvar lexer = ({EOF:1,\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\nsetInput:function (input) {\n        this._input = input;\n        this._more = this._less = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};\n        if (this.options.ranges) this.yylloc.range = [0,0];\n        this.offset = 0;\n        return this;\n    },\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) this.yylloc.range[1]++;\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length-1);\n        this.matched = this.matched.substr(0, this.matched.length-1);\n\n        if (lines.length-1) this.yylineno -= lines.length-1;\n        var r = this.yylloc.range;\n\n        this.yylloc = {first_line: this.yylloc.first_line,\n          last_line: this.yylineno+1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ?\n              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:\n              this.yylloc.first_column - len\n          };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        return this;\n    },\nmore:function () {\n        this._more = true;\n        return this;\n    },\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\\n/g, \"\");\n    },\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c+\"^\";\n    },\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) this.done = true;\n\n        var token,\n            match,\n            tempMatch,\n            index,\n            col,\n            lines;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i=0;i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (!this.options.flex) break;\n            }\n        }\n        if (match) {\n            lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n            if (lines) this.yylineno += lines.length;\n            this.yylloc = {first_line: this.yylloc.last_line,\n                           last_line: this.yylineno+1,\n                           first_column: this.yylloc.last_column,\n                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length};\n            this.yytext += match[0];\n            this.match += match[0];\n            this.matches = match;\n            this.yyleng = this.yytext.length;\n            if (this.options.ranges) {\n                this.yylloc.range = [this.offset, this.offset += this.yyleng];\n            }\n            this._more = false;\n            this._input = this._input.slice(match[0].length);\n            this.matched += match[0];\n            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);\n            if (this.done && this._input) this.done = false;\n            if (token) return token;\n            else return;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\\n'+this.showPosition(),\n                    {text: \"\", token: null, line: this.yylineno});\n        }\n    },\nlex:function lex () {\n        var r = this.next();\n        if (typeof r !== 'undefined') {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\npopState:function popState () {\n        return this.conditionStack.pop();\n    },\n_currentRules:function _currentRules () {\n        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;\n    },\ntopState:function () {\n        return this.conditionStack[this.conditionStack.length-2];\n    },\npushState:function begin (condition) {\n        this.begin(condition);\n    }});\nlexer.options = {};\nlexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START\n) {\n\n\nfunction strip(start, end) {\n  return yy_.yytext = yy_.yytext.substring(start, yy_.yyleng - end + start);\n}\n\n\nvar YYSTATE=YY_START\nswitch($avoiding_name_collisions) {\ncase 0:\n                                   if(yy_.yytext.slice(-2) === \"\\\\\\\\\") {\n                                     strip(0,1);\n                                     this.begin(\"mu\");\n                                   } else if(yy_.yytext.slice(-1) === \"\\\\\") {\n                                     strip(0,1);\n                                     this.begin(\"emu\");\n                                   } else {\n                                     this.begin(\"mu\");\n                                   }\n                                   if(yy_.yytext) return 15;\n                                 \nbreak;\ncase 1:return 15;\nbreak;\ncase 2:\n                                   this.popState();\n                                   return 15;\n                                 \nbreak;\ncase 3:this.begin('raw'); return 15;\nbreak;\ncase 4:\n                                  this.popState();\n                                  // Should be using `this.topState()` below, but it currently\n                                  // returns the second top instead of the first top. Opened an\n                                  // issue about it at https://github.com/zaach/jison/issues/291\n                                  if (this.conditionStack[this.conditionStack.length-1] === 'raw') {\n                                    return 15;\n                                  } else {\n                                    strip(5, 9);\n                                    return 'END_RAW_BLOCK';\n                                  }\n                                 \nbreak;\ncase 5: return 15; \nbreak;\ncase 6:\n  this.popState();\n  return 14;\n\nbreak;\ncase 7:return 65;\nbreak;\ncase 8:return 68;\nbreak;\ncase 9: return 19; \nbreak;\ncase 10:\n                                  this.popState();\n                                  this.begin('raw');\n                                  return 23;\n                                 \nbreak;\ncase 11:return 55;\nbreak;\ncase 12:return 60;\nbreak;\ncase 13:return 29;\nbreak;\ncase 14:return 47;\nbreak;\ncase 15:this.popState(); return 44;\nbreak;\ncase 16:this.popState(); return 44;\nbreak;\ncase 17:return 34;\nbreak;\ncase 18:return 39;\nbreak;\ncase 19:return 51;\nbreak;\ncase 20:return 48;\nbreak;\ncase 21:\n  this.unput(yy_.yytext);\n  this.popState();\n  this.begin('com');\n\nbreak;\ncase 22:\n  this.popState();\n  return 14;\n\nbreak;\ncase 23:return 48;\nbreak;\ncase 24:return 73;\nbreak;\ncase 25:return 72;\nbreak;\ncase 26:return 72;\nbreak;\ncase 27:return 87;\nbreak;\ncase 28:// ignore whitespace\nbreak;\ncase 29:this.popState(); return 54;\nbreak;\ncase 30:this.popState(); return 33;\nbreak;\ncase 31:yy_.yytext = strip(1,2).replace(/\\\\\"/g,'\"'); return 80;\nbreak;\ncase 32:yy_.yytext = strip(1,2).replace(/\\\\'/g,\"'\"); return 80;\nbreak;\ncase 33:return 85;\nbreak;\ncase 34:return 82;\nbreak;\ncase 35:return 82;\nbreak;\ncase 36:return 83;\nbreak;\ncase 37:return 84;\nbreak;\ncase 38:return 81;\nbreak;\ncase 39:return 75;\nbreak;\ncase 40:return 77;\nbreak;\ncase 41:return 72;\nbreak;\ncase 42:yy_.yytext = yy_.yytext.replace(/\\\\([\\\\\\]])/g,'$1'); return 72;\nbreak;\ncase 43:return 'INVALID';\nbreak;\ncase 44:return 5;\nbreak;\n}\n};\nlexer.rules = [/^(?:[^\\x00]*?(?=(\\{\\{)))/,/^(?:[^\\x00]+)/,/^(?:[^\\x00]{2,}?(?=(\\{\\{|\\\\\\{\\{|\\\\\\\\\\{\\{|$)))/,/^(?:\\{\\{\\{\\{(?=[^/]))/,/^(?:\\{\\{\\{\\{\\/[^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=[=}\\s\\/.])\\}\\}\\}\\})/,/^(?:[^\\x00]+?(?=(\\{\\{\\{\\{)))/,/^(?:[\\s\\S]*?--(~)?\\}\\})/,/^(?:\\()/,/^(?:\\))/,/^(?:\\{\\{\\{\\{)/,/^(?:\\}\\}\\}\\})/,/^(?:\\{\\{(~)?>)/,/^(?:\\{\\{(~)?#>)/,/^(?:\\{\\{(~)?#\\*?)/,/^(?:\\{\\{(~)?\\/)/,/^(?:\\{\\{(~)?\\^\\s*(~)?\\}\\})/,/^(?:\\{\\{(~)?\\s*else\\s*(~)?\\}\\})/,/^(?:\\{\\{(~)?\\^)/,/^(?:\\{\\{(~)?\\s*else\\b)/,/^(?:\\{\\{(~)?\\{)/,/^(?:\\{\\{(~)?&)/,/^(?:\\{\\{(~)?!--)/,/^(?:\\{\\{(~)?![\\s\\S]*?\\}\\})/,/^(?:\\{\\{(~)?\\*?)/,/^(?:=)/,/^(?:\\.\\.)/,/^(?:\\.(?=([=~}\\s\\/.)|])))/,/^(?:[\\/.])/,/^(?:\\s+)/,/^(?:\\}(~)?\\}\\})/,/^(?:(~)?\\}\\})/,/^(?:\"(\\\\[\"]|[^\"])*\")/,/^(?:'(\\\\[']|[^'])*')/,/^(?:@)/,/^(?:true(?=([~}\\s)])))/,/^(?:false(?=([~}\\s)])))/,/^(?:undefined(?=([~}\\s)])))/,/^(?:null(?=([~}\\s)])))/,/^(?:-?[0-9]+(?:\\.[0-9]+)?(?=([~}\\s)])))/,/^(?:as\\s+\\|)/,/^(?:\\|)/,/^(?:([^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=([=~}\\s\\/.)|]))))/,/^(?:\\[(\\\\\\]|[^\\]])*\\])/,/^(?:.)/,/^(?:$)/];\nlexer.conditions = {\"mu\":{\"rules\":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],\"inclusive\":false},\"emu\":{\"rules\":[2],\"inclusive\":false},\"com\":{\"rules\":[6],\"inclusive\":false},\"raw\":{\"rules\":[3,4,5],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,44],\"inclusive\":true}};\nreturn lexer;})()\nparser.lexer = lexer;\nfunction Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();export default handlebars;\n","import Exception from '../exception';\n\nfunction Visitor() {\n  this.parents = [];\n}\n\nVisitor.prototype = {\n  constructor: Visitor,\n  mutating: false,\n\n  // Visits a given value. If mutating, will replace the value if necessary.\n  acceptKey: function(node, name) {\n    let value = this.accept(node[name]);\n    if (this.mutating) {\n      // Hacky sanity check: This may have a few false positives for type for the helper\n      // methods but will generally do the right thing without a lot of overhead.\n      if (value && !Visitor.prototype[value.type]) {\n        throw new Exception(\n          'Unexpected node type \"' +\n            value.type +\n            '\" found when accepting ' +\n            name +\n            ' on ' +\n            node.type\n        );\n      }\n      node[name] = value;\n    }\n  },\n\n  // Performs an accept operation with added sanity check to ensure\n  // required keys are not removed.\n  acceptRequired: function(node, name) {\n    this.acceptKey(node, name);\n\n    if (!node[name]) {\n      throw new Exception(node.type + ' requires ' + name);\n    }\n  },\n\n  // Traverses a given array. If mutating, empty respnses will be removed\n  // for child elements.\n  acceptArray: function(array) {\n    for (let i = 0, l = array.length; i < l; i++) {\n      this.acceptKey(array, i);\n\n      if (!array[i]) {\n        array.splice(i, 1);\n        i--;\n        l--;\n      }\n    }\n  },\n\n  accept: function(object) {\n    if (!object) {\n      return;\n    }\n\n    /* istanbul ignore next: Sanity code */\n    if (!this[object.type]) {\n      throw new Exception('Unknown type: ' + object.type, object);\n    }\n\n    if (this.current) {\n      this.parents.unshift(this.current);\n    }\n    this.current = object;\n\n    let ret = this[object.type](object);\n\n    this.current = this.parents.shift();\n\n    if (!this.mutating || ret) {\n      return ret;\n    } else if (ret !== false) {\n      return object;\n    }\n  },\n\n  Program: function(program) {\n    this.acceptArray(program.body);\n  },\n\n  MustacheStatement: visitSubExpression,\n  Decorator: visitSubExpression,\n\n  BlockStatement: visitBlock,\n  DecoratorBlock: visitBlock,\n\n  PartialStatement: visitPartial,\n  PartialBlockStatement: function(partial) {\n    visitPartial.call(this, partial);\n\n    this.acceptKey(partial, 'program');\n  },\n\n  ContentStatement: function(/* content */) {},\n  CommentStatement: function(/* comment */) {},\n\n  SubExpression: visitSubExpression,\n\n  PathExpression: function(/* path */) {},\n\n  StringLiteral: function(/* string */) {},\n  NumberLiteral: function(/* number */) {},\n  BooleanLiteral: function(/* bool */) {},\n  UndefinedLiteral: function(/* literal */) {},\n  NullLiteral: function(/* literal */) {},\n\n  Hash: function(hash) {\n    this.acceptArray(hash.pairs);\n  },\n  HashPair: function(pair) {\n    this.acceptRequired(pair, 'value');\n  }\n};\n\nfunction visitSubExpression(mustache) {\n  this.acceptRequired(mustache, 'path');\n  this.acceptArray(mustache.params);\n  this.acceptKey(mustache, 'hash');\n}\nfunction visitBlock(block) {\n  visitSubExpression.call(this, block);\n\n  this.acceptKey(block, 'program');\n  this.acceptKey(block, 'inverse');\n}\nfunction visitPartial(partial) {\n  this.acceptRequired(partial, 'name');\n  this.acceptArray(partial.params);\n  this.acceptKey(partial, 'hash');\n}\n\nexport default Visitor;\n","import Visitor from './visitor';\n\nfunction WhitespaceControl(options = {}) {\n  this.options = options;\n}\nWhitespaceControl.prototype = new Visitor();\n\nWhitespaceControl.prototype.Program = function(program) {\n  const doStandalone = !this.options.ignoreStandalone;\n\n  let isRoot = !this.isRootSeen;\n  this.isRootSeen = true;\n\n  let body = program.body;\n  for (let i = 0, l = body.length; i < l; i++) {\n    let current = body[i],\n      strip = this.accept(current);\n\n    if (!strip) {\n      continue;\n    }\n\n    let _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),\n      _isNextWhitespace = isNextWhitespace(body, i, isRoot),\n      openStandalone = strip.openStandalone && _isPrevWhitespace,\n      closeStandalone = strip.closeStandalone && _isNextWhitespace,\n      inlineStandalone =\n        strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;\n\n    if (strip.close) {\n      omitRight(body, i, true);\n    }\n    if (strip.open) {\n      omitLeft(body, i, true);\n    }\n\n    if (doStandalone && inlineStandalone) {\n      omitRight(body, i);\n\n      if (omitLeft(body, i)) {\n        // If we are on a standalone node, save the indent info for partials\n        if (current.type === 'PartialStatement') {\n          // Pull out the whitespace from the final line\n          current.indent = /([ \\t]+$)/.exec(body[i - 1].original)[1];\n        }\n      }\n    }\n    if (doStandalone && openStandalone) {\n      omitRight((current.program || current.inverse).body);\n\n      // Strip out the previous content node if it's whitespace only\n      omitLeft(body, i);\n    }\n    if (doStandalone && closeStandalone) {\n      // Always strip the next node\n      omitRight(body, i);\n\n      omitLeft((current.inverse || current.program).body);\n    }\n  }\n\n  return program;\n};\n\nWhitespaceControl.prototype.BlockStatement = WhitespaceControl.prototype.DecoratorBlock = WhitespaceControl.prototype.PartialBlockStatement = function(\n  block\n) {\n  this.accept(block.program);\n  this.accept(block.inverse);\n\n  // Find the inverse program that is involed with whitespace stripping.\n  let program = block.program || block.inverse,\n    inverse = block.program && block.inverse,\n    firstInverse = inverse,\n    lastInverse = inverse;\n\n  if (inverse && inverse.chained) {\n    firstInverse = inverse.body[0].program;\n\n    // Walk the inverse chain to find the last inverse that is actually in the chain.\n    while (lastInverse.chained) {\n      lastInverse = lastInverse.body[lastInverse.body.length - 1].program;\n    }\n  }\n\n  let strip = {\n    open: block.openStrip.open,\n    close: block.closeStrip.close,\n\n    // Determine the standalone candiacy. Basically flag our content as being possibly standalone\n    // so our parent can determine if we actually are standalone\n    openStandalone: isNextWhitespace(program.body),\n    closeStandalone: isPrevWhitespace((firstInverse || program).body)\n  };\n\n  if (block.openStrip.close) {\n    omitRight(program.body, null, true);\n  }\n\n  if (inverse) {\n    let inverseStrip = block.inverseStrip;\n\n    if (inverseStrip.open) {\n      omitLeft(program.body, null, true);\n    }\n\n    if (inverseStrip.close) {\n      omitRight(firstInverse.body, null, true);\n    }\n    if (block.closeStrip.open) {\n      omitLeft(lastInverse.body, null, true);\n    }\n\n    // Find standalone else statments\n    if (\n      !this.options.ignoreStandalone &&\n      isPrevWhitespace(program.body) &&\n      isNextWhitespace(firstInverse.body)\n    ) {\n      omitLeft(program.body);\n      omitRight(firstInverse.body);\n    }\n  } else if (block.closeStrip.open) {\n    omitLeft(program.body, null, true);\n  }\n\n  return strip;\n};\n\nWhitespaceControl.prototype.Decorator = WhitespaceControl.prototype.MustacheStatement = function(\n  mustache\n) {\n  return mustache.strip;\n};\n\nWhitespaceControl.prototype.PartialStatement = WhitespaceControl.prototype.CommentStatement = function(\n  node\n) {\n  /* istanbul ignore next */\n  let strip = node.strip || {};\n  return {\n    inlineStandalone: true,\n    open: strip.open,\n    close: strip.close\n  };\n};\n\nfunction isPrevWhitespace(body, i, isRoot) {\n  if (i === undefined) {\n    i = body.length;\n  }\n\n  // Nodes that end with newlines are considered whitespace (but are special\n  // cased for strip operations)\n  let prev = body[i - 1],\n    sibling = body[i - 2];\n  if (!prev) {\n    return isRoot;\n  }\n\n  if (prev.type === 'ContentStatement') {\n    return (sibling || !isRoot ? /\\r?\\n\\s*?$/ : /(^|\\r?\\n)\\s*?$/).test(\n      prev.original\n    );\n  }\n}\nfunction isNextWhitespace(body, i, isRoot) {\n  if (i === undefined) {\n    i = -1;\n  }\n\n  let next = body[i + 1],\n    sibling = body[i + 2];\n  if (!next) {\n    return isRoot;\n  }\n\n  if (next.type === 'ContentStatement') {\n    return (sibling || !isRoot ? /^\\s*?\\r?\\n/ : /^\\s*?(\\r?\\n|$)/).test(\n      next.original\n    );\n  }\n}\n\n// Marks the node to the right of the position as omitted.\n// I.e. {{foo}}' ' will mark the ' ' node as omitted.\n//\n// If i is undefined, then the first child will be marked as such.\n//\n// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n// content is met.\nfunction omitRight(body, i, multiple) {\n  let current = body[i == null ? 0 : i + 1];\n  if (\n    !current ||\n    current.type !== 'ContentStatement' ||\n    (!multiple && current.rightStripped)\n  ) {\n    return;\n  }\n\n  let original = current.value;\n  current.value = current.value.replace(\n    multiple ? /^\\s+/ : /^[ \\t]*\\r?\\n?/,\n    ''\n  );\n  current.rightStripped = current.value !== original;\n}\n\n// Marks the node to the left of the position as omitted.\n// I.e. ' '{{foo}} will mark the ' ' node as omitted.\n//\n// If i is undefined then the last child will be marked as such.\n//\n// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n// content is met.\nfunction omitLeft(body, i, multiple) {\n  let current = body[i == null ? body.length - 1 : i - 1];\n  if (\n    !current ||\n    current.type !== 'ContentStatement' ||\n    (!multiple && current.leftStripped)\n  ) {\n    return;\n  }\n\n  // We omit the last node if it's whitespace only and not preceded by a non-content node.\n  let original = current.value;\n  current.value = current.value.replace(multiple ? /\\s+$/ : /[ \\t]+$/, '');\n  current.leftStripped = current.value !== original;\n  return current.leftStripped;\n}\n\nexport default WhitespaceControl;\n","import Exception from '../exception';\n\nfunction validateClose(open, close) {\n  close = close.path ? close.path.original : close;\n\n  if (open.path.original !== close) {\n    let errorNode = { loc: open.path.loc };\n\n    throw new Exception(\n      open.path.original + \" doesn't match \" + close,\n      errorNode\n    );\n  }\n}\n\nexport function SourceLocation(source, locInfo) {\n  this.source = source;\n  this.start = {\n    line: locInfo.first_line,\n    column: locInfo.first_column\n  };\n  this.end = {\n    line: locInfo.last_line,\n    column: locInfo.last_column\n  };\n}\n\nexport function id(token) {\n  if (/^\\[.*\\]$/.test(token)) {\n    return token.substring(1, token.length - 1);\n  } else {\n    return token;\n  }\n}\n\nexport function stripFlags(open, close) {\n  return {\n    open: open.charAt(2) === '~',\n    close: close.charAt(close.length - 3) === '~'\n  };\n}\n\nexport function stripComment(comment) {\n  return comment.replace(/^\\{\\{~?!-?-?/, '').replace(/-?-?~?\\}\\}$/, '');\n}\n\nexport function preparePath(data, parts, loc) {\n  loc = this.locInfo(loc);\n\n  let original = data ? '@' : '',\n    dig = [],\n    depth = 0;\n\n  for (let i = 0, l = parts.length; i < l; i++) {\n    let part = parts[i].part,\n      // If we have [] syntax then we do not treat path references as operators,\n      // i.e. foo.[this] resolves to approximately context.foo['this']\n      isLiteral = parts[i].original !== part;\n    original += (parts[i].separator || '') + part;\n\n    if (!isLiteral && (part === '..' || part === '.' || part === 'this')) {\n      if (dig.length > 0) {\n        throw new Exception('Invalid path: ' + original, { loc });\n      } else if (part === '..') {\n        depth++;\n      }\n    } else {\n      dig.push(part);\n    }\n  }\n\n  return {\n    type: 'PathExpression',\n    data,\n    depth,\n    parts: dig,\n    original,\n    loc\n  };\n}\n\nexport function prepareMustache(path, params, hash, open, strip, locInfo) {\n  // Must use charAt to support IE pre-10\n  let escapeFlag = open.charAt(3) || open.charAt(2),\n    escaped = escapeFlag !== '{' && escapeFlag !== '&';\n\n  let decorator = /\\*/.test(open);\n  return {\n    type: decorator ? 'Decorator' : 'MustacheStatement',\n    path,\n    params,\n    hash,\n    escaped,\n    strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\nexport function prepareRawBlock(openRawBlock, contents, close, locInfo) {\n  validateClose(openRawBlock, close);\n\n  locInfo = this.locInfo(locInfo);\n  let program = {\n    type: 'Program',\n    body: contents,\n    strip: {},\n    loc: locInfo\n  };\n\n  return {\n    type: 'BlockStatement',\n    path: openRawBlock.path,\n    params: openRawBlock.params,\n    hash: openRawBlock.hash,\n    program,\n    openStrip: {},\n    inverseStrip: {},\n    closeStrip: {},\n    loc: locInfo\n  };\n}\n\nexport function prepareBlock(\n  openBlock,\n  program,\n  inverseAndProgram,\n  close,\n  inverted,\n  locInfo\n) {\n  if (close && close.path) {\n    validateClose(openBlock, close);\n  }\n\n  let decorator = /\\*/.test(openBlock.open);\n\n  program.blockParams = openBlock.blockParams;\n\n  let inverse, inverseStrip;\n\n  if (inverseAndProgram) {\n    if (decorator) {\n      throw new Exception(\n        'Unexpected inverse block on decorator',\n        inverseAndProgram\n      );\n    }\n\n    if (inverseAndProgram.chain) {\n      inverseAndProgram.program.body[0].closeStrip = close.strip;\n    }\n\n    inverseStrip = inverseAndProgram.strip;\n    inverse = inverseAndProgram.program;\n  }\n\n  if (inverted) {\n    inverted = inverse;\n    inverse = program;\n    program = inverted;\n  }\n\n  return {\n    type: decorator ? 'DecoratorBlock' : 'BlockStatement',\n    path: openBlock.path,\n    params: openBlock.params,\n    hash: openBlock.hash,\n    program,\n    inverse,\n    openStrip: openBlock.strip,\n    inverseStrip,\n    closeStrip: close && close.strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\nexport function prepareProgram(statements, loc) {\n  if (!loc && statements.length) {\n    const firstLoc = statements[0].loc,\n      lastLoc = statements[statements.length - 1].loc;\n\n    /* istanbul ignore else */\n    if (firstLoc && lastLoc) {\n      loc = {\n        source: firstLoc.source,\n        start: {\n          line: firstLoc.start.line,\n          column: firstLoc.start.column\n        },\n        end: {\n          line: lastLoc.end.line,\n          column: lastLoc.end.column\n        }\n      };\n    }\n  }\n\n  return {\n    type: 'Program',\n    body: statements,\n    strip: {},\n    loc: loc\n  };\n}\n\nexport function preparePartialBlock(open, program, close, locInfo) {\n  validateClose(open, close);\n\n  return {\n    type: 'PartialBlockStatement',\n    name: open.path,\n    params: open.params,\n    hash: open.hash,\n    program,\n    openStrip: open.strip,\n    closeStrip: close && close.strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n","import parser from './parser';\nimport WhitespaceControl from './whitespace-control';\nimport * as Helpers from './helpers';\nimport { extend } from '../utils';\n\nexport { parser };\n\nlet yy = {};\nextend(yy, Helpers);\n\nexport function parseWithoutProcessing(input, options) {\n  // Just return if an already-compiled AST was passed in.\n  if (input.type === 'Program') {\n    return input;\n  }\n\n  parser.yy = yy;\n\n  // Altering the shared object here, but this is ok as parser is a sync operation\n  yy.locInfo = function(locInfo) {\n    return new yy.SourceLocation(options && options.srcName, locInfo);\n  };\n\n  let ast = parser.parse(input);\n\n  return ast;\n}\n\nexport function parse(input, options) {\n  let ast = parseWithoutProcessing(input, options);\n  let strip = new WhitespaceControl(options);\n\n  return strip.accept(ast);\n}\n","/* eslint-disable new-cap */\n\nimport Exception from '../exception';\nimport { isArray, indexOf, extend } from '../utils';\nimport AST from './ast';\n\nconst slice = [].slice;\n\nexport function Compiler() {}\n\n// the foundHelper register will disambiguate helper lookup from finding a\n// function in a context. This is necessary for mustache compatibility, which\n// requires that context functions in blocks are evaluated by blockHelperMissing,\n// and then proceed as if the resulting value was provided to blockHelperMissing.\n\nCompiler.prototype = {\n  compiler: Compiler,\n\n  equals: function(other) {\n    let len = this.opcodes.length;\n    if (other.opcodes.length !== len) {\n      return false;\n    }\n\n    for (let i = 0; i < len; i++) {\n      let opcode = this.opcodes[i],\n        otherOpcode = other.opcodes[i];\n      if (\n        opcode.opcode !== otherOpcode.opcode ||\n        !argEquals(opcode.args, otherOpcode.args)\n      ) {\n        return false;\n      }\n    }\n\n    // We know that length is the same between the two arrays because they are directly tied\n    // to the opcode behavior above.\n    len = this.children.length;\n    for (let i = 0; i < len; i++) {\n      if (!this.children[i].equals(other.children[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  guid: 0,\n\n  compile: function(program, options) {\n    this.sourceNode = [];\n    this.opcodes = [];\n    this.children = [];\n    this.options = options;\n    this.stringParams = options.stringParams;\n    this.trackIds = options.trackIds;\n\n    options.blockParams = options.blockParams || [];\n\n    options.knownHelpers = extend(\n      Object.create(null),\n      {\n        helperMissing: true,\n        blockHelperMissing: true,\n        each: true,\n        if: true,\n        unless: true,\n        with: true,\n        log: true,\n        lookup: true\n      },\n      options.knownHelpers\n    );\n\n    return this.accept(program);\n  },\n\n  compileProgram: function(program) {\n    let childCompiler = new this.compiler(), // eslint-disable-line new-cap\n      result = childCompiler.compile(program, this.options),\n      guid = this.guid++;\n\n    this.usePartial = this.usePartial || result.usePartial;\n\n    this.children[guid] = result;\n    this.useDepths = this.useDepths || result.useDepths;\n\n    return guid;\n  },\n\n  accept: function(node) {\n    /* istanbul ignore next: Sanity code */\n    if (!this[node.type]) {\n      throw new Exception('Unknown type: ' + node.type, node);\n    }\n\n    this.sourceNode.unshift(node);\n    let ret = this[node.type](node);\n    this.sourceNode.shift();\n    return ret;\n  },\n\n  Program: function(program) {\n    this.options.blockParams.unshift(program.blockParams);\n\n    let body = program.body,\n      bodyLength = body.length;\n    for (let i = 0; i < bodyLength; i++) {\n      this.accept(body[i]);\n    }\n\n    this.options.blockParams.shift();\n\n    this.isSimple = bodyLength === 1;\n    this.blockParams = program.blockParams ? program.blockParams.length : 0;\n\n    return this;\n  },\n\n  BlockStatement: function(block) {\n    transformLiteralToPath(block);\n\n    let program = block.program,\n      inverse = block.inverse;\n\n    program = program && this.compileProgram(program);\n    inverse = inverse && this.compileProgram(inverse);\n\n    let type = this.classifySexpr(block);\n\n    if (type === 'helper') {\n      this.helperSexpr(block, program, inverse);\n    } else if (type === 'simple') {\n      this.simpleSexpr(block);\n\n      // now that the simple mustache is resolved, we need to\n      // evaluate it by executing `blockHelperMissing`\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n      this.opcode('emptyHash');\n      this.opcode('blockValue', block.path.original);\n    } else {\n      this.ambiguousSexpr(block, program, inverse);\n\n      // now that the simple mustache is resolved, we need to\n      // evaluate it by executing `blockHelperMissing`\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n      this.opcode('emptyHash');\n      this.opcode('ambiguousBlockValue');\n    }\n\n    this.opcode('append');\n  },\n\n  DecoratorBlock(decorator) {\n    let program = decorator.program && this.compileProgram(decorator.program);\n    let params = this.setupFullMustacheParams(decorator, program, undefined),\n      path = decorator.path;\n\n    this.useDecorators = true;\n    this.opcode('registerDecorator', params.length, path.original);\n  },\n\n  PartialStatement: function(partial) {\n    this.usePartial = true;\n\n    let program = partial.program;\n    if (program) {\n      program = this.compileProgram(partial.program);\n    }\n\n    let params = partial.params;\n    if (params.length > 1) {\n      throw new Exception(\n        'Unsupported number of partial arguments: ' + params.length,\n        partial\n      );\n    } else if (!params.length) {\n      if (this.options.explicitPartialContext) {\n        this.opcode('pushLiteral', 'undefined');\n      } else {\n        params.push({ type: 'PathExpression', parts: [], depth: 0 });\n      }\n    }\n\n    let partialName = partial.name.original,\n      isDynamic = partial.name.type === 'SubExpression';\n    if (isDynamic) {\n      this.accept(partial.name);\n    }\n\n    this.setupFullMustacheParams(partial, program, undefined, true);\n\n    let indent = partial.indent || '';\n    if (this.options.preventIndent && indent) {\n      this.opcode('appendContent', indent);\n      indent = '';\n    }\n\n    this.opcode('invokePartial', isDynamic, partialName, indent);\n    this.opcode('append');\n  },\n  PartialBlockStatement: function(partialBlock) {\n    this.PartialStatement(partialBlock);\n  },\n\n  MustacheStatement: function(mustache) {\n    this.SubExpression(mustache);\n\n    if (mustache.escaped && !this.options.noEscape) {\n      this.opcode('appendEscaped');\n    } else {\n      this.opcode('append');\n    }\n  },\n  Decorator(decorator) {\n    this.DecoratorBlock(decorator);\n  },\n\n  ContentStatement: function(content) {\n    if (content.value) {\n      this.opcode('appendContent', content.value);\n    }\n  },\n\n  CommentStatement: function() {},\n\n  SubExpression: function(sexpr) {\n    transformLiteralToPath(sexpr);\n    let type = this.classifySexpr(sexpr);\n\n    if (type === 'simple') {\n      this.simpleSexpr(sexpr);\n    } else if (type === 'helper') {\n      this.helperSexpr(sexpr);\n    } else {\n      this.ambiguousSexpr(sexpr);\n    }\n  },\n  ambiguousSexpr: function(sexpr, program, inverse) {\n    let path = sexpr.path,\n      name = path.parts[0],\n      isBlock = program != null || inverse != null;\n\n    this.opcode('getContext', path.depth);\n\n    this.opcode('pushProgram', program);\n    this.opcode('pushProgram', inverse);\n\n    path.strict = true;\n    this.accept(path);\n\n    this.opcode('invokeAmbiguous', name, isBlock);\n  },\n\n  simpleSexpr: function(sexpr) {\n    let path = sexpr.path;\n    path.strict = true;\n    this.accept(path);\n    this.opcode('resolvePossibleLambda');\n  },\n\n  helperSexpr: function(sexpr, program, inverse) {\n    let params = this.setupFullMustacheParams(sexpr, program, inverse),\n      path = sexpr.path,\n      name = path.parts[0];\n\n    if (this.options.knownHelpers[name]) {\n      this.opcode('invokeKnownHelper', params.length, name);\n    } else if (this.options.knownHelpersOnly) {\n      throw new Exception(\n        'You specified knownHelpersOnly, but used the unknown helper ' + name,\n        sexpr\n      );\n    } else {\n      path.strict = true;\n      path.falsy = true;\n\n      this.accept(path);\n      this.opcode(\n        'invokeHelper',\n        params.length,\n        path.original,\n        AST.helpers.simpleId(path)\n      );\n    }\n  },\n\n  PathExpression: function(path) {\n    this.addDepth(path.depth);\n    this.opcode('getContext', path.depth);\n\n    let name = path.parts[0],\n      scoped = AST.helpers.scopedId(path),\n      blockParamId = !path.depth && !scoped && this.blockParamIndex(name);\n\n    if (blockParamId) {\n      this.opcode('lookupBlockParam', blockParamId, path.parts);\n    } else if (!name) {\n      // Context reference, i.e. `{{foo .}}` or `{{foo ..}}`\n      this.opcode('pushContext');\n    } else if (path.data) {\n      this.options.data = true;\n      this.opcode('lookupData', path.depth, path.parts, path.strict);\n    } else {\n      this.opcode(\n        'lookupOnContext',\n        path.parts,\n        path.falsy,\n        path.strict,\n        scoped\n      );\n    }\n  },\n\n  StringLiteral: function(string) {\n    this.opcode('pushString', string.value);\n  },\n\n  NumberLiteral: function(number) {\n    this.opcode('pushLiteral', number.value);\n  },\n\n  BooleanLiteral: function(bool) {\n    this.opcode('pushLiteral', bool.value);\n  },\n\n  UndefinedLiteral: function() {\n    this.opcode('pushLiteral', 'undefined');\n  },\n\n  NullLiteral: function() {\n    this.opcode('pushLiteral', 'null');\n  },\n\n  Hash: function(hash) {\n    let pairs = hash.pairs,\n      i = 0,\n      l = pairs.length;\n\n    this.opcode('pushHash');\n\n    for (; i < l; i++) {\n      this.pushParam(pairs[i].value);\n    }\n    while (i--) {\n      this.opcode('assignToHash', pairs[i].key);\n    }\n    this.opcode('popHash');\n  },\n\n  // HELPERS\n  opcode: function(name) {\n    this.opcodes.push({\n      opcode: name,\n      args: slice.call(arguments, 1),\n      loc: this.sourceNode[0].loc\n    });\n  },\n\n  addDepth: function(depth) {\n    if (!depth) {\n      return;\n    }\n\n    this.useDepths = true;\n  },\n\n  classifySexpr: function(sexpr) {\n    let isSimple = AST.helpers.simpleId(sexpr.path);\n\n    let isBlockParam = isSimple && !!this.blockParamIndex(sexpr.path.parts[0]);\n\n    // a mustache is an eligible helper if:\n    // * its id is simple (a single part, not `this` or `..`)\n    let isHelper = !isBlockParam && AST.helpers.helperExpression(sexpr);\n\n    // if a mustache is an eligible helper but not a definite\n    // helper, it is ambiguous, and will be resolved in a later\n    // pass or at runtime.\n    let isEligible = !isBlockParam && (isHelper || isSimple);\n\n    // if ambiguous, we can possibly resolve the ambiguity now\n    // An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.\n    if (isEligible && !isHelper) {\n      let name = sexpr.path.parts[0],\n        options = this.options;\n      if (options.knownHelpers[name]) {\n        isHelper = true;\n      } else if (options.knownHelpersOnly) {\n        isEligible = false;\n      }\n    }\n\n    if (isHelper) {\n      return 'helper';\n    } else if (isEligible) {\n      return 'ambiguous';\n    } else {\n      return 'simple';\n    }\n  },\n\n  pushParams: function(params) {\n    for (let i = 0, l = params.length; i < l; i++) {\n      this.pushParam(params[i]);\n    }\n  },\n\n  pushParam: function(val) {\n    let value = val.value != null ? val.value : val.original || '';\n\n    if (this.stringParams) {\n      if (value.replace) {\n        value = value.replace(/^(\\.?\\.\\/)*/g, '').replace(/\\//g, '.');\n      }\n\n      if (val.depth) {\n        this.addDepth(val.depth);\n      }\n      this.opcode('getContext', val.depth || 0);\n      this.opcode('pushStringParam', value, val.type);\n\n      if (val.type === 'SubExpression') {\n        // SubExpressions get evaluated and passed in\n        // in string params mode.\n        this.accept(val);\n      }\n    } else {\n      if (this.trackIds) {\n        let blockParamIndex;\n        if (val.parts && !AST.helpers.scopedId(val) && !val.depth) {\n          blockParamIndex = this.blockParamIndex(val.parts[0]);\n        }\n        if (blockParamIndex) {\n          let blockParamChild = val.parts.slice(1).join('.');\n          this.opcode('pushId', 'BlockParam', blockParamIndex, blockParamChild);\n        } else {\n          value = val.original || value;\n          if (value.replace) {\n            value = value\n              .replace(/^this(?:\\.|$)/, '')\n              .replace(/^\\.\\//, '')\n              .replace(/^\\.$/, '');\n          }\n\n          this.opcode('pushId', val.type, value);\n        }\n      }\n      this.accept(val);\n    }\n  },\n\n  setupFullMustacheParams: function(sexpr, program, inverse, omitEmpty) {\n    let params = sexpr.params;\n    this.pushParams(params);\n\n    this.opcode('pushProgram', program);\n    this.opcode('pushProgram', inverse);\n\n    if (sexpr.hash) {\n      this.accept(sexpr.hash);\n    } else {\n      this.opcode('emptyHash', omitEmpty);\n    }\n\n    return params;\n  },\n\n  blockParamIndex: function(name) {\n    for (\n      let depth = 0, len = this.options.blockParams.length;\n      depth < len;\n      depth++\n    ) {\n      let blockParams = this.options.blockParams[depth],\n        param = blockParams && indexOf(blockParams, name);\n      if (blockParams && param >= 0) {\n        return [depth, param];\n      }\n    }\n  }\n};\n\nexport function precompile(input, options, env) {\n  if (\n    input == null ||\n    (typeof input !== 'string' && input.type !== 'Program')\n  ) {\n    throw new Exception(\n      'You must pass a string or Handlebars AST to Handlebars.precompile. You passed ' +\n        input\n    );\n  }\n\n  options = options || {};\n  if (!('data' in options)) {\n    options.data = true;\n  }\n  if (options.compat) {\n    options.useDepths = true;\n  }\n\n  let ast = env.parse(input, options),\n    environment = new env.Compiler().compile(ast, options);\n  return new env.JavaScriptCompiler().compile(environment, options);\n}\n\nexport function compile(input, options = {}, env) {\n  if (\n    input == null ||\n    (typeof input !== 'string' && input.type !== 'Program')\n  ) {\n    throw new Exception(\n      'You must pass a string or Handlebars AST to Handlebars.compile. You passed ' +\n        input\n    );\n  }\n\n  options = extend({}, options);\n  if (!('data' in options)) {\n    options.data = true;\n  }\n  if (options.compat) {\n    options.useDepths = true;\n  }\n\n  let compiled;\n\n  function compileInput() {\n    let ast = env.parse(input, options),\n      environment = new env.Compiler().compile(ast, options),\n      templateSpec = new env.JavaScriptCompiler().compile(\n        environment,\n        options,\n        undefined,\n        true\n      );\n    return env.template(templateSpec);\n  }\n\n  // Template is only compiled on first use and cached after that point.\n  function ret(context, execOptions) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled.call(this, context, execOptions);\n  }\n  ret._setup = function(setupOptions) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled._setup(setupOptions);\n  };\n  ret._child = function(i, data, blockParams, depths) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled._child(i, data, blockParams, depths);\n  };\n  return ret;\n}\n\nfunction argEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (isArray(a) && isArray(b) && a.length === b.length) {\n    for (let i = 0; i < a.length; i++) {\n      if (!argEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfunction transformLiteralToPath(sexpr) {\n  if (!sexpr.path.parts) {\n    let literal = sexpr.path;\n    // Casting to string here to make false and 0 literal values play nicely with the rest\n    // of the system.\n    sexpr.path = {\n      type: 'PathExpression',\n      data: false,\n      depth: 0,\n      parts: [literal.original + ''],\n      original: literal.original + '',\n      loc: literal.loc\n    };\n  }\n}\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","/* global define, require */\nimport { isArray } from '../utils';\n\nlet SourceNode;\n\ntry {\n  /* istanbul ignore next */\n  if (typeof define !== 'function' || !define.amd) {\n    // We don't support this in AMD environments. For these environments, we assume that\n    // they are running on the browser and thus have no need for the source-map library.\n    let SourceMap = require('source-map');\n    SourceNode = SourceMap.SourceNode;\n  }\n} catch (err) {\n  /* NOP */\n}\n\n/* istanbul ignore if: tested but not covered in istanbul due to dist build  */\nif (!SourceNode) {\n  SourceNode = function(line, column, srcFile, chunks) {\n    this.src = '';\n    if (chunks) {\n      this.add(chunks);\n    }\n  };\n  /* istanbul ignore next */\n  SourceNode.prototype = {\n    add: function(chunks) {\n      if (isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src += chunks;\n    },\n    prepend: function(chunks) {\n      if (isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src = chunks + this.src;\n    },\n    toStringWithSourceMap: function() {\n      return { code: this.toString() };\n    },\n    toString: function() {\n      return this.src;\n    }\n  };\n}\n\nfunction castChunk(chunk, codeGen, loc) {\n  if (isArray(chunk)) {\n    let ret = [];\n\n    for (let i = 0, len = chunk.length; i < len; i++) {\n      ret.push(codeGen.wrap(chunk[i], loc));\n    }\n    return ret;\n  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {\n    // Handle primitives that the SourceNode will throw up on\n    return chunk + '';\n  }\n  return chunk;\n}\n\nfunction CodeGen(srcFile) {\n  this.srcFile = srcFile;\n  this.source = [];\n}\n\nCodeGen.prototype = {\n  isEmpty() {\n    return !this.source.length;\n  },\n  prepend: function(source, loc) {\n    this.source.unshift(this.wrap(source, loc));\n  },\n  push: function(source, loc) {\n    this.source.push(this.wrap(source, loc));\n  },\n\n  merge: function() {\n    let source = this.empty();\n    this.each(function(line) {\n      source.add(['  ', line, '\\n']);\n    });\n    return source;\n  },\n\n  each: function(iter) {\n    for (let i = 0, len = this.source.length; i < len; i++) {\n      iter(this.source[i]);\n    }\n  },\n\n  empty: function() {\n    let loc = this.currentLocation || { start: {} };\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);\n  },\n  wrap: function(chunk, loc = this.currentLocation || { start: {} }) {\n    if (chunk instanceof SourceNode) {\n      return chunk;\n    }\n\n    chunk = castChunk(chunk, this, loc);\n\n    return new SourceNode(\n      loc.start.line,\n      loc.start.column,\n      this.srcFile,\n      chunk\n    );\n  },\n\n  functionCall: function(fn, type, params) {\n    params = this.generateList(params);\n    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);\n  },\n\n  quotedString: function(str) {\n    return (\n      '\"' +\n      (str + '')\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g, '\\\\\"')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/\\u2028/g, '\\\\u2028') // Per Ecma-262 7.3 + 7.8.4\n        .replace(/\\u2029/g, '\\\\u2029') +\n      '\"'\n    );\n  },\n\n  objectLiteral: function(obj) {\n    let pairs = [];\n\n    Object.keys(obj).forEach(key => {\n      let value = castChunk(obj[key], this);\n      if (value !== 'undefined') {\n        pairs.push([this.quotedString(key), ':', value]);\n      }\n    });\n\n    let ret = this.generateList(pairs);\n    ret.prepend('{');\n    ret.add('}');\n    return ret;\n  },\n\n  generateList: function(entries) {\n    let ret = this.empty();\n\n    for (let i = 0, len = entries.length; i < len; i++) {\n      if (i) {\n        ret.add(',');\n      }\n\n      ret.add(castChunk(entries[i], this));\n    }\n\n    return ret;\n  },\n\n  generateArray: function(entries) {\n    let ret = this.generateList(entries);\n    ret.prepend('[');\n    ret.add(']');\n\n    return ret;\n  }\n};\n\nexport default CodeGen;\n","import { COMPILER_REVISION, REVISION_CHANGES } from '../base';\nimport Exception from '../exception';\nimport { isArray } from '../utils';\nimport CodeGen from './code-gen';\n\nfunction Literal(value) {\n  this.value = value;\n}\n\nfunction JavaScriptCompiler() {}\n\nJavaScriptCompiler.prototype = {\n  // PUBLIC API: You can override these methods in a subclass to provide\n  // alternative compiled forms for name lookup and buffering semantics\n  nameLookup: function(parent, name /*,  type */) {\n    return this.internalNameLookup(parent, name);\n  },\n  depthedLookup: function(name) {\n    return [\n      this.aliasable('container.lookup'),\n      '(depths, ',\n      JSON.stringify(name),\n      ')'\n    ];\n  },\n\n  compilerInfo: function() {\n    const revision = COMPILER_REVISION,\n      versions = REVISION_CHANGES[revision];\n    return [revision, versions];\n  },\n\n  appendToBuffer: function(source, location, explicit) {\n    // Force a source as this simplifies the merge logic.\n    if (!isArray(source)) {\n      source = [source];\n    }\n    source = this.source.wrap(source, location);\n\n    if (this.environment.isSimple) {\n      return ['return ', source, ';'];\n    } else if (explicit) {\n      // This is a case where the buffer operation occurs as a child of another\n      // construct, generally braces. We have to explicitly output these buffer\n      // operations to ensure that the emitted code goes in the correct location.\n      return ['buffer += ', source, ';'];\n    } else {\n      source.appendToBuffer = true;\n      return source;\n    }\n  },\n\n  initializeBuffer: function() {\n    return this.quotedString('');\n  },\n  // END PUBLIC API\n  internalNameLookup: function(parent, name) {\n    this.lookupPropertyFunctionIsUsed = true;\n    return ['lookupProperty(', parent, ',', JSON.stringify(name), ')'];\n  },\n\n  lookupPropertyFunctionIsUsed: false,\n\n  compile: function(environment, options, context, asObject) {\n    this.environment = environment;\n    this.options = options;\n    this.stringParams = this.options.stringParams;\n    this.trackIds = this.options.trackIds;\n    this.precompile = !asObject;\n\n    this.name = this.environment.name;\n    this.isChild = !!context;\n    this.context = context || {\n      decorators: [],\n      programs: [],\n      environments: []\n    };\n\n    this.preamble();\n\n    this.stackSlot = 0;\n    this.stackVars = [];\n    this.aliases = {};\n    this.registers = { list: [] };\n    this.hashes = [];\n    this.compileStack = [];\n    this.inlineStack = [];\n    this.blockParams = [];\n\n    this.compileChildren(environment, options);\n\n    this.useDepths =\n      this.useDepths ||\n      environment.useDepths ||\n      environment.useDecorators ||\n      this.options.compat;\n    this.useBlockParams = this.useBlockParams || environment.useBlockParams;\n\n    let opcodes = environment.opcodes,\n      opcode,\n      firstLoc,\n      i,\n      l;\n\n    for (i = 0, l = opcodes.length; i < l; i++) {\n      opcode = opcodes[i];\n\n      this.source.currentLocation = opcode.loc;\n      firstLoc = firstLoc || opcode.loc;\n      this[opcode.opcode].apply(this, opcode.args);\n    }\n\n    // Flush any trailing content that might be pending.\n    this.source.currentLocation = firstLoc;\n    this.pushSource('');\n\n    /* istanbul ignore next */\n    if (this.stackSlot || this.inlineStack.length || this.compileStack.length) {\n      throw new Exception('Compile completed with content left on stack');\n    }\n\n    if (!this.decorators.isEmpty()) {\n      this.useDecorators = true;\n\n      this.decorators.prepend([\n        'var decorators = container.decorators, ',\n        this.lookupPropertyFunctionVarDeclaration(),\n        ';\\n'\n      ]);\n      this.decorators.push('return fn;');\n\n      if (asObject) {\n        this.decorators = Function.apply(this, [\n          'fn',\n          'props',\n          'container',\n          'depth0',\n          'data',\n          'blockParams',\n          'depths',\n          this.decorators.merge()\n        ]);\n      } else {\n        this.decorators.prepend(\n          'function(fn, props, container, depth0, data, blockParams, depths) {\\n'\n        );\n        this.decorators.push('}\\n');\n        this.decorators = this.decorators.merge();\n      }\n    } else {\n      this.decorators = undefined;\n    }\n\n    let fn = this.createFunctionContext(asObject);\n    if (!this.isChild) {\n      let ret = {\n        compiler: this.compilerInfo(),\n        main: fn\n      };\n\n      if (this.decorators) {\n        ret.main_d = this.decorators; // eslint-disable-line camelcase\n        ret.useDecorators = true;\n      }\n\n      let { programs, decorators } = this.context;\n      for (i = 0, l = programs.length; i < l; i++) {\n        if (programs[i]) {\n          ret[i] = programs[i];\n          if (decorators[i]) {\n            ret[i + '_d'] = decorators[i];\n            ret.useDecorators = true;\n          }\n        }\n      }\n\n      if (this.environment.usePartial) {\n        ret.usePartial = true;\n      }\n      if (this.options.data) {\n        ret.useData = true;\n      }\n      if (this.useDepths) {\n        ret.useDepths = true;\n      }\n      if (this.useBlockParams) {\n        ret.useBlockParams = true;\n      }\n      if (this.options.compat) {\n        ret.compat = true;\n      }\n\n      if (!asObject) {\n        ret.compiler = JSON.stringify(ret.compiler);\n\n        this.source.currentLocation = { start: { line: 1, column: 0 } };\n        ret = this.objectLiteral(ret);\n\n        if (options.srcName) {\n          ret = ret.toStringWithSourceMap({ file: options.destName });\n          ret.map = ret.map && ret.map.toString();\n        } else {\n          ret = ret.toString();\n        }\n      } else {\n        ret.compilerOptions = this.options;\n      }\n\n      return ret;\n    } else {\n      return fn;\n    }\n  },\n\n  preamble: function() {\n    // track the last context pushed into place to allow skipping the\n    // getContext opcode when it would be a noop\n    this.lastContext = 0;\n    this.source = new CodeGen(this.options.srcName);\n    this.decorators = new CodeGen(this.options.srcName);\n  },\n\n  createFunctionContext: function(asObject) {\n    let varDeclarations = '';\n\n    let locals = this.stackVars.concat(this.registers.list);\n    if (locals.length > 0) {\n      varDeclarations += ', ' + locals.join(', ');\n    }\n\n    // Generate minimizer alias mappings\n    //\n    // When using true SourceNodes, this will update all references to the given alias\n    // as the source nodes are reused in situ. For the non-source node compilation mode,\n    // aliases will not be used, but this case is already being run on the client and\n    // we aren't concern about minimizing the template size.\n    let aliasCount = 0;\n    Object.keys(this.aliases).forEach(alias => {\n      let node = this.aliases[alias];\n      if (node.children && node.referenceCount > 1) {\n        varDeclarations += ', alias' + ++aliasCount + '=' + alias;\n        node.children[0] = 'alias' + aliasCount;\n      }\n    });\n\n    if (this.lookupPropertyFunctionIsUsed) {\n      varDeclarations += ', ' + this.lookupPropertyFunctionVarDeclaration();\n    }\n\n    let params = ['container', 'depth0', 'helpers', 'partials', 'data'];\n\n    if (this.useBlockParams || this.useDepths) {\n      params.push('blockParams');\n    }\n    if (this.useDepths) {\n      params.push('depths');\n    }\n\n    // Perform a second pass over the output to merge content when possible\n    let source = this.mergeSource(varDeclarations);\n\n    if (asObject) {\n      params.push(source);\n\n      return Function.apply(this, params);\n    } else {\n      return this.source.wrap([\n        'function(',\n        params.join(','),\n        ') {\\n  ',\n        source,\n        '}'\n      ]);\n    }\n  },\n  mergeSource: function(varDeclarations) {\n    let isSimple = this.environment.isSimple,\n      appendOnly = !this.forceBuffer,\n      appendFirst,\n      sourceSeen,\n      bufferStart,\n      bufferEnd;\n    this.source.each(line => {\n      if (line.appendToBuffer) {\n        if (bufferStart) {\n          line.prepend('  + ');\n        } else {\n          bufferStart = line;\n        }\n        bufferEnd = line;\n      } else {\n        if (bufferStart) {\n          if (!sourceSeen) {\n            appendFirst = true;\n          } else {\n            bufferStart.prepend('buffer += ');\n          }\n          bufferEnd.add(';');\n          bufferStart = bufferEnd = undefined;\n        }\n\n        sourceSeen = true;\n        if (!isSimple) {\n          appendOnly = false;\n        }\n      }\n    });\n\n    if (appendOnly) {\n      if (bufferStart) {\n        bufferStart.prepend('return ');\n        bufferEnd.add(';');\n      } else if (!sourceSeen) {\n        this.source.push('return \"\";');\n      }\n    } else {\n      varDeclarations +=\n        ', buffer = ' + (appendFirst ? '' : this.initializeBuffer());\n\n      if (bufferStart) {\n        bufferStart.prepend('return buffer + ');\n        bufferEnd.add(';');\n      } else {\n        this.source.push('return buffer;');\n      }\n    }\n\n    if (varDeclarations) {\n      this.source.prepend(\n        'var ' + varDeclarations.substring(2) + (appendFirst ? '' : ';\\n')\n      );\n    }\n\n    return this.source.merge();\n  },\n\n  lookupPropertyFunctionVarDeclaration: function() {\n    return `\n      lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    }\n    `.trim();\n  },\n\n  // [blockValue]\n  //\n  // On stack, before: hash, inverse, program, value\n  // On stack, after: return value of blockHelperMissing\n  //\n  // The purpose of this opcode is to take a block of the form\n  // `{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and\n  // replace it on the stack with the result of properly\n  // invoking blockHelperMissing.\n  blockValue: function(name) {\n    let blockHelperMissing = this.aliasable(\n        'container.hooks.blockHelperMissing'\n      ),\n      params = [this.contextName(0)];\n    this.setupHelperArgs(name, 0, params);\n\n    let blockName = this.popStack();\n    params.splice(1, 0, blockName);\n\n    this.push(this.source.functionCall(blockHelperMissing, 'call', params));\n  },\n\n  // [ambiguousBlockValue]\n  //\n  // On stack, before: hash, inverse, program, value\n  // Compiler value, before: lastHelper=value of last found helper, if any\n  // On stack, after, if no lastHelper: same as [blockValue]\n  // On stack, after, if lastHelper: value\n  ambiguousBlockValue: function() {\n    // We're being a bit cheeky and reusing the options value from the prior exec\n    let blockHelperMissing = this.aliasable(\n        'container.hooks.blockHelperMissing'\n      ),\n      params = [this.contextName(0)];\n    this.setupHelperArgs('', 0, params, true);\n\n    this.flushInline();\n\n    let current = this.topStack();\n    params.splice(1, 0, current);\n\n    this.pushSource([\n      'if (!',\n      this.lastHelper,\n      ') { ',\n      current,\n      ' = ',\n      this.source.functionCall(blockHelperMissing, 'call', params),\n      '}'\n    ]);\n  },\n\n  // [appendContent]\n  //\n  // On stack, before: ...\n  // On stack, after: ...\n  //\n  // Appends the string value of `content` to the current buffer\n  appendContent: function(content) {\n    if (this.pendingContent) {\n      content = this.pendingContent + content;\n    } else {\n      this.pendingLocation = this.source.currentLocation;\n    }\n\n    this.pendingContent = content;\n  },\n\n  // [append]\n  //\n  // On stack, before: value, ...\n  // On stack, after: ...\n  //\n  // Coerces `value` to a String and appends it to the current buffer.\n  //\n  // If `value` is truthy, or 0, it is coerced into a string and appended\n  // Otherwise, the empty string is appended\n  append: function() {\n    if (this.isInline()) {\n      this.replaceStack(current => [' != null ? ', current, ' : \"\"']);\n\n      this.pushSource(this.appendToBuffer(this.popStack()));\n    } else {\n      let local = this.popStack();\n      this.pushSource([\n        'if (',\n        local,\n        ' != null) { ',\n        this.appendToBuffer(local, undefined, true),\n        ' }'\n      ]);\n      if (this.environment.isSimple) {\n        this.pushSource([\n          'else { ',\n          this.appendToBuffer(\"''\", undefined, true),\n          ' }'\n        ]);\n      }\n    }\n  },\n\n  // [appendEscaped]\n  //\n  // On stack, before: value, ...\n  // On stack, after: ...\n  //\n  // Escape `value` and append it to the buffer\n  appendEscaped: function() {\n    this.pushSource(\n      this.appendToBuffer([\n        this.aliasable('container.escapeExpression'),\n        '(',\n        this.popStack(),\n        ')'\n      ])\n    );\n  },\n\n  // [getContext]\n  //\n  // On stack, before: ...\n  // On stack, after: ...\n  // Compiler value, after: lastContext=depth\n  //\n  // Set the value of the `lastContext` compiler value to the depth\n  getContext: function(depth) {\n    this.lastContext = depth;\n  },\n\n  // [pushContext]\n  //\n  // On stack, before: ...\n  // On stack, after: currentContext, ...\n  //\n  // Pushes the value of the current context onto the stack.\n  pushContext: function() {\n    this.pushStackLiteral(this.contextName(this.lastContext));\n  },\n\n  // [lookupOnContext]\n  //\n  // On stack, before: ...\n  // On stack, after: currentContext[name], ...\n  //\n  // Looks up the value of `name` on the current context and pushes\n  // it onto the stack.\n  lookupOnContext: function(parts, falsy, strict, scoped) {\n    let i = 0;\n\n    if (!scoped && this.options.compat && !this.lastContext) {\n      // The depthed query is expected to handle the undefined logic for the root level that\n      // is implemented below, so we evaluate that directly in compat mode\n      this.push(this.depthedLookup(parts[i++]));\n    } else {\n      this.pushContext();\n    }\n\n    this.resolvePath('context', parts, i, falsy, strict);\n  },\n\n  // [lookupBlockParam]\n  //\n  // On stack, before: ...\n  // On stack, after: blockParam[name], ...\n  //\n  // Looks up the value of `parts` on the given block param and pushes\n  // it onto the stack.\n  lookupBlockParam: function(blockParamId, parts) {\n    this.useBlockParams = true;\n\n    this.push(['blockParams[', blockParamId[0], '][', blockParamId[1], ']']);\n    this.resolvePath('context', parts, 1);\n  },\n\n  // [lookupData]\n  //\n  // On stack, before: ...\n  // On stack, after: data, ...\n  //\n  // Push the data lookup operator\n  lookupData: function(depth, parts, strict) {\n    if (!depth) {\n      this.pushStackLiteral('data');\n    } else {\n      this.pushStackLiteral('container.data(data, ' + depth + ')');\n    }\n\n    this.resolvePath('data', parts, 0, true, strict);\n  },\n\n  resolvePath: function(type, parts, i, falsy, strict) {\n    if (this.options.strict || this.options.assumeObjects) {\n      this.push(\n        strictLookup(this.options.strict && strict, this, parts, i, type)\n      );\n      return;\n    }\n\n    let len = parts.length;\n    for (; i < len; i++) {\n      /* eslint-disable no-loop-func */\n      this.replaceStack(current => {\n        let lookup = this.nameLookup(current, parts[i], type);\n        // We want to ensure that zero and false are handled properly if the context (falsy flag)\n        // needs to have the special handling for these values.\n        if (!falsy) {\n          return [' != null ? ', lookup, ' : ', current];\n        } else {\n          // Otherwise we can use generic falsy handling\n          return [' && ', lookup];\n        }\n      });\n      /* eslint-enable no-loop-func */\n    }\n  },\n\n  // [resolvePossibleLambda]\n  //\n  // On stack, before: value, ...\n  // On stack, after: resolved value, ...\n  //\n  // If the `value` is a lambda, replace it on the stack by\n  // the return value of the lambda\n  resolvePossibleLambda: function() {\n    this.push([\n      this.aliasable('container.lambda'),\n      '(',\n      this.popStack(),\n      ', ',\n      this.contextName(0),\n      ')'\n    ]);\n  },\n\n  // [pushStringParam]\n  //\n  // On stack, before: ...\n  // On stack, after: string, currentContext, ...\n  //\n  // This opcode is designed for use in string mode, which\n  // provides the string value of a parameter along with its\n  // depth rather than resolving it immediately.\n  pushStringParam: function(string, type) {\n    this.pushContext();\n    this.pushString(type);\n\n    // If it's a subexpression, the string result\n    // will be pushed after this opcode.\n    if (type !== 'SubExpression') {\n      if (typeof string === 'string') {\n        this.pushString(string);\n      } else {\n        this.pushStackLiteral(string);\n      }\n    }\n  },\n\n  emptyHash: function(omitEmpty) {\n    if (this.trackIds) {\n      this.push('{}'); // hashIds\n    }\n    if (this.stringParams) {\n      this.push('{}'); // hashContexts\n      this.push('{}'); // hashTypes\n    }\n    this.pushStackLiteral(omitEmpty ? 'undefined' : '{}');\n  },\n  pushHash: function() {\n    if (this.hash) {\n      this.hashes.push(this.hash);\n    }\n    this.hash = { values: {}, types: [], contexts: [], ids: [] };\n  },\n  popHash: function() {\n    let hash = this.hash;\n    this.hash = this.hashes.pop();\n\n    if (this.trackIds) {\n      this.push(this.objectLiteral(hash.ids));\n    }\n    if (this.stringParams) {\n      this.push(this.objectLiteral(hash.contexts));\n      this.push(this.objectLiteral(hash.types));\n    }\n\n    this.push(this.objectLiteral(hash.values));\n  },\n\n  // [pushString]\n  //\n  // On stack, before: ...\n  // On stack, after: quotedString(string), ...\n  //\n  // Push a quoted version of `string` onto the stack\n  pushString: function(string) {\n    this.pushStackLiteral(this.quotedString(string));\n  },\n\n  // [pushLiteral]\n  //\n  // On stack, before: ...\n  // On stack, after: value, ...\n  //\n  // Pushes a value onto the stack. This operation prevents\n  // the compiler from creating a temporary variable to hold\n  // it.\n  pushLiteral: function(value) {\n    this.pushStackLiteral(value);\n  },\n\n  // [pushProgram]\n  //\n  // On stack, before: ...\n  // On stack, after: program(guid), ...\n  //\n  // Push a program expression onto the stack. This takes\n  // a compile-time guid and converts it into a runtime-accessible\n  // expression.\n  pushProgram: function(guid) {\n    if (guid != null) {\n      this.pushStackLiteral(this.programExpression(guid));\n    } else {\n      this.pushStackLiteral(null);\n    }\n  },\n\n  // [registerDecorator]\n  //\n  // On stack, before: hash, program, params..., ...\n  // On stack, after: ...\n  //\n  // Pops off the decorator's parameters, invokes the decorator,\n  // and inserts the decorator into the decorators list.\n  registerDecorator(paramSize, name) {\n    let foundDecorator = this.nameLookup('decorators', name, 'decorator'),\n      options = this.setupHelperArgs(name, paramSize);\n\n    this.decorators.push([\n      'fn = ',\n      this.decorators.functionCall(foundDecorator, '', [\n        'fn',\n        'props',\n        'container',\n        options\n      ]),\n      ' || fn;'\n    ]);\n  },\n\n  // [invokeHelper]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of helper invocation\n  //\n  // Pops off the helper's parameters, invokes the helper,\n  // and pushes the helper's return value onto the stack.\n  //\n  // If the helper is not found, `helperMissing` is called.\n  invokeHelper: function(paramSize, name, isSimple) {\n    let nonHelper = this.popStack(),\n      helper = this.setupHelper(paramSize, name);\n\n    let possibleFunctionCalls = [];\n\n    if (isSimple) {\n      // direct call to helper\n      possibleFunctionCalls.push(helper.name);\n    }\n    // call a function from the input object\n    possibleFunctionCalls.push(nonHelper);\n    if (!this.options.strict) {\n      possibleFunctionCalls.push(\n        this.aliasable('container.hooks.helperMissing')\n      );\n    }\n\n    let functionLookupCode = [\n      '(',\n      this.itemsSeparatedBy(possibleFunctionCalls, '||'),\n      ')'\n    ];\n    let functionCall = this.source.functionCall(\n      functionLookupCode,\n      'call',\n      helper.callParams\n    );\n    this.push(functionCall);\n  },\n\n  itemsSeparatedBy: function(items, separator) {\n    let result = [];\n    result.push(items[0]);\n    for (let i = 1; i < items.length; i++) {\n      result.push(separator, items[i]);\n    }\n    return result;\n  },\n  // [invokeKnownHelper]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of helper invocation\n  //\n  // This operation is used when the helper is known to exist,\n  // so a `helperMissing` fallback is not required.\n  invokeKnownHelper: function(paramSize, name) {\n    let helper = this.setupHelper(paramSize, name);\n    this.push(this.source.functionCall(helper.name, 'call', helper.callParams));\n  },\n\n  // [invokeAmbiguous]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of disambiguation\n  //\n  // This operation is used when an expression like `{{foo}}`\n  // is provided, but we don't know at compile-time whether it\n  // is a helper or a path.\n  //\n  // This operation emits more code than the other options,\n  // and can be avoided by passing the `knownHelpers` and\n  // `knownHelpersOnly` flags at compile-time.\n  invokeAmbiguous: function(name, helperCall) {\n    this.useRegister('helper');\n\n    let nonHelper = this.popStack();\n\n    this.emptyHash();\n    let helper = this.setupHelper(0, name, helperCall);\n\n    let helperName = (this.lastHelper = this.nameLookup(\n      'helpers',\n      name,\n      'helper'\n    ));\n\n    let lookup = ['(', '(helper = ', helperName, ' || ', nonHelper, ')'];\n    if (!this.options.strict) {\n      lookup[0] = '(helper = ';\n      lookup.push(\n        ' != null ? helper : ',\n        this.aliasable('container.hooks.helperMissing')\n      );\n    }\n\n    this.push([\n      '(',\n      lookup,\n      helper.paramsInit ? ['),(', helper.paramsInit] : [],\n      '),',\n      '(typeof helper === ',\n      this.aliasable('\"function\"'),\n      ' ? ',\n      this.source.functionCall('helper', 'call', helper.callParams),\n      ' : helper))'\n    ]);\n  },\n\n  // [invokePartial]\n  //\n  // On stack, before: context, ...\n  // On stack after: result of partial invocation\n  //\n  // This operation pops off a context, invokes a partial with that context,\n  // and pushes the result of the invocation back.\n  invokePartial: function(isDynamic, name, indent) {\n    let params = [],\n      options = this.setupParams(name, 1, params);\n\n    if (isDynamic) {\n      name = this.popStack();\n      delete options.name;\n    }\n\n    if (indent) {\n      options.indent = JSON.stringify(indent);\n    }\n    options.helpers = 'helpers';\n    options.partials = 'partials';\n    options.decorators = 'container.decorators';\n\n    if (!isDynamic) {\n      params.unshift(this.nameLookup('partials', name, 'partial'));\n    } else {\n      params.unshift(name);\n    }\n\n    if (this.options.compat) {\n      options.depths = 'depths';\n    }\n    options = this.objectLiteral(options);\n    params.push(options);\n\n    this.push(this.source.functionCall('container.invokePartial', '', params));\n  },\n\n  // [assignToHash]\n  //\n  // On stack, before: value, ..., hash, ...\n  // On stack, after: ..., hash, ...\n  //\n  // Pops a value off the stack and assigns it to the current hash\n  assignToHash: function(key) {\n    let value = this.popStack(),\n      context,\n      type,\n      id;\n\n    if (this.trackIds) {\n      id = this.popStack();\n    }\n    if (this.stringParams) {\n      type = this.popStack();\n      context = this.popStack();\n    }\n\n    let hash = this.hash;\n    if (context) {\n      hash.contexts[key] = context;\n    }\n    if (type) {\n      hash.types[key] = type;\n    }\n    if (id) {\n      hash.ids[key] = id;\n    }\n    hash.values[key] = value;\n  },\n\n  pushId: function(type, name, child) {\n    if (type === 'BlockParam') {\n      this.pushStackLiteral(\n        'blockParams[' +\n          name[0] +\n          '].path[' +\n          name[1] +\n          ']' +\n          (child ? ' + ' + JSON.stringify('.' + child) : '')\n      );\n    } else if (type === 'PathExpression') {\n      this.pushString(name);\n    } else if (type === 'SubExpression') {\n      this.pushStackLiteral('true');\n    } else {\n      this.pushStackLiteral('null');\n    }\n  },\n\n  // HELPERS\n\n  compiler: JavaScriptCompiler,\n\n  compileChildren: function(environment, options) {\n    let children = environment.children,\n      child,\n      compiler;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      child = children[i];\n      compiler = new this.compiler(); // eslint-disable-line new-cap\n\n      let existing = this.matchExistingProgram(child);\n\n      if (existing == null) {\n        this.context.programs.push(''); // Placeholder to prevent name conflicts for nested children\n        let index = this.context.programs.length;\n        child.index = index;\n        child.name = 'program' + index;\n        this.context.programs[index] = compiler.compile(\n          child,\n          options,\n          this.context,\n          !this.precompile\n        );\n        this.context.decorators[index] = compiler.decorators;\n        this.context.environments[index] = child;\n\n        this.useDepths = this.useDepths || compiler.useDepths;\n        this.useBlockParams = this.useBlockParams || compiler.useBlockParams;\n        child.useDepths = this.useDepths;\n        child.useBlockParams = this.useBlockParams;\n      } else {\n        child.index = existing.index;\n        child.name = 'program' + existing.index;\n\n        this.useDepths = this.useDepths || existing.useDepths;\n        this.useBlockParams = this.useBlockParams || existing.useBlockParams;\n      }\n    }\n  },\n  matchExistingProgram: function(child) {\n    for (let i = 0, len = this.context.environments.length; i < len; i++) {\n      let environment = this.context.environments[i];\n      if (environment && environment.equals(child)) {\n        return environment;\n      }\n    }\n  },\n\n  programExpression: function(guid) {\n    let child = this.environment.children[guid],\n      programParams = [child.index, 'data', child.blockParams];\n\n    if (this.useBlockParams || this.useDepths) {\n      programParams.push('blockParams');\n    }\n    if (this.useDepths) {\n      programParams.push('depths');\n    }\n\n    return 'container.program(' + programParams.join(', ') + ')';\n  },\n\n  useRegister: function(name) {\n    if (!this.registers[name]) {\n      this.registers[name] = true;\n      this.registers.list.push(name);\n    }\n  },\n\n  push: function(expr) {\n    if (!(expr instanceof Literal)) {\n      expr = this.source.wrap(expr);\n    }\n\n    this.inlineStack.push(expr);\n    return expr;\n  },\n\n  pushStackLiteral: function(item) {\n    this.push(new Literal(item));\n  },\n\n  pushSource: function(source) {\n    if (this.pendingContent) {\n      this.source.push(\n        this.appendToBuffer(\n          this.source.quotedString(this.pendingContent),\n          this.pendingLocation\n        )\n      );\n      this.pendingContent = undefined;\n    }\n\n    if (source) {\n      this.source.push(source);\n    }\n  },\n\n  replaceStack: function(callback) {\n    let prefix = ['('],\n      stack,\n      createdStack,\n      usedLiteral;\n\n    /* istanbul ignore next */\n    if (!this.isInline()) {\n      throw new Exception('replaceStack on non-inline');\n    }\n\n    // We want to merge the inline statement into the replacement statement via ','\n    let top = this.popStack(true);\n\n    if (top instanceof Literal) {\n      // Literals do not need to be inlined\n      stack = [top.value];\n      prefix = ['(', stack];\n      usedLiteral = true;\n    } else {\n      // Get or create the current stack name for use by the inline\n      createdStack = true;\n      let name = this.incrStack();\n\n      prefix = ['((', this.push(name), ' = ', top, ')'];\n      stack = this.topStack();\n    }\n\n    let item = callback.call(this, stack);\n\n    if (!usedLiteral) {\n      this.popStack();\n    }\n    if (createdStack) {\n      this.stackSlot--;\n    }\n    this.push(prefix.concat(item, ')'));\n  },\n\n  incrStack: function() {\n    this.stackSlot++;\n    if (this.stackSlot > this.stackVars.length) {\n      this.stackVars.push('stack' + this.stackSlot);\n    }\n    return this.topStackName();\n  },\n  topStackName: function() {\n    return 'stack' + this.stackSlot;\n  },\n  flushInline: function() {\n    let inlineStack = this.inlineStack;\n    this.inlineStack = [];\n    for (let i = 0, len = inlineStack.length; i < len; i++) {\n      let entry = inlineStack[i];\n      /* istanbul ignore if */\n      if (entry instanceof Literal) {\n        this.compileStack.push(entry);\n      } else {\n        let stack = this.incrStack();\n        this.pushSource([stack, ' = ', entry, ';']);\n        this.compileStack.push(stack);\n      }\n    }\n  },\n  isInline: function() {\n    return this.inlineStack.length;\n  },\n\n  popStack: function(wrapped) {\n    let inline = this.isInline(),\n      item = (inline ? this.inlineStack : this.compileStack).pop();\n\n    if (!wrapped && item instanceof Literal) {\n      return item.value;\n    } else {\n      if (!inline) {\n        /* istanbul ignore next */\n        if (!this.stackSlot) {\n          throw new Exception('Invalid stack pop');\n        }\n        this.stackSlot--;\n      }\n      return item;\n    }\n  },\n\n  topStack: function() {\n    let stack = this.isInline() ? this.inlineStack : this.compileStack,\n      item = stack[stack.length - 1];\n\n    /* istanbul ignore if */\n    if (item instanceof Literal) {\n      return item.value;\n    } else {\n      return item;\n    }\n  },\n\n  contextName: function(context) {\n    if (this.useDepths && context) {\n      return 'depths[' + context + ']';\n    } else {\n      return 'depth' + context;\n    }\n  },\n\n  quotedString: function(str) {\n    return this.source.quotedString(str);\n  },\n\n  objectLiteral: function(obj) {\n    return this.source.objectLiteral(obj);\n  },\n\n  aliasable: function(name) {\n    let ret = this.aliases[name];\n    if (ret) {\n      ret.referenceCount++;\n      return ret;\n    }\n\n    ret = this.aliases[name] = this.source.wrap(name);\n    ret.aliasable = true;\n    ret.referenceCount = 1;\n\n    return ret;\n  },\n\n  setupHelper: function(paramSize, name, blockHelper) {\n    let params = [],\n      paramsInit = this.setupHelperArgs(name, paramSize, params, blockHelper);\n    let foundHelper = this.nameLookup('helpers', name, 'helper'),\n      callContext = this.aliasable(\n        `${this.contextName(0)} != null ? ${this.contextName(\n          0\n        )} : (container.nullContext || {})`\n      );\n\n    return {\n      params: params,\n      paramsInit: paramsInit,\n      name: foundHelper,\n      callParams: [callContext].concat(params)\n    };\n  },\n\n  setupParams: function(helper, paramSize, params) {\n    let options = {},\n      contexts = [],\n      types = [],\n      ids = [],\n      objectArgs = !params,\n      param;\n\n    if (objectArgs) {\n      params = [];\n    }\n\n    options.name = this.quotedString(helper);\n    options.hash = this.popStack();\n\n    if (this.trackIds) {\n      options.hashIds = this.popStack();\n    }\n    if (this.stringParams) {\n      options.hashTypes = this.popStack();\n      options.hashContexts = this.popStack();\n    }\n\n    let inverse = this.popStack(),\n      program = this.popStack();\n\n    // Avoid setting fn and inverse if neither are set. This allows\n    // helpers to do a check for `if (options.fn)`\n    if (program || inverse) {\n      options.fn = program || 'container.noop';\n      options.inverse = inverse || 'container.noop';\n    }\n\n    // The parameters go on to the stack in order (making sure that they are evaluated in order)\n    // so we need to pop them off the stack in reverse order\n    let i = paramSize;\n    while (i--) {\n      param = this.popStack();\n      params[i] = param;\n\n      if (this.trackIds) {\n        ids[i] = this.popStack();\n      }\n      if (this.stringParams) {\n        types[i] = this.popStack();\n        contexts[i] = this.popStack();\n      }\n    }\n\n    if (objectArgs) {\n      options.args = this.source.generateArray(params);\n    }\n\n    if (this.trackIds) {\n      options.ids = this.source.generateArray(ids);\n    }\n    if (this.stringParams) {\n      options.types = this.source.generateArray(types);\n      options.contexts = this.source.generateArray(contexts);\n    }\n\n    if (this.options.data) {\n      options.data = 'data';\n    }\n    if (this.useBlockParams) {\n      options.blockParams = 'blockParams';\n    }\n    return options;\n  },\n\n  setupHelperArgs: function(helper, paramSize, params, useRegister) {\n    let options = this.setupParams(helper, paramSize, params);\n    options.loc = JSON.stringify(this.source.currentLocation);\n    options = this.objectLiteral(options);\n    if (useRegister) {\n      this.useRegister('options');\n      params.push('options');\n      return ['options=', options];\n    } else if (params) {\n      params.push(options);\n      return '';\n    } else {\n      return options;\n    }\n  }\n};\n\n(function() {\n  const reservedWords = (\n    'break else new var' +\n    ' case finally return void' +\n    ' catch for switch while' +\n    ' continue function this with' +\n    ' default if throw' +\n    ' delete in try' +\n    ' do instanceof typeof' +\n    ' abstract enum int short' +\n    ' boolean export interface static' +\n    ' byte extends long super' +\n    ' char final native synchronized' +\n    ' class float package throws' +\n    ' const goto private transient' +\n    ' debugger implements protected volatile' +\n    ' double import public let yield await' +\n    ' null true false'\n  ).split(' ');\n\n  const compilerWords = (JavaScriptCompiler.RESERVED_WORDS = {});\n\n  for (let i = 0, l = reservedWords.length; i < l; i++) {\n    compilerWords[reservedWords[i]] = true;\n  }\n})();\n\n/**\n * @deprecated May be removed in the next major version\n */\nJavaScriptCompiler.isValidJavaScriptVariableName = function(name) {\n  return (\n    !JavaScriptCompiler.RESERVED_WORDS[name] &&\n    /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name)\n  );\n};\n\nfunction strictLookup(requireTerminal, compiler, parts, i, type) {\n  let stack = compiler.popStack(),\n    len = parts.length;\n  if (requireTerminal) {\n    len--;\n  }\n\n  for (; i < len; i++) {\n    stack = compiler.nameLookup(stack, parts[i], type);\n  }\n\n  if (requireTerminal) {\n    return [\n      compiler.aliasable('container.strict'),\n      '(',\n      stack,\n      ', ',\n      compiler.quotedString(parts[i]),\n      ', ',\n      JSON.stringify(compiler.source.currentLocation),\n      ' )'\n    ];\n  } else {\n    return stack;\n  }\n}\n\nexport default JavaScriptCompiler;\n","import runtime from './handlebars.runtime';\n\n// Compiler imports\nimport AST from './handlebars/compiler/ast';\nimport {\n  parser as Parser,\n  parse,\n  parseWithoutProcessing\n} from './handlebars/compiler/base';\nimport { Compiler, compile, precompile } from './handlebars/compiler/compiler';\nimport JavaScriptCompiler from './handlebars/compiler/javascript-compiler';\nimport Visitor from './handlebars/compiler/visitor';\n\nimport noConflict from './handlebars/no-conflict';\n\nlet _create = runtime.create;\nfunction create() {\n  let hb = _create();\n\n  hb.compile = function(input, options) {\n    return compile(input, options, hb);\n  };\n  hb.precompile = function(input, options) {\n    return precompile(input, options, hb);\n  };\n\n  hb.AST = AST;\n  hb.Compiler = Compiler;\n  hb.JavaScriptCompiler = JavaScriptCompiler;\n  hb.Parser = Parser;\n  hb.parse = parse;\n  hb.parseWithoutProcessing = parseWithoutProcessing;\n\n  return hb;\n}\n\nlet inst = create();\ninst.create = create;\n\nnoConflict(inst);\n\ninst.Visitor = Visitor;\n\ninst['default'] = inst;\n\nexport default inst;\n","/* eslint-disable new-cap */\nimport Visitor from './visitor';\n\nexport function print(ast) {\n  return new PrintVisitor().accept(ast);\n}\n\nexport function PrintVisitor() {\n  this.padding = 0;\n}\n\nPrintVisitor.prototype = new Visitor();\n\nPrintVisitor.prototype.pad = function(string) {\n  let out = '';\n\n  for (let i = 0, l = this.padding; i < l; i++) {\n    out += '  ';\n  }\n\n  out += string + '\\n';\n  return out;\n};\n\nPrintVisitor.prototype.Program = function(program) {\n  let out = '',\n    body = program.body,\n    i,\n    l;\n\n  if (program.blockParams) {\n    let blockParams = 'BLOCK PARAMS: [';\n    for (i = 0, l = program.blockParams.length; i < l; i++) {\n      blockParams += ' ' + program.blockParams[i];\n    }\n    blockParams += ' ]';\n    out += this.pad(blockParams);\n  }\n\n  for (i = 0, l = body.length; i < l; i++) {\n    out += this.accept(body[i]);\n  }\n\n  this.padding--;\n\n  return out;\n};\n\nPrintVisitor.prototype.MustacheStatement = function(mustache) {\n  return this.pad('{{ ' + this.SubExpression(mustache) + ' }}');\n};\nPrintVisitor.prototype.Decorator = function(mustache) {\n  return this.pad('{{ DIRECTIVE ' + this.SubExpression(mustache) + ' }}');\n};\n\nPrintVisitor.prototype.BlockStatement = PrintVisitor.prototype.DecoratorBlock = function(\n  block\n) {\n  let out = '';\n\n  out += this.pad(\n    (block.type === 'DecoratorBlock' ? 'DIRECTIVE ' : '') + 'BLOCK:'\n  );\n  this.padding++;\n  out += this.pad(this.SubExpression(block));\n  if (block.program) {\n    out += this.pad('PROGRAM:');\n    this.padding++;\n    out += this.accept(block.program);\n    this.padding--;\n  }\n  if (block.inverse) {\n    if (block.program) {\n      this.padding++;\n    }\n    out += this.pad('{{^}}');\n    this.padding++;\n    out += this.accept(block.inverse);\n    this.padding--;\n    if (block.program) {\n      this.padding--;\n    }\n  }\n  this.padding--;\n\n  return out;\n};\n\nPrintVisitor.prototype.PartialStatement = function(partial) {\n  let content = 'PARTIAL:' + partial.name.original;\n  if (partial.params[0]) {\n    content += ' ' + this.accept(partial.params[0]);\n  }\n  if (partial.hash) {\n    content += ' ' + this.accept(partial.hash);\n  }\n  return this.pad('{{> ' + content + ' }}');\n};\nPrintVisitor.prototype.PartialBlockStatement = function(partial) {\n  let content = 'PARTIAL BLOCK:' + partial.name.original;\n  if (partial.params[0]) {\n    content += ' ' + this.accept(partial.params[0]);\n  }\n  if (partial.hash) {\n    content += ' ' + this.accept(partial.hash);\n  }\n\n  content += ' ' + this.pad('PROGRAM:');\n  this.padding++;\n  content += this.accept(partial.program);\n  this.padding--;\n\n  return this.pad('{{> ' + content + ' }}');\n};\n\nPrintVisitor.prototype.ContentStatement = function(content) {\n  return this.pad(\"CONTENT[ '\" + content.value + \"' ]\");\n};\n\nPrintVisitor.prototype.CommentStatement = function(comment) {\n  return this.pad(\"{{! '\" + comment.value + \"' }}\");\n};\n\nPrintVisitor.prototype.SubExpression = function(sexpr) {\n  let params = sexpr.params,\n    paramStrings = [],\n    hash;\n\n  for (let i = 0, l = params.length; i < l; i++) {\n    paramStrings.push(this.accept(params[i]));\n  }\n\n  params = '[' + paramStrings.join(', ') + ']';\n\n  hash = sexpr.hash ? ' ' + this.accept(sexpr.hash) : '';\n\n  return this.accept(sexpr.path) + ' ' + params + hash;\n};\n\nPrintVisitor.prototype.PathExpression = function(id) {\n  let path = id.parts.join('/');\n  return (id.data ? '@' : '') + 'PATH:' + path;\n};\n\nPrintVisitor.prototype.StringLiteral = function(string) {\n  return '\"' + string.value + '\"';\n};\n\nPrintVisitor.prototype.NumberLiteral = function(number) {\n  return 'NUMBER{' + number.value + '}';\n};\n\nPrintVisitor.prototype.BooleanLiteral = function(bool) {\n  return 'BOOLEAN{' + bool.value + '}';\n};\n\nPrintVisitor.prototype.UndefinedLiteral = function() {\n  return 'UNDEFINED';\n};\n\nPrintVisitor.prototype.NullLiteral = function() {\n  return 'NULL';\n};\n\nPrintVisitor.prototype.Hash = function(hash) {\n  let pairs = hash.pairs,\n    joinedPairs = [];\n\n  for (let i = 0, l = pairs.length; i < l; i++) {\n    joinedPairs.push(this.accept(pairs[i]));\n  }\n\n  return 'HASH{' + joinedPairs.join(', ') + '}';\n};\nPrintVisitor.prototype.HashPair = function(pair) {\n  return pair.key + '=' + this.accept(pair.value);\n};\n/* eslint-enable new-cap */\n","// USAGE:\n// var handlebars = require('handlebars');\n/* eslint-env node */\n/* eslint-disable no-var */\n\n// var local = handlebars.create();\n\nvar handlebars = require('../dist/cjs/handlebars')['default'];\n\nvar printer = require('../dist/cjs/handlebars/compiler/printer');\nhandlebars.PrintVisitor = printer.PrintVisitor;\nhandlebars.print = printer.print;\n\nmodule.exports = handlebars;\n\n// Publish a Node.js require() handler for .handlebars and .hbs files\nfunction extension(module, filename) {\n  var fs = require('fs');\n  var templateString = fs.readFileSync(filename, 'utf8');\n  module.exports = handlebars.compile(templateString);\n}\n/* istanbul ignore else */\nif (typeof require !== 'undefined' && require.extensions) {\n  require.extensions['.handlebars'] = extension;\n  require.extensions['.hbs'] = extension;\n}\n","/*\n * [js-sha1]{@link https://github.com/emn178/js-sha1}\n *\n * @version 0.7.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2024\n * @license MIT\n */\n/*jslint bitwise: true */\n(function() {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA1_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA1_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA1_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA1_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  var isArray = Array.isArray;\n  if (root.JS_SHA1_NO_NODE_JS || !isArray) {\n    isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  var isView = ArrayBuffer.isView;\n  if (ARRAY_BUFFER && (root.JS_SHA1_NO_ARRAY_BUFFER_IS_VIEW || !isView)) {\n    isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  // [message: string, isString: bool]\n  var formatMessage = function (message) {\n    var type = typeof message;\n    if (type === 'string') {\n      return [message, true];\n    }\n    if (type !== 'object' || message === null) {\n      throw new Error(INPUT_ERROR);\n    }\n    if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n      return [new Uint8Array(message), false];\n    }\n    if (!isArray(message) && !isView(message)) {\n      throw new Error(INPUT_ERROR);\n    }\n    return [message, false];\n  }\n\n  var createOutputMethod = function (outputType) {\n    return function (message) {\n      return new Sha1(true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function () {\n    var method = createOutputMethod('hex');\n    if (NODE_JS) {\n      method = nodeWrap(method);\n    }\n    method.create = function () {\n      return new Sha1();\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method) {\n    var crypto = require('crypto')\n    var Buffer = require('buffer').Buffer;\n    var bufferFrom;\n    if (Buffer.from && !root.JS_SHA1_NO_BUFFER_FROM) {\n      bufferFrom = Buffer.from;\n    } else {\n      bufferFrom = function (message) {\n        return new Buffer(message);\n      };\n    }\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash('sha1').update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(INPUT_ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (isArray(message) || isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash('sha1').update(bufferFrom(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType) {\n    return function (key, message) {\n      return new HmacSha1(key, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function () {\n    var method = createHmacOutputMethod('hex');\n    method.create = function (key) {\n      return new HmacSha1(key);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type);\n    }\n    return method;\n  };\n\n  function Sha1(sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    this.h0 = 0x67452301;\n    this.h1 = 0xEFCDAB89;\n    this.h2 = 0x98BADCFE;\n    this.h3 = 0x10325476;\n    this.h4 = 0xC3D2E1F0;\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n  }\n\n  Sha1.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n\n    var result = formatMessage(message);\n    message = result[0];\n    var isString = result[1];\n    var code, index = 0, i, length = message.length || 0, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        this.block = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if(isString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >>> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >>> 2] |= (0xc0 | (code >>> 6)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >>> 2] |= (0xe0 | (code >>> 12)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | ((code >>> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >>> 2] |= (0xf0 | (code >>> 18)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | ((code >>> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | ((code >>> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >>> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha1.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >>> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha1.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4;\n    var f, j, t, blocks = this.blocks;\n\n    for(j = 16; j < 80; ++j) {\n      t = blocks[j - 3] ^ blocks[j - 8] ^ blocks[j - 14] ^ blocks[j - 16];\n      blocks[j] =  (t << 1) | (t >>> 31);\n    }\n\n    for(j = 0; j < 20; j += 5) {\n      f = (b & c) | ((~b) & d);\n      t = (a << 5) | (a >>> 27);\n      e = t + f + e + 1518500249 + blocks[j] << 0;\n      b = (b << 30) | (b >>> 2);\n\n      f = (a & b) | ((~a) & c);\n      t = (e << 5) | (e >>> 27);\n      d = t + f + d + 1518500249 + blocks[j + 1] << 0;\n      a = (a << 30) | (a >>> 2);\n\n      f = (e & a) | ((~e) & b);\n      t = (d << 5) | (d >>> 27);\n      c = t + f + c + 1518500249 + blocks[j + 2] << 0;\n      e = (e << 30) | (e >>> 2);\n\n      f = (d & e) | ((~d) & a);\n      t = (c << 5) | (c >>> 27);\n      b = t + f + b + 1518500249 + blocks[j + 3] << 0;\n      d = (d << 30) | (d >>> 2);\n\n      f = (c & d) | ((~c) & e);\n      t = (b << 5) | (b >>> 27);\n      a = t + f + a + 1518500249 + blocks[j + 4] << 0;\n      c = (c << 30) | (c >>> 2);\n    }\n\n    for(; j < 40; j += 5) {\n      f = b ^ c ^ d;\n      t = (a << 5) | (a >>> 27);\n      e = t + f + e + 1859775393 + blocks[j] << 0;\n      b = (b << 30) | (b >>> 2);\n\n      f = a ^ b ^ c;\n      t = (e << 5) | (e >>> 27);\n      d = t + f + d + 1859775393 + blocks[j + 1] << 0;\n      a = (a << 30) | (a >>> 2);\n\n      f = e ^ a ^ b;\n      t = (d << 5) | (d >>> 27);\n      c = t + f + c + 1859775393 + blocks[j + 2] << 0;\n      e = (e << 30) | (e >>> 2);\n\n      f = d ^ e ^ a;\n      t = (c << 5) | (c >>> 27);\n      b = t + f + b + 1859775393 + blocks[j + 3] << 0;\n      d = (d << 30) | (d >>> 2);\n\n      f = c ^ d ^ e;\n      t = (b << 5) | (b >>> 27);\n      a = t + f + a + 1859775393 + blocks[j + 4] << 0;\n      c = (c << 30) | (c >>> 2);\n    }\n\n    for(; j < 60; j += 5) {\n      f = (b & c) | (b & d) | (c & d);\n      t = (a << 5) | (a >>> 27);\n      e = t + f + e - 1894007588 + blocks[j] << 0;\n      b = (b << 30) | (b >>> 2);\n\n      f = (a & b) | (a & c) | (b & c);\n      t = (e << 5) | (e >>> 27);\n      d = t + f + d - 1894007588 + blocks[j + 1] << 0;\n      a = (a << 30) | (a >>> 2);\n\n      f = (e & a) | (e & b) | (a & b);\n      t = (d << 5) | (d >>> 27);\n      c = t + f + c - 1894007588 + blocks[j + 2] << 0;\n      e = (e << 30) | (e >>> 2);\n\n      f = (d & e) | (d & a) | (e & a);\n      t = (c << 5) | (c >>> 27);\n      b = t + f + b - 1894007588 + blocks[j + 3] << 0;\n      d = (d << 30) | (d >>> 2);\n\n      f = (c & d) | (c & e) | (d & e);\n      t = (b << 5) | (b >>> 27);\n      a = t + f + a - 1894007588 + blocks[j + 4] << 0;\n      c = (c << 30) | (c >>> 2);\n    }\n\n    for(; j < 80; j += 5) {\n      f = b ^ c ^ d;\n      t = (a << 5) | (a >>> 27);\n      e = t + f + e - 899497514 + blocks[j] << 0;\n      b = (b << 30) | (b >>> 2);\n\n      f = a ^ b ^ c;\n      t = (e << 5) | (e >>> 27);\n      d = t + f + d - 899497514 + blocks[j + 1] << 0;\n      a = (a << 30) | (a >>> 2);\n\n      f = e ^ a ^ b;\n      t = (d << 5) | (d >>> 27);\n      c = t + f + c - 899497514 + blocks[j + 2] << 0;\n      e = (e << 30) | (e >>> 2);\n\n      f = d ^ e ^ a;\n      t = (c << 5) | (c >>> 27);\n      b = t + f + b - 899497514 + blocks[j + 3] << 0;\n      d = (d << 30) | (d >>> 2);\n\n      f = c ^ d ^ e;\n      t = (b << 5) | (b >>> 27);\n      a = t + f + a - 899497514 + blocks[j + 4] << 0;\n      c = (c << 30) | (c >>> 2);\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n  };\n\n  Sha1.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n\n    return HEX_CHARS[(h0 >>> 28) & 0x0F] + HEX_CHARS[(h0 >>> 24) & 0x0F] +\n           HEX_CHARS[(h0 >>> 20) & 0x0F] + HEX_CHARS[(h0 >>> 16) & 0x0F] +\n           HEX_CHARS[(h0 >>> 12) & 0x0F] + HEX_CHARS[(h0 >>> 8) & 0x0F] +\n           HEX_CHARS[(h0 >>> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n           HEX_CHARS[(h1 >>> 28) & 0x0F] + HEX_CHARS[(h1 >>> 24) & 0x0F] +\n           HEX_CHARS[(h1 >>> 20) & 0x0F] + HEX_CHARS[(h1 >>> 16) & 0x0F] +\n           HEX_CHARS[(h1 >>> 12) & 0x0F] + HEX_CHARS[(h1 >>> 8) & 0x0F] +\n           HEX_CHARS[(h1 >>> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n           HEX_CHARS[(h2 >>> 28) & 0x0F] + HEX_CHARS[(h2 >>> 24) & 0x0F] +\n           HEX_CHARS[(h2 >>> 20) & 0x0F] + HEX_CHARS[(h2 >>> 16) & 0x0F] +\n           HEX_CHARS[(h2 >>> 12) & 0x0F] + HEX_CHARS[(h2 >>> 8) & 0x0F] +\n           HEX_CHARS[(h2 >>> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n           HEX_CHARS[(h3 >>> 28) & 0x0F] + HEX_CHARS[(h3 >>> 24) & 0x0F] +\n           HEX_CHARS[(h3 >>> 20) & 0x0F] + HEX_CHARS[(h3 >>> 16) & 0x0F] +\n           HEX_CHARS[(h3 >>> 12) & 0x0F] + HEX_CHARS[(h3 >>> 8) & 0x0F] +\n           HEX_CHARS[(h3 >>> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n           HEX_CHARS[(h4 >>> 28) & 0x0F] + HEX_CHARS[(h4 >>> 24) & 0x0F] +\n           HEX_CHARS[(h4 >>> 20) & 0x0F] + HEX_CHARS[(h4 >>> 16) & 0x0F] +\n           HEX_CHARS[(h4 >>> 12) & 0x0F] + HEX_CHARS[(h4 >>> 8) & 0x0F] +\n           HEX_CHARS[(h4 >>> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F];\n  };\n\n  Sha1.prototype.toString = Sha1.prototype.hex;\n\n  Sha1.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n\n    return [\n      (h0 >>> 24) & 0xFF, (h0 >>> 16) & 0xFF, (h0 >>> 8) & 0xFF, h0 & 0xFF,\n      (h1 >>> 24) & 0xFF, (h1 >>> 16) & 0xFF, (h1 >>> 8) & 0xFF, h1 & 0xFF,\n      (h2 >>> 24) & 0xFF, (h2 >>> 16) & 0xFF, (h2 >>> 8) & 0xFF, h2 & 0xFF,\n      (h3 >>> 24) & 0xFF, (h3 >>> 16) & 0xFF, (h3 >>> 8) & 0xFF, h3 & 0xFF,\n      (h4 >>> 24) & 0xFF, (h4 >>> 16) & 0xFF, (h4 >>> 8) & 0xFF, h4 & 0xFF\n    ];\n  };\n\n  Sha1.prototype.array = Sha1.prototype.digest;\n\n  Sha1.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(20);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    return buffer;\n  };\n\n  function HmacSha1(key, sharedMemory) {\n    var i, result = formatMessage(key);\n    key = result[0];\n    if (result[1]) {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >>> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >>> 12));\n          bytes[index++] = (0x80 | ((code >>> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >>> 18));\n          bytes[index++] = (0x80 | ((code >>> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >>> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    }\n\n    if (key.length > 64) {\n      key = (new Sha1(true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha1.call(this, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha1.prototype = new Sha1();\n\n  HmacSha1.prototype.finalize = function () {\n    Sha1.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha1.call(this, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha1.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha1 = exports;\n  exports.sha1.hmac = createHmacMethod();\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha1 = exports;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n","function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n  this._timer = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts.slice(0);\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n  if (this._timer) {\n    clearTimeout(this._timer);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.push(err);\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(0, this._errors.length - 1);\n      timeout = this._cachedTimeouts.slice(-1);\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  this._timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      this._timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n","var RetryOperation = require('./retry_operation');\n\nexports.operation = function(options) {\n  var timeouts = exports.timeouts(options);\n  return new RetryOperation(timeouts, {\n      forever: options && (options.forever || options.retries === Infinity),\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n  });\n};\n\nexports.timeouts = function(options) {\n  if (options instanceof Array) {\n    return [].concat(options);\n  }\n\n  var opts = {\n    retries: 10,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: Infinity,\n    randomize: false\n  };\n  for (var key in options) {\n    opts[key] = options[key];\n  }\n\n  if (opts.minTimeout > opts.maxTimeout) {\n    throw new Error('minTimeout is greater than maxTimeout');\n  }\n\n  var timeouts = [];\n  for (var i = 0; i < opts.retries; i++) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  if (options && options.forever && !timeouts.length) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  // sort the array numerically ascending\n  timeouts.sort(function(a,b) {\n    return a - b;\n  });\n\n  return timeouts;\n};\n\nexports.createTimeout = function(attempt, opts) {\n  var random = (opts.randomize)\n    ? (Math.random() + 1)\n    : 1;\n\n  var timeout = Math.round(random * Math.max(opts.minTimeout, 1) * Math.pow(opts.factor, attempt));\n  timeout = Math.min(timeout, opts.maxTimeout);\n\n  return timeout;\n};\n\nexports.wrap = function(obj, options, methods) {\n  if (options instanceof Array) {\n    methods = options;\n    options = null;\n  }\n\n  if (!methods) {\n    methods = [];\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        methods.push(key);\n      }\n    }\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    var method   = methods[i];\n    var original = obj[method];\n\n    obj[method] = function retryWrapper(original) {\n      var op       = exports.operation(options);\n      var args     = Array.prototype.slice.call(arguments, 1);\n      var callback = args.pop();\n\n      args.push(function(err) {\n        if (op.retry(err)) {\n          return;\n        }\n        if (err) {\n          arguments[0] = op.mainError();\n        }\n        callback.apply(this, arguments);\n      });\n\n      op.attempt(function() {\n        original.apply(obj, args);\n      });\n    }.bind(obj, original);\n    obj[method].options = options;\n  }\n};\n","module.exports = require('./lib/retry');","'use strict';\nconst retry = require('retry');\n\nconst networkErrorMsgs = [\n\t'Failed to fetch', // Chrome\n\t'NetworkError when attempting to fetch resource.', // Firefox\n\t'The Internet connection appears to be offline.', // Safari\n\t'Network request failed' // `cross-fetch`\n];\n\nclass AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\n\t\tif (message instanceof Error) {\n\t\t\tthis.originalError = message;\n\t\t\t({message} = message);\n\t\t} else {\n\t\t\tthis.originalError = new Error(message);\n\t\t\tthis.originalError.stack = this.stack;\n\t\t}\n\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\nconst decorateErrorWithCounts = (error, attemptNumber, options) => {\n\t// Minus 1 from attemptNumber because the first attempt does not count as a retry\n\tconst retriesLeft = options.retries - (attemptNumber - 1);\n\n\terror.attemptNumber = attemptNumber;\n\terror.retriesLeft = retriesLeft;\n\treturn error;\n};\n\nconst isNetworkError = errorMessage => networkErrorMsgs.includes(errorMessage);\n\nconst pRetry = (input, options) => new Promise((resolve, reject) => {\n\toptions = {\n\t\tonFailedAttempt: () => {},\n\t\tretries: 10,\n\t\t...options\n\t};\n\n\tconst operation = retry.operation(options);\n\n\toperation.attempt(async attemptNumber => {\n\t\ttry {\n\t\t\tresolve(await input(attemptNumber));\n\t\t} catch (error) {\n\t\t\tif (!(error instanceof Error)) {\n\t\t\t\treject(new TypeError(`Non-error was thrown: \"${error}\". You should only throw errors.`));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (error instanceof AbortError) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error.originalError);\n\t\t\t} else if (error instanceof TypeError && !isNetworkError(error.message)) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error);\n\t\t\t} else {\n\t\t\t\tdecorateErrorWithCounts(error, attemptNumber, options);\n\n\t\t\t\ttry {\n\t\t\t\t\tawait options.onFailedAttempt(error);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!operation.retry(error)) {\n\t\t\t\t\treject(operation.mainError());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});\n\nmodule.exports = pRetry;\n// TODO: remove this in the next major version\nmodule.exports.default = pRetry;\n\nmodule.exports.AbortError = AbortError;\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","'use strict';\nmodule.exports = (promise, onFinally) => {\n\tonFinally = onFinally || (() => {});\n\n\treturn promise.then(\n\t\tval => new Promise(resolve => {\n\t\t\tresolve(onFinally());\n\t\t}).then(() => val),\n\t\terr => new Promise(resolve => {\n\t\t\tresolve(onFinally());\n\t\t}).then(() => {\n\t\t\tthrow err;\n\t\t})\n\t);\n};\n","'use strict';\n\nconst pFinally = require('p-finally');\n\nclass TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\nconst pTimeout = (promise, milliseconds, fallback) => new Promise((resolve, reject) => {\n\tif (typeof milliseconds !== 'number' || milliseconds < 0) {\n\t\tthrow new TypeError('Expected `milliseconds` to be a positive number');\n\t}\n\n\tif (milliseconds === Infinity) {\n\t\tresolve(promise);\n\t\treturn;\n\t}\n\n\tconst timer = setTimeout(() => {\n\t\tif (typeof fallback === 'function') {\n\t\t\ttry {\n\t\t\t\tresolve(fallback());\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = typeof fallback === 'string' ? fallback : `Promise timed out after ${milliseconds} milliseconds`;\n\t\tconst timeoutError = fallback instanceof Error ? fallback : new TimeoutError(message);\n\n\t\tif (typeof promise.cancel === 'function') {\n\t\t\tpromise.cancel();\n\t\t}\n\n\t\treject(timeoutError);\n\t}, milliseconds);\n\n\t// TODO: Use native `finally` keyword when targeting Node.js 10\n\tpFinally(\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\tpromise.then(resolve, reject),\n\t\t() => {\n\t\t\tclearTimeout(timer);\n\t\t}\n\t);\n});\n\nmodule.exports = pTimeout;\n// TODO: Remove this for the next major release\nmodule.exports.default = pTimeout;\n\nmodule.exports.TimeoutError = TimeoutError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nfunction lowerBound(array, value, comparator) {\n    let first = 0;\n    let count = array.length;\n    while (count > 0) {\n        const step = (count / 2) | 0;\n        let it = first + step;\n        if (comparator(array[it], value) <= 0) {\n            first = ++it;\n            count -= step + 1;\n        }\n        else {\n            count = step;\n        }\n    }\n    return first;\n}\nexports.default = lowerBound;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst lower_bound_1 = require(\"./lower-bound\");\nclass PriorityQueue {\n    constructor() {\n        this._queue = [];\n    }\n    enqueue(run, options) {\n        options = Object.assign({ priority: 0 }, options);\n        const element = {\n            priority: options.priority,\n            run\n        };\n        if (this.size && this._queue[this.size - 1].priority >= options.priority) {\n            this._queue.push(element);\n            return;\n        }\n        const index = lower_bound_1.default(this._queue, element, (a, b) => b.priority - a.priority);\n        this._queue.splice(index, 0, element);\n    }\n    dequeue() {\n        const item = this._queue.shift();\n        return item === null || item === void 0 ? void 0 : item.run;\n    }\n    filter(options) {\n        return this._queue.filter((element) => element.priority === options.priority).map((element) => element.run);\n    }\n    get size() {\n        return this._queue.length;\n    }\n}\nexports.default = PriorityQueue;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst EventEmitter = require(\"eventemitter3\");\nconst p_timeout_1 = require(\"p-timeout\");\nconst priority_queue_1 = require(\"./priority-queue\");\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst empty = () => { };\nconst timeoutError = new p_timeout_1.TimeoutError();\n/**\nPromise queue with concurrency control.\n*/\nclass PQueue extends EventEmitter {\n    constructor(options) {\n        var _a, _b, _c, _d;\n        super();\n        this._intervalCount = 0;\n        this._intervalEnd = 0;\n        this._pendingCount = 0;\n        this._resolveEmpty = empty;\n        this._resolveIdle = empty;\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        options = Object.assign({ carryoverConcurrencyCount: false, intervalCap: Infinity, interval: 0, concurrency: Infinity, autoStart: true, queueClass: priority_queue_1.default }, options);\n        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n            throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(_b = (_a = options.intervalCap) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : ''}\\` (${typeof options.intervalCap})`);\n        }\n        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {\n            throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(_d = (_c = options.interval) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''}\\` (${typeof options.interval})`);\n        }\n        this._carryoverConcurrencyCount = options.carryoverConcurrencyCount;\n        this._isIntervalIgnored = options.intervalCap === Infinity || options.interval === 0;\n        this._intervalCap = options.intervalCap;\n        this._interval = options.interval;\n        this._queue = new options.queueClass();\n        this._queueClass = options.queueClass;\n        this.concurrency = options.concurrency;\n        this._timeout = options.timeout;\n        this._throwOnTimeout = options.throwOnTimeout === true;\n        this._isPaused = options.autoStart === false;\n    }\n    get _doesIntervalAllowAnother() {\n        return this._isIntervalIgnored || this._intervalCount < this._intervalCap;\n    }\n    get _doesConcurrentAllowAnother() {\n        return this._pendingCount < this._concurrency;\n    }\n    _next() {\n        this._pendingCount--;\n        this._tryToStartAnother();\n        this.emit('next');\n    }\n    _resolvePromises() {\n        this._resolveEmpty();\n        this._resolveEmpty = empty;\n        if (this._pendingCount === 0) {\n            this._resolveIdle();\n            this._resolveIdle = empty;\n            this.emit('idle');\n        }\n    }\n    _onResumeInterval() {\n        this._onInterval();\n        this._initializeIntervalIfNeeded();\n        this._timeoutId = undefined;\n    }\n    _isIntervalPaused() {\n        const now = Date.now();\n        if (this._intervalId === undefined) {\n            const delay = this._intervalEnd - now;\n            if (delay < 0) {\n                // Act as the interval was done\n                // We don't need to resume it here because it will be resumed on line 160\n                this._intervalCount = (this._carryoverConcurrencyCount) ? this._pendingCount : 0;\n            }\n            else {\n                // Act as the interval is pending\n                if (this._timeoutId === undefined) {\n                    this._timeoutId = setTimeout(() => {\n                        this._onResumeInterval();\n                    }, delay);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    _tryToStartAnother() {\n        if (this._queue.size === 0) {\n            // We can clear the interval (\"pause\")\n            // Because we can redo it later (\"resume\")\n            if (this._intervalId) {\n                clearInterval(this._intervalId);\n            }\n            this._intervalId = undefined;\n            this._resolvePromises();\n            return false;\n        }\n        if (!this._isPaused) {\n            const canInitializeInterval = !this._isIntervalPaused();\n            if (this._doesIntervalAllowAnother && this._doesConcurrentAllowAnother) {\n                const job = this._queue.dequeue();\n                if (!job) {\n                    return false;\n                }\n                this.emit('active');\n                job();\n                if (canInitializeInterval) {\n                    this._initializeIntervalIfNeeded();\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    _initializeIntervalIfNeeded() {\n        if (this._isIntervalIgnored || this._intervalId !== undefined) {\n            return;\n        }\n        this._intervalId = setInterval(() => {\n            this._onInterval();\n        }, this._interval);\n        this._intervalEnd = Date.now() + this._interval;\n    }\n    _onInterval() {\n        if (this._intervalCount === 0 && this._pendingCount === 0 && this._intervalId) {\n            clearInterval(this._intervalId);\n            this._intervalId = undefined;\n        }\n        this._intervalCount = this._carryoverConcurrencyCount ? this._pendingCount : 0;\n        this._processQueue();\n    }\n    /**\n    Executes all queued functions until it reaches the limit.\n    */\n    _processQueue() {\n        // eslint-disable-next-line no-empty\n        while (this._tryToStartAnother()) { }\n    }\n    get concurrency() {\n        return this._concurrency;\n    }\n    set concurrency(newConcurrency) {\n        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {\n            throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${newConcurrency}\\` (${typeof newConcurrency})`);\n        }\n        this._concurrency = newConcurrency;\n        this._processQueue();\n    }\n    /**\n    Adds a sync or async task to the queue. Always returns a promise.\n    */\n    async add(fn, options = {}) {\n        return new Promise((resolve, reject) => {\n            const run = async () => {\n                this._pendingCount++;\n                this._intervalCount++;\n                try {\n                    const operation = (this._timeout === undefined && options.timeout === undefined) ? fn() : p_timeout_1.default(Promise.resolve(fn()), (options.timeout === undefined ? this._timeout : options.timeout), () => {\n                        if (options.throwOnTimeout === undefined ? this._throwOnTimeout : options.throwOnTimeout) {\n                            reject(timeoutError);\n                        }\n                        return undefined;\n                    });\n                    resolve(await operation);\n                }\n                catch (error) {\n                    reject(error);\n                }\n                this._next();\n            };\n            this._queue.enqueue(run, options);\n            this._tryToStartAnother();\n            this.emit('add');\n        });\n    }\n    /**\n    Same as `.add()`, but accepts an array of sync or async functions.\n\n    @returns A promise that resolves when all functions are resolved.\n    */\n    async addAll(functions, options) {\n        return Promise.all(functions.map(async (function_) => this.add(function_, options)));\n    }\n    /**\n    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)\n    */\n    start() {\n        if (!this._isPaused) {\n            return this;\n        }\n        this._isPaused = false;\n        this._processQueue();\n        return this;\n    }\n    /**\n    Put queue execution on hold.\n    */\n    pause() {\n        this._isPaused = true;\n    }\n    /**\n    Clear the queue.\n    */\n    clear() {\n        this._queue = new this._queueClass();\n    }\n    /**\n    Can be called multiple times. Useful if you for example add additional items at a later time.\n\n    @returns A promise that settles when the queue becomes empty.\n    */\n    async onEmpty() {\n        // Instantly resolve if the queue is empty\n        if (this._queue.size === 0) {\n            return;\n        }\n        return new Promise(resolve => {\n            const existingResolve = this._resolveEmpty;\n            this._resolveEmpty = () => {\n                existingResolve();\n                resolve();\n            };\n        });\n    }\n    /**\n    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.\n\n    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.\n    */\n    async onIdle() {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (this._pendingCount === 0 && this._queue.size === 0) {\n            return;\n        }\n        return new Promise(resolve => {\n            const existingResolve = this._resolveIdle;\n            this._resolveIdle = () => {\n                existingResolve();\n                resolve();\n            };\n        });\n    }\n    /**\n    Size of the queue.\n    */\n    get size() {\n        return this._queue.size;\n    }\n    /**\n    Size of the queue, filtered by the given options.\n\n    For example, this can be used to find the number of items remaining in the queue with a specific priority level.\n    */\n    sizeBy(options) {\n        // eslint-disable-next-line unicorn/no-fn-reference-in-iterator\n        return this._queue.filter(options).length;\n    }\n    /**\n    Number of pending promises.\n    */\n    get pending() {\n        return this._pendingCount;\n    }\n    /**\n    Whether the queue is currently paused.\n    */\n    get isPaused() {\n        return this._isPaused;\n    }\n    get timeout() {\n        return this._timeout;\n    }\n    /**\n    Set the timeout for future operations.\n    */\n    set timeout(milliseconds) {\n        this._timeout = milliseconds;\n    }\n}\nexports.default = PQueue;\n","'use strict'\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","'use strict'\n\nconst debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","'use strict'\n\nconst {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst safeSrc = exports.safeSrc = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  safeSrc[index] = safe\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n// Non-numberic identifiers include numberic identifiers but can be longer.\n// Therefore non-numberic identifiers must go first.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NONNUMERICIDENTIFIER]\n}|${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NONNUMERICIDENTIFIER]\n}|${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","'use strict'\n\n// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","'use strict'\n\nconst numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","'use strict'\n\nconst debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n        version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    if (release.startsWith('pre')) {\n      if (!identifier && identifierBase === false) {\n        throw new Error('invalid increment argument: identifier is empty')\n      }\n      // Avoid an invalid semver results\n      if (identifier) {\n        const match = `-${identifier}`.match(this.options.loose ? re[t.PRERELEASELOOSE] : re[t.PRERELEASE])\n        if (!match || match[1] !== identifier) {\n          throw new Error(`invalid identifier: ${identifier}`)\n        }\n      }\n    }\n\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'release':\n        if (this.prerelease.length === 0) {\n          throw new Error(`version ${this.raw} is not a prerelease`)\n        }\n        this.prerelease.length = 0\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","'use strict'\n\nconst parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","'use strict'\n\nconst parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","'use strict'\n\nconst SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","'use strict'\n\nconst parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // If the main part has no difference\n    if (lowVersion.compareMain(highVersion) === 0) {\n      if (lowVersion.minor && !lowVersion.patch) {\n        return 'minor'\n      }\n      return 'patch'\n    }\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","'use strict'\n\nconst parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","'use strict'\n\nconst compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","'use strict'\n\nconst compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","'use strict'\n\nconst compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","'use strict'\n\nconst compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","'use strict'\n\nconst compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","'use strict'\n\nconst compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","'use strict'\n\nconst compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","'use strict'\n\nconst compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","'use strict'\n\nconst compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","'use strict'\n\nconst compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","'use strict'\n\nconst eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n","'use strict'\n\nclass LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n","'use strict'\n\nconst SPACE_CHARACTERS = /\\s+/g\n\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.formatted = undefined\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.formatted = undefined\n  }\n\n  get range () {\n    if (this.formatted === undefined) {\n      this.formatted = ''\n      for (let i = 0; i < this.set.length; i++) {\n        if (i > 0) {\n          this.formatted += '||'\n        }\n        const comps = this.set[i]\n        for (let k = 0; k < comps.length; k++) {\n          if (k > 0) {\n            this.formatted += ' '\n          }\n          this.formatted += comps[k].toString().trim()\n        }\n      }\n    }\n    return this.formatted\n  }\n\n  format () {\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","'use strict'\n\nconst ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","'use strict'\n\nconst Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","'use strict'\n\nconst Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","'use strict'\n\nconst Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","'use strict'\n\n// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","'use strict'\n\nconst outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","'use strict'\n\nconst Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","'use strict'\n\n// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","'use strict'\n\nconst Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","'use strict'\n\n// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","'use strict';\nmodule.exports = function (str, sep) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\tsep = typeof sep === 'undefined' ? '_' : sep;\n\n\treturn str\n\t\t.replace(/([a-z\\d])([A-Z])/g, '$1' + sep + '$2')\n\t\t.replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1' + sep + '$2')\n\t\t.toLowerCase();\n};\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","'use strict';\n\nconst ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\n\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\toverline: [53, 55],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi256 = wrapAnsi256();\n\tstyles.color.ansi16m = wrapAnsi16m();\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\tObject.defineProperties(styles, {\n\t\trgbToAnsi256: {\n\t\t\tvalue: (red, green, blue) => {\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\t\t\tif (red === green && green === blue) {\n\t\t\t\t\tif (red < 8) {\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (red > 248) {\n\t\t\t\t\t\treturn 231;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\n\t\t\t\t}\n\n\t\t\t\treturn 16 +\n\t\t\t\t\t(36 * Math.round(red / 255 * 5)) +\n\t\t\t\t\t(6 * Math.round(green / 255 * 5)) +\n\t\t\t\t\tMath.round(blue / 255 * 5);\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\thexToRgb: {\n\t\t\tvalue: hex => {\n\t\t\t\tconst matches = /(?<colorString>[a-f\\d]{6}|[a-f\\d]{3})/i.exec(hex.toString(16));\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn [0, 0, 0];\n\t\t\t\t}\n\n\t\t\t\tlet {colorString} = matches.groups;\n\n\t\t\t\tif (colorString.length === 3) {\n\t\t\t\t\tcolorString = colorString.split('').map(character => character + character).join('');\n\t\t\t\t}\n\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\n\n\t\t\t\treturn [\n\t\t\t\t\t(integer >> 16) & 0xFF,\n\t\t\t\t\t(integer >> 8) & 0xFF,\n\t\t\t\t\tinteger & 0xFF\n\t\t\t\t];\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\thexToAnsi256: {\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n\t\t\tenumerable: false\n\t\t}\n\t});\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","'use strict'\n\n// **************************************************************\n// * Code initially copied/adapted from \"pony-cause\" npm module *\n// * Please upstream improvements there                         *\n// **************************************************************\n\nconst isErrorLike = (err) => {\n  return err && typeof err.message === 'string'\n}\n\n/**\n * @param {Error|{ cause?: unknown|(()=>err)}} err\n * @returns {Error|Object|undefined}\n */\nconst getErrorCause = (err) => {\n  if (!err) return\n\n  /** @type {unknown} */\n  // @ts-ignore\n  const cause = err.cause\n\n  // VError / NError style causes\n  if (typeof cause === 'function') {\n    // @ts-ignore\n    const causeResult = err.cause()\n\n    return isErrorLike(causeResult)\n      ? causeResult\n      : undefined\n  } else {\n    return isErrorLike(cause)\n      ? cause\n      : undefined\n  }\n}\n\n/**\n * Internal method that keeps a track of which error we have already added, to avoid circular recursion\n *\n * @private\n * @param {Error} err\n * @param {Set<Error>} seen\n * @returns {string}\n */\nconst _stackWithCauses = (err, seen) => {\n  if (!isErrorLike(err)) return ''\n\n  const stack = err.stack || ''\n\n  // Ensure we don't go circular or crazily deep\n  if (seen.has(err)) {\n    return stack + '\\ncauses have become circular...'\n  }\n\n  const cause = getErrorCause(err)\n\n  if (cause) {\n    seen.add(err)\n    return (stack + '\\ncaused by: ' + _stackWithCauses(cause, seen))\n  } else {\n    return stack\n  }\n}\n\n/**\n * @param {Error} err\n * @returns {string}\n */\nconst stackWithCauses = (err) => _stackWithCauses(err, new Set())\n\n/**\n * Internal method that keeps a track of which error we have already added, to avoid circular recursion\n *\n * @private\n * @param {Error} err\n * @param {Set<Error>} seen\n * @param {boolean} [skip]\n * @returns {string}\n */\nconst _messageWithCauses = (err, seen, skip) => {\n  if (!isErrorLike(err)) return ''\n\n  const message = skip ? '' : (err.message || '')\n\n  // Ensure we don't go circular or crazily deep\n  if (seen.has(err)) {\n    return message + ': ...'\n  }\n\n  const cause = getErrorCause(err)\n\n  if (cause) {\n    seen.add(err)\n\n    // @ts-ignore\n    const skipIfVErrorStyleCause = typeof err.cause === 'function'\n\n    return (message +\n      (skipIfVErrorStyleCause ? '' : ': ') +\n      _messageWithCauses(cause, seen, skipIfVErrorStyleCause))\n  } else {\n    return message\n  }\n}\n\n/**\n * @param {Error} err\n * @returns {string}\n */\nconst messageWithCauses = (err) => _messageWithCauses(err, new Set())\n\nmodule.exports = {\n  isErrorLike,\n  getErrorCause,\n  stackWithCauses,\n  messageWithCauses\n}\n","'use strict'\n\nconst seen = Symbol('circular-ref-tag')\nconst rawSymbol = Symbol('pino-raw-err-ref')\n\nconst pinoErrProto = Object.create({}, {\n  type: {\n    enumerable: true,\n    writable: true,\n    value: undefined\n  },\n  message: {\n    enumerable: true,\n    writable: true,\n    value: undefined\n  },\n  stack: {\n    enumerable: true,\n    writable: true,\n    value: undefined\n  },\n  aggregateErrors: {\n    enumerable: true,\n    writable: true,\n    value: undefined\n  },\n  raw: {\n    enumerable: false,\n    get: function () {\n      return this[rawSymbol]\n    },\n    set: function (val) {\n      this[rawSymbol] = val\n    }\n  }\n})\nObject.defineProperty(pinoErrProto, rawSymbol, {\n  writable: true,\n  value: {}\n})\n\nmodule.exports = {\n  pinoErrProto,\n  pinoErrorSymbols: {\n    seen,\n    rawSymbol\n  }\n}\n","'use strict'\n\nmodule.exports = errSerializer\n\nconst { messageWithCauses, stackWithCauses, isErrorLike } = require('./err-helpers')\nconst { pinoErrProto, pinoErrorSymbols } = require('./err-proto')\nconst { seen } = pinoErrorSymbols\n\nconst { toString } = Object.prototype\n\nfunction errSerializer (err) {\n  if (!isErrorLike(err)) {\n    return err\n  }\n\n  err[seen] = undefined // tag to prevent re-looking at this\n  const _err = Object.create(pinoErrProto)\n  _err.type = toString.call(err.constructor) === '[object Function]'\n    ? err.constructor.name\n    : err.name\n  _err.message = messageWithCauses(err)\n  _err.stack = stackWithCauses(err)\n\n  if (Array.isArray(err.errors)) {\n    _err.aggregateErrors = err.errors.map(err => errSerializer(err))\n  }\n\n  for (const key in err) {\n    if (_err[key] === undefined) {\n      const val = err[key]\n      if (isErrorLike(val)) {\n        // We append cause messages and stacks to _err, therefore skipping causes here\n        if (key !== 'cause' && !Object.prototype.hasOwnProperty.call(val, seen)) {\n          _err[key] = errSerializer(val)\n        }\n      } else {\n        _err[key] = val\n      }\n    }\n  }\n\n  delete err[seen] // clean up tag in case err is serialized again later\n  _err.raw = err\n  return _err\n}\n","'use strict'\n\nmodule.exports = errWithCauseSerializer\n\nconst { isErrorLike } = require('./err-helpers')\nconst { pinoErrProto, pinoErrorSymbols } = require('./err-proto')\nconst { seen } = pinoErrorSymbols\n\nconst { toString } = Object.prototype\n\nfunction errWithCauseSerializer (err) {\n  if (!isErrorLike(err)) {\n    return err\n  }\n\n  err[seen] = undefined // tag to prevent re-looking at this\n  const _err = Object.create(pinoErrProto)\n  _err.type = toString.call(err.constructor) === '[object Function]'\n    ? err.constructor.name\n    : err.name\n  _err.message = err.message\n  _err.stack = err.stack\n\n  if (Array.isArray(err.errors)) {\n    _err.aggregateErrors = err.errors.map(err => errWithCauseSerializer(err))\n  }\n\n  if (isErrorLike(err.cause) && !Object.prototype.hasOwnProperty.call(err.cause, seen)) {\n    _err.cause = errWithCauseSerializer(err.cause)\n  }\n\n  for (const key in err) {\n    if (_err[key] === undefined) {\n      const val = err[key]\n      if (isErrorLike(val)) {\n        if (!Object.prototype.hasOwnProperty.call(val, seen)) {\n          _err[key] = errWithCauseSerializer(val)\n        }\n      } else {\n        _err[key] = val\n      }\n    }\n  }\n\n  delete err[seen] // clean up tag in case err is serialized again later\n  _err.raw = err\n  return _err\n}\n","'use strict'\n\nmodule.exports = {\n  mapHttpRequest,\n  reqSerializer\n}\n\nconst rawSymbol = Symbol('pino-raw-req-ref')\nconst pinoReqProto = Object.create({}, {\n  id: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  method: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  url: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  query: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  params: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  headers: {\n    enumerable: true,\n    writable: true,\n    value: {}\n  },\n  remoteAddress: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  remotePort: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  raw: {\n    enumerable: false,\n    get: function () {\n      return this[rawSymbol]\n    },\n    set: function (val) {\n      this[rawSymbol] = val\n    }\n  }\n})\nObject.defineProperty(pinoReqProto, rawSymbol, {\n  writable: true,\n  value: {}\n})\n\nfunction reqSerializer (req) {\n  // req.info is for hapi compat.\n  const connection = req.info || req.socket\n  const _req = Object.create(pinoReqProto)\n  _req.id = (typeof req.id === 'function' ? req.id() : (req.id || (req.info ? req.info.id : undefined)))\n  _req.method = req.method\n  // req.originalUrl is for expressjs compat.\n  if (req.originalUrl) {\n    _req.url = req.originalUrl\n  } else {\n    const path = req.path\n    // path for safe hapi compat.\n    _req.url = typeof path === 'string' ? path : (req.url ? req.url.path || req.url : undefined)\n  }\n\n  if (req.query) {\n    _req.query = req.query\n  }\n\n  if (req.params) {\n    _req.params = req.params\n  }\n\n  _req.headers = req.headers\n  _req.remoteAddress = connection && connection.remoteAddress\n  _req.remotePort = connection && connection.remotePort\n  // req.raw is  for hapi compat/equivalence\n  _req.raw = req.raw || req\n  return _req\n}\n\nfunction mapHttpRequest (req) {\n  return {\n    req: reqSerializer(req)\n  }\n}\n","'use strict'\n\nmodule.exports = {\n  mapHttpResponse,\n  resSerializer\n}\n\nconst rawSymbol = Symbol('pino-raw-res-ref')\nconst pinoResProto = Object.create({}, {\n  statusCode: {\n    enumerable: true,\n    writable: true,\n    value: 0\n  },\n  headers: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  raw: {\n    enumerable: false,\n    get: function () {\n      return this[rawSymbol]\n    },\n    set: function (val) {\n      this[rawSymbol] = val\n    }\n  }\n})\nObject.defineProperty(pinoResProto, rawSymbol, {\n  writable: true,\n  value: {}\n})\n\nfunction resSerializer (res) {\n  const _res = Object.create(pinoResProto)\n  _res.statusCode = res.headersSent ? res.statusCode : null\n  _res.headers = res.getHeaders ? res.getHeaders() : res._headers\n  _res.raw = res\n  return _res\n}\n\nfunction mapHttpResponse (res) {\n  return {\n    res: resSerializer(res)\n  }\n}\n","'use strict'\n\nconst errSerializer = require('./lib/err')\nconst errWithCauseSerializer = require('./lib/err-with-cause')\nconst reqSerializers = require('./lib/req')\nconst resSerializers = require('./lib/res')\n\nmodule.exports = {\n  err: errSerializer,\n  errWithCause: errWithCauseSerializer,\n  mapHttpRequest: reqSerializers.mapHttpRequest,\n  mapHttpResponse: resSerializers.mapHttpResponse,\n  req: reqSerializers.reqSerializer,\n  res: resSerializers.resSerializer,\n\n  wrapErrorSerializer: function wrapErrorSerializer (customSerializer) {\n    if (customSerializer === errSerializer) return customSerializer\n    return function wrapErrSerializer (err) {\n      return customSerializer(errSerializer(err))\n    }\n  },\n\n  wrapRequestSerializer: function wrapRequestSerializer (customSerializer) {\n    if (customSerializer === reqSerializers.reqSerializer) return customSerializer\n    return function wrappedReqSerializer (req) {\n      return customSerializer(reqSerializers.reqSerializer(req))\n    }\n  },\n\n  wrapResponseSerializer: function wrapResponseSerializer (customSerializer) {\n    if (customSerializer === resSerializers.resSerializer) return customSerializer\n    return function wrappedResSerializer (res) {\n      return customSerializer(resSerializers.resSerializer(res))\n    }\n  }\n}\n","'use strict'\n\nfunction noOpPrepareStackTrace (_, stack) {\n  return stack\n}\n\nmodule.exports = function getCallers () {\n  const originalPrepare = Error.prepareStackTrace\n  Error.prepareStackTrace = noOpPrepareStackTrace\n  const stack = new Error().stack\n  Error.prepareStackTrace = originalPrepare\n\n  if (!Array.isArray(stack)) {\n    return undefined\n  }\n\n  const entries = stack.slice(2)\n\n  const fileNames = []\n\n  for (const entry of entries) {\n    if (!entry) {\n      continue\n    }\n\n    fileNames.push(entry.getFileName())\n  }\n\n  return fileNames\n}\n","'use strict'\n\nmodule.exports = validator\n\nfunction validator (opts = {}) {\n  const {\n    ERR_PATHS_MUST_BE_STRINGS = () => 'fast-redact - Paths must be (non-empty) strings',\n    ERR_INVALID_PATH = (s) => `fast-redact – Invalid path (${s})`\n  } = opts\n\n  return function validate ({ paths }) {\n    paths.forEach((s) => {\n      if (typeof s !== 'string') {\n        throw Error(ERR_PATHS_MUST_BE_STRINGS())\n      }\n      try {\n        if (/〇/.test(s)) throw Error()\n        const expr = (s[0] === '[' ? '' : '.') + s.replace(/^\\*/, '〇').replace(/\\.\\*/g, '.〇').replace(/\\[\\*\\]/g, '[〇]')\n        if (/\\n|\\r|;/.test(expr)) throw Error()\n        if (/\\/\\*/.test(expr)) throw Error()\n        /* eslint-disable-next-line */\n        Function(`\n            'use strict'\n            const o = new Proxy({}, { get: () => o, set: () => { throw Error() } });\n            const 〇 = null;\n            o${expr}\n            if ([o${expr}].length !== 1) throw Error()`)()\n      } catch (e) {\n        throw Error(ERR_INVALID_PATH(s))\n      }\n    })\n  }\n}\n","'use strict'\n\nmodule.exports = /[^.[\\]]+|\\[((?:.)*?)\\]/g\n\n/*\nRegular expression explanation:\n\nAlt 1: /[^.[\\]]+/ - Match one or more characters that are *not* a dot (.)\n                    opening square bracket ([) or closing square bracket (])\n\nAlt 2: /\\[((?:.)*?)\\]/ - If the char IS dot or square bracket, then create a capture\n                         group (which will be capture group $1) that matches anything\n                         within square brackets. Expansion is lazy so it will\n                         stop matching as soon as the first closing bracket is met `]`\n                         (rather than continuing to match until the final closing bracket).\n*/\n","'use strict'\n\nconst rx = require('./rx')\n\nmodule.exports = parse\n\nfunction parse ({ paths }) {\n  const wildcards = []\n  var wcLen = 0\n  const secret = paths.reduce(function (o, strPath, ix) {\n    var path = strPath.match(rx).map((p) => p.replace(/'|\"|`/g, ''))\n    const leadingBracket = strPath[0] === '['\n    path = path.map((p) => {\n      if (p[0] === '[') return p.substr(1, p.length - 2)\n      else return p\n    })\n    const star = path.indexOf('*')\n    if (star > -1) {\n      const before = path.slice(0, star)\n      const beforeStr = before.join('.')\n      const after = path.slice(star + 1, path.length)\n      const nested = after.length > 0\n      wcLen++\n      wildcards.push({\n        before,\n        beforeStr,\n        after,\n        nested\n      })\n    } else {\n      o[strPath] = {\n        path: path,\n        val: undefined,\n        precensored: false,\n        circle: '',\n        escPath: JSON.stringify(strPath),\n        leadingBracket: leadingBracket\n      }\n    }\n    return o\n  }, {})\n\n  return { wildcards, wcLen, secret }\n}\n","'use strict'\n\nconst rx = require('./rx')\n\nmodule.exports = redactor\n\nfunction redactor ({ secret, serialize, wcLen, strict, isCensorFct, censorFctTakesPath }, state) {\n  /* eslint-disable-next-line */\n  const redact = Function('o', `\n    if (typeof o !== 'object' || o == null) {\n      ${strictImpl(strict, serialize)}\n    }\n    const { censor, secret } = this\n    const originalSecret = {}\n    const secretKeys = Object.keys(secret)\n    for (var i = 0; i < secretKeys.length; i++) {\n      originalSecret[secretKeys[i]] = secret[secretKeys[i]]\n    }\n\n    ${redactTmpl(secret, isCensorFct, censorFctTakesPath)}\n    this.compileRestore()\n    ${dynamicRedactTmpl(wcLen > 0, isCensorFct, censorFctTakesPath)}\n    this.secret = originalSecret\n    ${resultTmpl(serialize)}\n  `).bind(state)\n\n  redact.state = state\n\n  if (serialize === false) {\n    redact.restore = (o) => state.restore(o)\n  }\n\n  return redact\n}\n\nfunction redactTmpl (secret, isCensorFct, censorFctTakesPath) {\n  return Object.keys(secret).map((path) => {\n    const { escPath, leadingBracket, path: arrPath } = secret[path]\n    const skip = leadingBracket ? 1 : 0\n    const delim = leadingBracket ? '' : '.'\n    const hops = []\n    var match\n    while ((match = rx.exec(path)) !== null) {\n      const [ , ix ] = match\n      const { index, input } = match\n      if (index > skip) hops.push(input.substring(0, index - (ix ? 0 : 1)))\n    }\n    var existence = hops.map((p) => `o${delim}${p}`).join(' && ')\n    if (existence.length === 0) existence += `o${delim}${path} != null`\n    else existence += ` && o${delim}${path} != null`\n\n    const circularDetection = `\n      switch (true) {\n        ${hops.reverse().map((p) => `\n          case o${delim}${p} === censor:\n            secret[${escPath}].circle = ${JSON.stringify(p)}\n            break\n        `).join('\\n')}\n      }\n    `\n\n    const censorArgs = censorFctTakesPath\n      ? `val, ${JSON.stringify(arrPath)}`\n      : `val`\n\n    return `\n      if (${existence}) {\n        const val = o${delim}${path}\n        if (val === censor) {\n          secret[${escPath}].precensored = true\n        } else {\n          secret[${escPath}].val = val\n          o${delim}${path} = ${isCensorFct ? `censor(${censorArgs})` : 'censor'}\n          ${circularDetection}\n        }\n      }\n    `\n  }).join('\\n')\n}\n\nfunction dynamicRedactTmpl (hasWildcards, isCensorFct, censorFctTakesPath) {\n  return hasWildcards === true ? `\n    {\n      const { wildcards, wcLen, groupRedact, nestedRedact } = this\n      for (var i = 0; i < wcLen; i++) {\n        const { before, beforeStr, after, nested } = wildcards[i]\n        if (nested === true) {\n          secret[beforeStr] = secret[beforeStr] || []\n          nestedRedact(secret[beforeStr], o, before, after, censor, ${isCensorFct}, ${censorFctTakesPath})\n        } else secret[beforeStr] = groupRedact(o, before, censor, ${isCensorFct}, ${censorFctTakesPath})\n      }\n    }\n  ` : ''\n}\n\nfunction resultTmpl (serialize) {\n  return serialize === false ? `return o` : `\n    var s = this.serialize(o)\n    this.restore(o)\n    return s\n  `\n}\n\nfunction strictImpl (strict, serialize) {\n  return strict === true\n    ? `throw Error('fast-redact: primitives cannot be redacted')`\n    : serialize === false ? `return o` : `return this.serialize(o)`\n}\n","'use strict'\n\nmodule.exports = {\n  groupRedact,\n  groupRestore,\n  nestedRedact,\n  nestedRestore\n}\n\nfunction groupRestore ({ keys, values, target }) {\n  if (target == null || typeof target === 'string') return\n  const length = keys.length\n  for (var i = 0; i < length; i++) {\n    const k = keys[i]\n    target[k] = values[i]\n  }\n}\n\nfunction groupRedact (o, path, censor, isCensorFct, censorFctTakesPath) {\n  const target = get(o, path)\n  if (target == null || typeof target === 'string') return { keys: null, values: null, target, flat: true }\n  const keys = Object.keys(target)\n  const keysLength = keys.length\n  const pathLength = path.length\n  const pathWithKey = censorFctTakesPath ? [...path] : undefined\n  const values = new Array(keysLength)\n\n  for (var i = 0; i < keysLength; i++) {\n    const key = keys[i]\n    values[i] = target[key]\n\n    if (censorFctTakesPath) {\n      pathWithKey[pathLength] = key\n      target[key] = censor(target[key], pathWithKey)\n    } else if (isCensorFct) {\n      target[key] = censor(target[key])\n    } else {\n      target[key] = censor\n    }\n  }\n  return { keys, values, target, flat: true }\n}\n\n/**\n * @param {RestoreInstruction[]} instructions a set of instructions for restoring values to objects\n */\nfunction nestedRestore (instructions) {\n  for (let i = 0; i < instructions.length; i++) {\n    const { target, path, value } = instructions[i]\n    let current = target\n    for (let i = path.length - 1; i > 0; i--) {\n      current = current[path[i]]\n    }\n    current[path[0]] = value\n  }\n}\n\nfunction nestedRedact (store, o, path, ns, censor, isCensorFct, censorFctTakesPath) {\n  const target = get(o, path)\n  if (target == null) return\n  const keys = Object.keys(target)\n  const keysLength = keys.length\n  for (var i = 0; i < keysLength; i++) {\n    const key = keys[i]\n    specialSet(store, target, key, path, ns, censor, isCensorFct, censorFctTakesPath)\n  }\n  return store\n}\n\nfunction has (obj, prop) {\n  return obj !== undefined && obj !== null\n    ? ('hasOwn' in Object ? Object.hasOwn(obj, prop) : Object.prototype.hasOwnProperty.call(obj, prop))\n    : false\n}\n\nfunction specialSet (store, o, k, path, afterPath, censor, isCensorFct, censorFctTakesPath) {\n  const afterPathLen = afterPath.length\n  const lastPathIndex = afterPathLen - 1\n  const originalKey = k\n  var i = -1\n  var n\n  var nv\n  var ov\n  var oov = null\n  var wc = null\n  var kIsWc\n  var wcov\n  var consecutive = false\n  var level = 0\n  // need to track depth of the `redactPath` tree\n  var depth = 0\n  var redactPathCurrent = tree()\n  ov = n = o[k]\n  if (typeof n !== 'object') return\n  while (n != null && ++i < afterPathLen) {\n    depth += 1\n    k = afterPath[i]\n    oov = ov\n    if (k !== '*' && !wc && !(typeof n === 'object' && k in n)) {\n      break\n    }\n    if (k === '*') {\n      if (wc === '*') {\n        consecutive = true\n      }\n      wc = k\n      if (i !== lastPathIndex) {\n        continue\n      }\n    }\n    if (wc) {\n      const wcKeys = Object.keys(n)\n      for (var j = 0; j < wcKeys.length; j++) {\n        const wck = wcKeys[j]\n        wcov = n[wck]\n        kIsWc = k === '*'\n        if (consecutive) {\n          redactPathCurrent = node(redactPathCurrent, wck, depth)\n          level = i\n          ov = iterateNthLevel(wcov, level - 1, k, path, afterPath, censor, isCensorFct, censorFctTakesPath, originalKey, n, nv, ov, kIsWc, wck, i, lastPathIndex, redactPathCurrent, store, o[originalKey], depth + 1)\n        } else {\n          if (kIsWc || (typeof wcov === 'object' && wcov !== null && k in wcov)) {\n            if (kIsWc) {\n              ov = wcov\n            } else {\n              ov = wcov[k]\n            }\n            nv = (i !== lastPathIndex)\n              ? ov\n              : (isCensorFct\n                ? (censorFctTakesPath ? censor(ov, [...path, originalKey, ...afterPath]) : censor(ov))\n                : censor)\n            if (kIsWc) {\n              const rv = restoreInstr(node(redactPathCurrent, wck, depth), ov, o[originalKey])\n              store.push(rv)\n              n[wck] = nv\n            } else {\n              if (wcov[k] === nv) {\n                // pass\n              } else if ((nv === undefined && censor !== undefined) || (has(wcov, k) && nv === ov)) {\n                redactPathCurrent = node(redactPathCurrent, wck, depth)\n              } else {\n                redactPathCurrent = node(redactPathCurrent, wck, depth)\n                const rv = restoreInstr(node(redactPathCurrent, k, depth + 1), ov, o[originalKey])\n                store.push(rv)\n                wcov[k] = nv\n              }\n            }\n          }\n        }\n      }\n      wc = null\n    } else {\n      ov = n[k]\n      redactPathCurrent = node(redactPathCurrent, k, depth)\n      nv = (i !== lastPathIndex)\n        ? ov\n        : (isCensorFct\n          ? (censorFctTakesPath ? censor(ov, [...path, originalKey, ...afterPath]) : censor(ov))\n          : censor)\n      if ((has(n, k) && nv === ov) || (nv === undefined && censor !== undefined)) {\n        // pass\n      } else {\n        const rv = restoreInstr(redactPathCurrent, ov, o[originalKey])\n        store.push(rv)\n        n[k] = nv\n      }\n      n = n[k]\n    }\n    if (typeof n !== 'object') break\n    // prevent circular structure, see https://github.com/pinojs/pino/issues/1513\n    if (ov === oov || typeof ov === 'undefined') {\n      // pass\n    }\n  }\n}\n\nfunction get (o, p) {\n  var i = -1\n  var l = p.length\n  var n = o\n  while (n != null && ++i < l) {\n    n = n[p[i]]\n  }\n  return n\n}\n\nfunction iterateNthLevel (wcov, level, k, path, afterPath, censor, isCensorFct, censorFctTakesPath, originalKey, n, nv, ov, kIsWc, wck, i, lastPathIndex, redactPathCurrent, store, parent, depth) {\n  if (level === 0) {\n    if (kIsWc || (typeof wcov === 'object' && wcov !== null && k in wcov)) {\n      if (kIsWc) {\n        ov = wcov\n      } else {\n        ov = wcov[k]\n      }\n      nv = (i !== lastPathIndex)\n        ? ov\n        : (isCensorFct\n          ? (censorFctTakesPath ? censor(ov, [...path, originalKey, ...afterPath]) : censor(ov))\n          : censor)\n      if (kIsWc) {\n        const rv = restoreInstr(redactPathCurrent, ov, parent)\n        store.push(rv)\n        n[wck] = nv\n      } else {\n        if (wcov[k] === nv) {\n          // pass\n        } else if ((nv === undefined && censor !== undefined) || (has(wcov, k) && nv === ov)) {\n          // pass\n        } else {\n          const rv = restoreInstr(node(redactPathCurrent, k, depth + 1), ov, parent)\n          store.push(rv)\n          wcov[k] = nv\n        }\n      }\n    }\n  }\n  for (const key in wcov) {\n    if (typeof wcov[key] === 'object') {\n      redactPathCurrent = node(redactPathCurrent, key, depth)\n      iterateNthLevel(wcov[key], level - 1, k, path, afterPath, censor, isCensorFct, censorFctTakesPath, originalKey, n, nv, ov, kIsWc, wck, i, lastPathIndex, redactPathCurrent, store, parent, depth + 1)\n    }\n  }\n}\n\n/**\n * @typedef {object} TreeNode\n * @prop {TreeNode} [parent] reference to the parent of this node in the tree, or `null` if there is no parent\n * @prop {string} key the key that this node represents (key here being part of the path being redacted\n * @prop {TreeNode[]} children the child nodes of this node\n * @prop {number} depth the depth of this node in the tree\n */\n\n/**\n * instantiate a new, empty tree\n * @returns {TreeNode}\n */\nfunction tree () {\n  return { parent: null, key: null, children: [], depth: 0 }\n}\n\n/**\n * creates a new node in the tree, attaching it as a child of the provided parent node\n * if the specified depth matches the parent depth, adds the new node as a _sibling_ of the parent instead\n  * @param {TreeNode} parent the parent node to add a new node to (if the parent depth matches the provided `depth` value, will instead add as a sibling of this\n  * @param {string} key the key that the new node represents (key here being part of the path being redacted)\n  * @param {number} depth the depth of the new node in the tree - used to determing whether to add the new node as a child or sibling of the provided `parent` node\n  * @returns {TreeNode} a reference to the newly created node in the tree\n */\nfunction node (parent, key, depth) {\n  if (parent.depth === depth) {\n    return node(parent.parent, key, depth)\n  }\n\n  var child = {\n    parent,\n    key,\n    depth,\n    children: []\n  }\n\n  parent.children.push(child)\n\n  return child\n}\n\n/**\n * @typedef {object} RestoreInstruction\n * @prop {string[]} path a reverse-order path that can be used to find the correct insertion point to restore a `value` for the given `parent` object\n * @prop {*} value the value to restore\n * @prop {object} target the object to restore the `value` in\n */\n\n/**\n * create a restore instruction for the given redactPath node\n * generates a path in reverse order by walking up the redactPath tree\n * @param {TreeNode} node a tree node that should be at the bottom of the redact path (i.e. have no children) - this will be used to walk up the redact path tree to construct the path needed to restore\n * @param {*} value the value to restore\n * @param {object} target a reference to the parent object to apply the restore instruction to\n * @returns {RestoreInstruction} an instruction used to restore a nested value for a specific object\n */\nfunction restoreInstr (node, value, target) {\n  let current = node\n  const path = []\n  do {\n    path.push(current.key)\n    current = current.parent\n  } while (current.parent != null)\n\n  return { path, value, target }\n}\n","'use strict'\n\nconst { groupRestore, nestedRestore } = require('./modifiers')\n\nmodule.exports = restorer\n\nfunction restorer () {\n  return function compileRestore () {\n    if (this.restore) {\n      this.restore.state.secret = this.secret\n      return\n    }\n    const { secret, wcLen } = this\n    const paths = Object.keys(secret)\n    const resetters = resetTmpl(secret, paths)\n    const hasWildcards = wcLen > 0\n    const state = hasWildcards ? { secret, groupRestore, nestedRestore } : { secret }\n    /* eslint-disable-next-line */\n    this.restore = Function(\n      'o',\n      restoreTmpl(resetters, paths, hasWildcards)\n    ).bind(state)\n    this.restore.state = state\n  }\n}\n\n/**\n * Mutates the original object to be censored by restoring its original values\n * prior to censoring.\n *\n * @param {object} secret Compiled object describing which target fields should\n * be censored and the field states.\n * @param {string[]} paths The list of paths to censor as provided at\n * initialization time.\n *\n * @returns {string} String of JavaScript to be used by `Function()`. The\n * string compiles to the function that does the work in the description.\n */\nfunction resetTmpl (secret, paths) {\n  return paths.map((path) => {\n    const { circle, escPath, leadingBracket } = secret[path]\n    const delim = leadingBracket ? '' : '.'\n    const reset = circle\n      ? `o.${circle} = secret[${escPath}].val`\n      : `o${delim}${path} = secret[${escPath}].val`\n    const clear = `secret[${escPath}].val = undefined`\n    return `\n      if (secret[${escPath}].val !== undefined) {\n        try { ${reset} } catch (e) {}\n        ${clear}\n      }\n    `\n  }).join('')\n}\n\n/**\n * Creates the body of the restore function\n *\n * Restoration of the redacted object happens\n * backwards, in reverse order of redactions,\n * so that repeated redactions on the same object\n * property can be eventually rolled back to the\n * original value.\n *\n * This way dynamic redactions are restored first,\n * starting from the last one working backwards and\n * followed by the static ones.\n *\n * @returns {string} the body of the restore function\n */\nfunction restoreTmpl (resetters, paths, hasWildcards) {\n  const dynamicReset = hasWildcards === true ? `\n    const keys = Object.keys(secret)\n    const len = keys.length\n    for (var i = len - 1; i >= ${paths.length}; i--) {\n      const k = keys[i]\n      const o = secret[k]\n      if (o) {\n        if (o.flat === true) this.groupRestore(o)\n        else this.nestedRestore(o)\n        secret[k] = null\n      }\n    }\n  ` : ''\n\n  return `\n    const secret = this.secret\n    ${dynamicReset}\n    ${resetters}\n    return o\n  `\n}\n","'use strict'\n\nmodule.exports = state\n\nfunction state (o) {\n  const {\n    secret,\n    censor,\n    compileRestore,\n    serialize,\n    groupRedact,\n    nestedRedact,\n    wildcards,\n    wcLen\n  } = o\n  const builder = [{ secret, censor, compileRestore }]\n  if (serialize !== false) builder.push({ serialize })\n  if (wcLen > 0) builder.push({ groupRedact, nestedRedact, wildcards, wcLen })\n  return Object.assign(...builder)\n}\n","'use strict'\n\nconst validator = require('./lib/validator')\nconst parse = require('./lib/parse')\nconst redactor = require('./lib/redactor')\nconst restorer = require('./lib/restorer')\nconst { groupRedact, nestedRedact } = require('./lib/modifiers')\nconst state = require('./lib/state')\nconst rx = require('./lib/rx')\nconst validate = validator()\nconst noop = (o) => o\nnoop.restore = noop\n\nconst DEFAULT_CENSOR = '[REDACTED]'\nfastRedact.rx = rx\nfastRedact.validator = validator\n\nmodule.exports = fastRedact\n\nfunction fastRedact (opts = {}) {\n  const paths = Array.from(new Set(opts.paths || []))\n  const serialize = 'serialize' in opts ? (\n    opts.serialize === false ? opts.serialize\n      : (typeof opts.serialize === 'function' ? opts.serialize : JSON.stringify)\n  ) : JSON.stringify\n  const remove = opts.remove\n  if (remove === true && serialize !== JSON.stringify) {\n    throw Error('fast-redact – remove option may only be set when serializer is JSON.stringify')\n  }\n  const censor = remove === true\n    ? undefined\n    : 'censor' in opts ? opts.censor : DEFAULT_CENSOR\n\n  const isCensorFct = typeof censor === 'function'\n  const censorFctTakesPath = isCensorFct && censor.length > 1\n\n  if (paths.length === 0) return serialize || noop\n\n  validate({ paths, serialize, censor })\n\n  const { wildcards, wcLen, secret } = parse({ paths, censor })\n\n  const compileRestore = restorer()\n  const strict = 'strict' in opts ? opts.strict : true\n\n  return redactor({ secret, wcLen, serialize, strict, isCensorFct, censorFctTakesPath }, state({\n    secret,\n    censor,\n    compileRestore,\n    serialize,\n    groupRedact,\n    nestedRedact,\n    wildcards,\n    wcLen\n  }))\n}\n","'use strict'\n\nconst setLevelSym = Symbol('pino.setLevel')\nconst getLevelSym = Symbol('pino.getLevel')\nconst levelValSym = Symbol('pino.levelVal')\nconst levelCompSym = Symbol('pino.levelComp')\nconst useLevelLabelsSym = Symbol('pino.useLevelLabels')\nconst useOnlyCustomLevelsSym = Symbol('pino.useOnlyCustomLevels')\nconst mixinSym = Symbol('pino.mixin')\n\nconst lsCacheSym = Symbol('pino.lsCache')\nconst chindingsSym = Symbol('pino.chindings')\n\nconst asJsonSym = Symbol('pino.asJson')\nconst writeSym = Symbol('pino.write')\nconst redactFmtSym = Symbol('pino.redactFmt')\n\nconst timeSym = Symbol('pino.time')\nconst timeSliceIndexSym = Symbol('pino.timeSliceIndex')\nconst streamSym = Symbol('pino.stream')\nconst stringifySym = Symbol('pino.stringify')\nconst stringifySafeSym = Symbol('pino.stringifySafe')\nconst stringifiersSym = Symbol('pino.stringifiers')\nconst endSym = Symbol('pino.end')\nconst formatOptsSym = Symbol('pino.formatOpts')\nconst messageKeySym = Symbol('pino.messageKey')\nconst errorKeySym = Symbol('pino.errorKey')\nconst nestedKeySym = Symbol('pino.nestedKey')\nconst nestedKeyStrSym = Symbol('pino.nestedKeyStr')\nconst mixinMergeStrategySym = Symbol('pino.mixinMergeStrategy')\nconst msgPrefixSym = Symbol('pino.msgPrefix')\n\nconst wildcardFirstSym = Symbol('pino.wildcardFirst')\n\n// public symbols, no need to use the same pino\n// version for these\nconst serializersSym = Symbol.for('pino.serializers')\nconst formattersSym = Symbol.for('pino.formatters')\nconst hooksSym = Symbol.for('pino.hooks')\nconst needsMetadataGsym = Symbol.for('pino.metadata')\n\nmodule.exports = {\n  setLevelSym,\n  getLevelSym,\n  levelValSym,\n  levelCompSym,\n  useLevelLabelsSym,\n  mixinSym,\n  lsCacheSym,\n  chindingsSym,\n  asJsonSym,\n  writeSym,\n  serializersSym,\n  redactFmtSym,\n  timeSym,\n  timeSliceIndexSym,\n  streamSym,\n  stringifySym,\n  stringifySafeSym,\n  stringifiersSym,\n  endSym,\n  formatOptsSym,\n  messageKeySym,\n  errorKeySym,\n  nestedKeySym,\n  wildcardFirstSym,\n  needsMetadataGsym,\n  useOnlyCustomLevelsSym,\n  formattersSym,\n  hooksSym,\n  nestedKeyStrSym,\n  mixinMergeStrategySym,\n  msgPrefixSym\n}\n","'use strict'\n\nconst fastRedact = require('fast-redact')\nconst { redactFmtSym, wildcardFirstSym } = require('./symbols')\nconst { rx, validator } = fastRedact\n\nconst validate = validator({\n  ERR_PATHS_MUST_BE_STRINGS: () => 'pino – redacted paths must be strings',\n  ERR_INVALID_PATH: (s) => `pino – redact paths array contains an invalid path (${s})`\n})\n\nconst CENSOR = '[Redacted]'\nconst strict = false // TODO should this be configurable?\n\nfunction redaction (opts, serialize) {\n  const { paths, censor } = handle(opts)\n\n  const shape = paths.reduce((o, str) => {\n    rx.lastIndex = 0\n    const first = rx.exec(str)\n    const next = rx.exec(str)\n\n    // ns is the top-level path segment, brackets + quoting removed.\n    let ns = first[1] !== undefined\n      ? first[1].replace(/^(?:\"|'|`)(.*)(?:\"|'|`)$/, '$1')\n      : first[0]\n\n    if (ns === '*') {\n      ns = wildcardFirstSym\n    }\n\n    // top level key:\n    if (next === null) {\n      o[ns] = null\n      return o\n    }\n\n    // path with at least two segments:\n    // if ns is already redacted at the top level, ignore lower level redactions\n    if (o[ns] === null) {\n      return o\n    }\n\n    const { index } = next\n    const nextPath = `${str.substr(index, str.length - 1)}`\n\n    o[ns] = o[ns] || []\n\n    // shape is a mix of paths beginning with literal values and wildcard\n    // paths [ \"a.b.c\", \"*.b.z\" ] should reduce to a shape of\n    // { \"a\": [ \"b.c\", \"b.z\" ], *: [ \"b.z\" ] }\n    // note: \"b.z\" is in both \"a\" and * arrays because \"a\" matches the wildcard.\n    // (* entry has wildcardFirstSym as key)\n    if (ns !== wildcardFirstSym && o[ns].length === 0) {\n      // first time ns's get all '*' redactions so far\n      o[ns].push(...(o[wildcardFirstSym] || []))\n    }\n\n    if (ns === wildcardFirstSym) {\n      // new * path gets added to all previously registered literal ns's.\n      Object.keys(o).forEach(function (k) {\n        if (o[k]) {\n          o[k].push(nextPath)\n        }\n      })\n    }\n\n    o[ns].push(nextPath)\n    return o\n  }, {})\n\n  // the redactor assigned to the format symbol key\n  // provides top level redaction for instances where\n  // an object is interpolated into the msg string\n  const result = {\n    [redactFmtSym]: fastRedact({ paths, censor, serialize, strict })\n  }\n\n  const topCensor = (...args) => {\n    return typeof censor === 'function' ? serialize(censor(...args)) : serialize(censor)\n  }\n\n  return [...Object.keys(shape), ...Object.getOwnPropertySymbols(shape)].reduce((o, k) => {\n    // top level key:\n    if (shape[k] === null) {\n      o[k] = (value) => topCensor(value, [k])\n    } else {\n      const wrappedCensor = typeof censor === 'function'\n        ? (value, path) => {\n            return censor(value, [k, ...path])\n          }\n        : censor\n      o[k] = fastRedact({\n        paths: shape[k],\n        censor: wrappedCensor,\n        serialize,\n        strict\n      })\n    }\n    return o\n  }, result)\n}\n\nfunction handle (opts) {\n  if (Array.isArray(opts)) {\n    opts = { paths: opts, censor: CENSOR }\n    validate(opts)\n    return opts\n  }\n  let { paths, censor = CENSOR, remove } = opts\n  if (Array.isArray(paths) === false) { throw Error('pino – redact must contain an array of strings') }\n  if (remove === true) censor = undefined\n  validate({ paths, censor })\n\n  return { paths, censor }\n}\n\nmodule.exports = redaction\n","'use strict'\n\nconst nullTime = () => ''\n\nconst epochTime = () => `,\"time\":${Date.now()}`\n\nconst unixTime = () => `,\"time\":${Math.round(Date.now() / 1000.0)}`\n\nconst isoTime = () => `,\"time\":\"${new Date(Date.now()).toISOString()}\"` // using Date.now() for testability\n\nmodule.exports = { nullTime, epochTime, unixTime, isoTime }\n","'use strict'\nfunction tryStringify (o) {\n  try { return JSON.stringify(o) } catch(e) { return '\"[Circular]\"' }\n}\n\nmodule.exports = format\n\nfunction format(f, args, opts) {\n  var ss = (opts && opts.stringify) || tryStringify\n  var offset = 1\n  if (typeof f === 'object' && f !== null) {\n    var len = args.length + offset\n    if (len === 1) return f\n    var objects = new Array(len)\n    objects[0] = ss(f)\n    for (var index = 1; index < len; index++) {\n      objects[index] = ss(args[index])\n    }\n    return objects.join(' ')\n  }\n  if (typeof f !== 'string') {\n    return f\n  }\n  var argLen = args.length\n  if (argLen === 0) return f\n  var str = ''\n  var a = 1 - offset\n  var lastPos = -1\n  var flen = (f && f.length) || 0\n  for (var i = 0; i < flen;) {\n    if (f.charCodeAt(i) === 37 && i + 1 < flen) {\n      lastPos = lastPos > -1 ? lastPos : 0\n      switch (f.charCodeAt(i + 1)) {\n        case 100: // 'd'\n        case 102: // 'f'\n          if (a >= argLen)\n            break\n          if (args[a] == null)  break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += Number(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 105: // 'i'\n          if (a >= argLen)\n            break\n          if (args[a] == null)  break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += Math.floor(Number(args[a]))\n          lastPos = i + 2\n          i++\n          break\n        case 79: // 'O'\n        case 111: // 'o'\n        case 106: // 'j'\n          if (a >= argLen)\n            break\n          if (args[a] === undefined) break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          var type = typeof args[a]\n          if (type === 'string') {\n            str += '\\'' + args[a] + '\\''\n            lastPos = i + 2\n            i++\n            break\n          }\n          if (type === 'function') {\n            str += args[a].name || '<anonymous>'\n            lastPos = i + 2\n            i++\n            break\n          }\n          str += ss(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 115: // 's'\n          if (a >= argLen)\n            break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += String(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 37: // '%'\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += '%'\n          lastPos = i + 2\n          i++\n          a--\n          break\n      }\n      ++a\n    }\n    ++i\n  }\n  if (lastPos === -1)\n    return f\n  else if (lastPos < flen) {\n    str += f.slice(lastPos)\n  }\n\n  return str\n}\n","{\n  \"name\": \"thread-stream\",\n  \"version\": \"3.1.0\",\n  \"description\": \"A streaming way to send data to a Node.js Worker Thread\",\n  \"main\": \"index.js\",\n  \"types\": \"index.d.ts\",\n  \"dependencies\": {\n    \"real-require\": \"^0.2.0\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"^20.1.0\",\n    \"@types/tap\": \"^15.0.0\",\n    \"@yao-pkg/pkg\": \"^5.11.5\",\n    \"desm\": \"^1.3.0\",\n    \"fastbench\": \"^1.0.1\",\n    \"husky\": \"^9.0.6\",\n    \"pino-elasticsearch\": \"^8.0.0\",\n    \"sonic-boom\": \"^4.0.1\",\n    \"standard\": \"^17.0.0\",\n    \"tap\": \"^16.2.0\",\n    \"ts-node\": \"^10.8.0\",\n    \"typescript\": \"^5.3.2\",\n    \"why-is-node-running\": \"^2.2.2\"\n  },\n  \"scripts\": {\n    \"build\": \"tsc --noEmit\",\n    \"test\": \"standard && npm run build && npm run transpile && tap \\\"test/**/*.test.*js\\\" && tap --ts test/*.test.*ts\",\n    \"test:ci\": \"standard && npm run transpile && npm run test:ci:js && npm run test:ci:ts\",\n    \"test:ci:js\": \"tap --no-check-coverage --timeout=120 --coverage-report=lcovonly \\\"test/**/*.test.*js\\\"\",\n    \"test:ci:ts\": \"tap --ts --no-check-coverage --coverage-report=lcovonly \\\"test/**/*.test.*ts\\\"\",\n    \"test:yarn\": \"npm run transpile && tap \\\"test/**/*.test.js\\\" --no-check-coverage\",\n    \"transpile\": \"sh ./test/ts/transpile.sh\",\n    \"prepare\": \"husky install\"\n  },\n  \"standard\": {\n    \"ignore\": [\n      \"test/ts/**/*\",\n      \"test/syntax-error.mjs\"\n    ]\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/mcollina/thread-stream.git\"\n  },\n  \"keywords\": [\n    \"worker\",\n    \"thread\",\n    \"threads\",\n    \"stream\"\n  ],\n  \"author\": \"Matteo Collina <hello@matteocollina.com>\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/mcollina/thread-stream/issues\"\n  },\n  \"homepage\": \"https://github.com/mcollina/thread-stream#readme\"\n}\n","'use strict'\n\nconst MAX_TIMEOUT = 1000\n\nfunction wait (state, index, expected, timeout, done) {\n  const max = Date.now() + timeout\n  let current = Atomics.load(state, index)\n  if (current === expected) {\n    done(null, 'ok')\n    return\n  }\n  let prior = current\n  const check = (backoff) => {\n    if (Date.now() > max) {\n      done(null, 'timed-out')\n    } else {\n      setTimeout(() => {\n        prior = current\n        current = Atomics.load(state, index)\n        if (current === prior) {\n          check(backoff >= MAX_TIMEOUT ? MAX_TIMEOUT : backoff * 2)\n        } else {\n          if (current === expected) done(null, 'ok')\n          else done(null, 'not-equal')\n        }\n      }, backoff)\n    }\n  }\n  check(1)\n}\n\n// let waitDiffCount = 0\nfunction waitDiff (state, index, expected, timeout, done) {\n  // const id = waitDiffCount++\n  // process._rawDebug(`>>> waitDiff ${id}`)\n  const max = Date.now() + timeout\n  let current = Atomics.load(state, index)\n  if (current !== expected) {\n    done(null, 'ok')\n    return\n  }\n  const check = (backoff) => {\n    // process._rawDebug(`${id} ${index} current ${current} expected ${expected}`)\n    // process._rawDebug('' + backoff)\n    if (Date.now() > max) {\n      done(null, 'timed-out')\n    } else {\n      setTimeout(() => {\n        current = Atomics.load(state, index)\n        if (current !== expected) {\n          done(null, 'ok')\n        } else {\n          check(backoff >= MAX_TIMEOUT ? MAX_TIMEOUT : backoff * 2)\n        }\n      }, backoff)\n    }\n  }\n  check(1)\n}\n\nmodule.exports = { wait, waitDiff }\n","'use strict'\n\nconst WRITE_INDEX = 4\nconst READ_INDEX = 8\n\nmodule.exports = {\n  WRITE_INDEX,\n  READ_INDEX\n}\n","'use strict'\n\nconst { version } = require('./package.json')\nconst { EventEmitter } = require('events')\nconst { Worker } = require('worker_threads')\nconst { join } = require('path')\nconst { pathToFileURL } = require('url')\nconst { wait } = require('./lib/wait')\nconst {\n  WRITE_INDEX,\n  READ_INDEX\n} = require('./lib/indexes')\nconst buffer = require('buffer')\nconst assert = require('assert')\n\nconst kImpl = Symbol('kImpl')\n\n// V8 limit for string size\nconst MAX_STRING = buffer.constants.MAX_STRING_LENGTH\n\nclass FakeWeakRef {\n  constructor (value) {\n    this._value = value\n  }\n\n  deref () {\n    return this._value\n  }\n}\n\nclass FakeFinalizationRegistry {\n  register () {}\n\n  unregister () {}\n}\n\n// Currently using FinalizationRegistry with code coverage breaks the world\n// Ref: https://github.com/nodejs/node/issues/49344\nconst FinalizationRegistry = process.env.NODE_V8_COVERAGE ? FakeFinalizationRegistry : global.FinalizationRegistry || FakeFinalizationRegistry\nconst WeakRef = process.env.NODE_V8_COVERAGE ? FakeWeakRef : global.WeakRef || FakeWeakRef\n\nconst registry = new FinalizationRegistry((worker) => {\n  if (worker.exited) {\n    return\n  }\n  worker.terminate()\n})\n\nfunction createWorker (stream, opts) {\n  const { filename, workerData } = opts\n\n  const bundlerOverrides = '__bundlerPathsOverrides' in globalThis ? globalThis.__bundlerPathsOverrides : {}\n  const toExecute = bundlerOverrides['thread-stream-worker'] || join(__dirname, 'lib', 'worker.js')\n\n  const worker = new Worker(toExecute, {\n    ...opts.workerOpts,\n    trackUnmanagedFds: false,\n    workerData: {\n      filename: filename.indexOf('file://') === 0\n        ? filename\n        : pathToFileURL(filename).href,\n      dataBuf: stream[kImpl].dataBuf,\n      stateBuf: stream[kImpl].stateBuf,\n      workerData: {\n        $context: {\n          threadStreamVersion: version\n        },\n        ...workerData\n      }\n    }\n  })\n\n  // We keep a strong reference for now,\n  // we need to start writing first\n  worker.stream = new FakeWeakRef(stream)\n\n  worker.on('message', onWorkerMessage)\n  worker.on('exit', onWorkerExit)\n  registry.register(stream, worker)\n\n  return worker\n}\n\nfunction drain (stream) {\n  assert(!stream[kImpl].sync)\n  if (stream[kImpl].needDrain) {\n    stream[kImpl].needDrain = false\n    stream.emit('drain')\n  }\n}\n\nfunction nextFlush (stream) {\n  const writeIndex = Atomics.load(stream[kImpl].state, WRITE_INDEX)\n  let leftover = stream[kImpl].data.length - writeIndex\n\n  if (leftover > 0) {\n    if (stream[kImpl].buf.length === 0) {\n      stream[kImpl].flushing = false\n\n      if (stream[kImpl].ending) {\n        end(stream)\n      } else if (stream[kImpl].needDrain) {\n        process.nextTick(drain, stream)\n      }\n\n      return\n    }\n\n    let toWrite = stream[kImpl].buf.slice(0, leftover)\n    let toWriteBytes = Buffer.byteLength(toWrite)\n    if (toWriteBytes <= leftover) {\n      stream[kImpl].buf = stream[kImpl].buf.slice(leftover)\n      // process._rawDebug('writing ' + toWrite.length)\n      write(stream, toWrite, nextFlush.bind(null, stream))\n    } else {\n      // multi-byte utf-8\n      stream.flush(() => {\n        // err is already handled in flush()\n        if (stream.destroyed) {\n          return\n        }\n\n        Atomics.store(stream[kImpl].state, READ_INDEX, 0)\n        Atomics.store(stream[kImpl].state, WRITE_INDEX, 0)\n\n        // Find a toWrite length that fits the buffer\n        // it must exists as the buffer is at least 4 bytes length\n        // and the max utf-8 length for a char is 4 bytes.\n        while (toWriteBytes > stream[kImpl].data.length) {\n          leftover = leftover / 2\n          toWrite = stream[kImpl].buf.slice(0, leftover)\n          toWriteBytes = Buffer.byteLength(toWrite)\n        }\n        stream[kImpl].buf = stream[kImpl].buf.slice(leftover)\n        write(stream, toWrite, nextFlush.bind(null, stream))\n      })\n    }\n  } else if (leftover === 0) {\n    if (writeIndex === 0 && stream[kImpl].buf.length === 0) {\n      // we had a flushSync in the meanwhile\n      return\n    }\n    stream.flush(() => {\n      Atomics.store(stream[kImpl].state, READ_INDEX, 0)\n      Atomics.store(stream[kImpl].state, WRITE_INDEX, 0)\n      nextFlush(stream)\n    })\n  } else {\n    // This should never happen\n    destroy(stream, new Error('overwritten'))\n  }\n}\n\nfunction onWorkerMessage (msg) {\n  const stream = this.stream.deref()\n  if (stream === undefined) {\n    this.exited = true\n    // Terminate the worker.\n    this.terminate()\n    return\n  }\n\n  switch (msg.code) {\n    case 'READY':\n      // Replace the FakeWeakRef with a\n      // proper one.\n      this.stream = new WeakRef(stream)\n\n      stream.flush(() => {\n        stream[kImpl].ready = true\n        stream.emit('ready')\n      })\n      break\n    case 'ERROR':\n      destroy(stream, msg.err)\n      break\n    case 'EVENT':\n      if (Array.isArray(msg.args)) {\n        stream.emit(msg.name, ...msg.args)\n      } else {\n        stream.emit(msg.name, msg.args)\n      }\n      break\n    case 'WARNING':\n      process.emitWarning(msg.err)\n      break\n    default:\n      destroy(stream, new Error('this should not happen: ' + msg.code))\n  }\n}\n\nfunction onWorkerExit (code) {\n  const stream = this.stream.deref()\n  if (stream === undefined) {\n    // Nothing to do, the worker already exit\n    return\n  }\n  registry.unregister(stream)\n  stream.worker.exited = true\n  stream.worker.off('exit', onWorkerExit)\n  destroy(stream, code !== 0 ? new Error('the worker thread exited') : null)\n}\n\nclass ThreadStream extends EventEmitter {\n  constructor (opts = {}) {\n    super()\n\n    if (opts.bufferSize < 4) {\n      throw new Error('bufferSize must at least fit a 4-byte utf-8 char')\n    }\n\n    this[kImpl] = {}\n    this[kImpl].stateBuf = new SharedArrayBuffer(128)\n    this[kImpl].state = new Int32Array(this[kImpl].stateBuf)\n    this[kImpl].dataBuf = new SharedArrayBuffer(opts.bufferSize || 4 * 1024 * 1024)\n    this[kImpl].data = Buffer.from(this[kImpl].dataBuf)\n    this[kImpl].sync = opts.sync || false\n    this[kImpl].ending = false\n    this[kImpl].ended = false\n    this[kImpl].needDrain = false\n    this[kImpl].destroyed = false\n    this[kImpl].flushing = false\n    this[kImpl].ready = false\n    this[kImpl].finished = false\n    this[kImpl].errored = null\n    this[kImpl].closed = false\n    this[kImpl].buf = ''\n\n    // TODO (fix): Make private?\n    this.worker = createWorker(this, opts) // TODO (fix): make private\n    this.on('message', (message, transferList) => {\n      this.worker.postMessage(message, transferList)\n    })\n  }\n\n  write (data) {\n    if (this[kImpl].destroyed) {\n      error(this, new Error('the worker has exited'))\n      return false\n    }\n\n    if (this[kImpl].ending) {\n      error(this, new Error('the worker is ending'))\n      return false\n    }\n\n    if (this[kImpl].flushing && this[kImpl].buf.length + data.length >= MAX_STRING) {\n      try {\n        writeSync(this)\n        this[kImpl].flushing = true\n      } catch (err) {\n        destroy(this, err)\n        return false\n      }\n    }\n\n    this[kImpl].buf += data\n\n    if (this[kImpl].sync) {\n      try {\n        writeSync(this)\n        return true\n      } catch (err) {\n        destroy(this, err)\n        return false\n      }\n    }\n\n    if (!this[kImpl].flushing) {\n      this[kImpl].flushing = true\n      setImmediate(nextFlush, this)\n    }\n\n    this[kImpl].needDrain = this[kImpl].data.length - this[kImpl].buf.length - Atomics.load(this[kImpl].state, WRITE_INDEX) <= 0\n    return !this[kImpl].needDrain\n  }\n\n  end () {\n    if (this[kImpl].destroyed) {\n      return\n    }\n\n    this[kImpl].ending = true\n    end(this)\n  }\n\n  flush (cb) {\n    if (this[kImpl].destroyed) {\n      if (typeof cb === 'function') {\n        process.nextTick(cb, new Error('the worker has exited'))\n      }\n      return\n    }\n\n    // TODO write all .buf\n    const writeIndex = Atomics.load(this[kImpl].state, WRITE_INDEX)\n    // process._rawDebug(`(flush) readIndex (${Atomics.load(this.state, READ_INDEX)}) writeIndex (${Atomics.load(this.state, WRITE_INDEX)})`)\n    wait(this[kImpl].state, READ_INDEX, writeIndex, Infinity, (err, res) => {\n      if (err) {\n        destroy(this, err)\n        process.nextTick(cb, err)\n        return\n      }\n      if (res === 'not-equal') {\n        // TODO handle deadlock\n        this.flush(cb)\n        return\n      }\n      process.nextTick(cb)\n    })\n  }\n\n  flushSync () {\n    if (this[kImpl].destroyed) {\n      return\n    }\n\n    writeSync(this)\n    flushSync(this)\n  }\n\n  unref () {\n    this.worker.unref()\n  }\n\n  ref () {\n    this.worker.ref()\n  }\n\n  get ready () {\n    return this[kImpl].ready\n  }\n\n  get destroyed () {\n    return this[kImpl].destroyed\n  }\n\n  get closed () {\n    return this[kImpl].closed\n  }\n\n  get writable () {\n    return !this[kImpl].destroyed && !this[kImpl].ending\n  }\n\n  get writableEnded () {\n    return this[kImpl].ending\n  }\n\n  get writableFinished () {\n    return this[kImpl].finished\n  }\n\n  get writableNeedDrain () {\n    return this[kImpl].needDrain\n  }\n\n  get writableObjectMode () {\n    return false\n  }\n\n  get writableErrored () {\n    return this[kImpl].errored\n  }\n}\n\nfunction error (stream, err) {\n  setImmediate(() => {\n    stream.emit('error', err)\n  })\n}\n\nfunction destroy (stream, err) {\n  if (stream[kImpl].destroyed) {\n    return\n  }\n  stream[kImpl].destroyed = true\n\n  if (err) {\n    stream[kImpl].errored = err\n    error(stream, err)\n  }\n\n  if (!stream.worker.exited) {\n    stream.worker.terminate()\n      .catch(() => {})\n      .then(() => {\n        stream[kImpl].closed = true\n        stream.emit('close')\n      })\n  } else {\n    setImmediate(() => {\n      stream[kImpl].closed = true\n      stream.emit('close')\n    })\n  }\n}\n\nfunction write (stream, data, cb) {\n  // data is smaller than the shared buffer length\n  const current = Atomics.load(stream[kImpl].state, WRITE_INDEX)\n  const length = Buffer.byteLength(data)\n  stream[kImpl].data.write(data, current)\n  Atomics.store(stream[kImpl].state, WRITE_INDEX, current + length)\n  Atomics.notify(stream[kImpl].state, WRITE_INDEX)\n  cb()\n  return true\n}\n\nfunction end (stream) {\n  if (stream[kImpl].ended || !stream[kImpl].ending || stream[kImpl].flushing) {\n    return\n  }\n  stream[kImpl].ended = true\n\n  try {\n    stream.flushSync()\n\n    let readIndex = Atomics.load(stream[kImpl].state, READ_INDEX)\n\n    // process._rawDebug('writing index')\n    Atomics.store(stream[kImpl].state, WRITE_INDEX, -1)\n    // process._rawDebug(`(end) readIndex (${Atomics.load(stream.state, READ_INDEX)}) writeIndex (${Atomics.load(stream.state, WRITE_INDEX)})`)\n    Atomics.notify(stream[kImpl].state, WRITE_INDEX)\n\n    // Wait for the process to complete\n    let spins = 0\n    while (readIndex !== -1) {\n      // process._rawDebug(`read = ${read}`)\n      Atomics.wait(stream[kImpl].state, READ_INDEX, readIndex, 1000)\n      readIndex = Atomics.load(stream[kImpl].state, READ_INDEX)\n\n      if (readIndex === -2) {\n        destroy(stream, new Error('end() failed'))\n        return\n      }\n\n      if (++spins === 10) {\n        destroy(stream, new Error('end() took too long (10s)'))\n        return\n      }\n    }\n\n    process.nextTick(() => {\n      stream[kImpl].finished = true\n      stream.emit('finish')\n    })\n  } catch (err) {\n    destroy(stream, err)\n  }\n  // process._rawDebug('end finished...')\n}\n\nfunction writeSync (stream) {\n  const cb = () => {\n    if (stream[kImpl].ending) {\n      end(stream)\n    } else if (stream[kImpl].needDrain) {\n      process.nextTick(drain, stream)\n    }\n  }\n  stream[kImpl].flushing = false\n\n  while (stream[kImpl].buf.length !== 0) {\n    const writeIndex = Atomics.load(stream[kImpl].state, WRITE_INDEX)\n    let leftover = stream[kImpl].data.length - writeIndex\n    if (leftover === 0) {\n      flushSync(stream)\n      Atomics.store(stream[kImpl].state, READ_INDEX, 0)\n      Atomics.store(stream[kImpl].state, WRITE_INDEX, 0)\n      continue\n    } else if (leftover < 0) {\n      // stream should never happen\n      throw new Error('overwritten')\n    }\n\n    let toWrite = stream[kImpl].buf.slice(0, leftover)\n    let toWriteBytes = Buffer.byteLength(toWrite)\n    if (toWriteBytes <= leftover) {\n      stream[kImpl].buf = stream[kImpl].buf.slice(leftover)\n      // process._rawDebug('writing ' + toWrite.length)\n      write(stream, toWrite, cb)\n    } else {\n      // multi-byte utf-8\n      flushSync(stream)\n      Atomics.store(stream[kImpl].state, READ_INDEX, 0)\n      Atomics.store(stream[kImpl].state, WRITE_INDEX, 0)\n\n      // Find a toWrite length that fits the buffer\n      // it must exists as the buffer is at least 4 bytes length\n      // and the max utf-8 length for a char is 4 bytes.\n      while (toWriteBytes > stream[kImpl].buf.length) {\n        leftover = leftover / 2\n        toWrite = stream[kImpl].buf.slice(0, leftover)\n        toWriteBytes = Buffer.byteLength(toWrite)\n      }\n      stream[kImpl].buf = stream[kImpl].buf.slice(leftover)\n      write(stream, toWrite, cb)\n    }\n  }\n}\n\nfunction flushSync (stream) {\n  if (stream[kImpl].flushing) {\n    throw new Error('unable to flush while flushing')\n  }\n\n  // process._rawDebug('flushSync started')\n\n  const writeIndex = Atomics.load(stream[kImpl].state, WRITE_INDEX)\n\n  let spins = 0\n\n  // TODO handle deadlock\n  while (true) {\n    const readIndex = Atomics.load(stream[kImpl].state, READ_INDEX)\n\n    if (readIndex === -2) {\n      throw Error('_flushSync failed')\n    }\n\n    // process._rawDebug(`(flushSync) readIndex (${readIndex}) writeIndex (${writeIndex})`)\n    if (readIndex !== writeIndex) {\n      // TODO stream timeouts for some reason.\n      Atomics.wait(stream[kImpl].state, READ_INDEX, readIndex, 1000)\n    } else {\n      break\n    }\n\n    if (++spins === 10) {\n      throw new Error('_flushSync took too long (10s)')\n    }\n  }\n  // process._rawDebug('flushSync finished')\n}\n\nmodule.exports = ThreadStream\n","'use strict'\n\nconst { createRequire } = require('module')\nconst getCallers = require('./caller')\nconst { join, isAbsolute, sep } = require('node:path')\nconst sleep = require('atomic-sleep')\nconst onExit = require('on-exit-leak-free')\nconst ThreadStream = require('thread-stream')\n\nfunction setupOnExit (stream) {\n  // This is leak free, it does not leave event handlers\n  onExit.register(stream, autoEnd)\n  onExit.registerBeforeExit(stream, flush)\n\n  stream.on('close', function () {\n    onExit.unregister(stream)\n  })\n}\n\nfunction buildStream (filename, workerData, workerOpts, sync) {\n  const stream = new ThreadStream({\n    filename,\n    workerData,\n    workerOpts,\n    sync\n  })\n\n  stream.on('ready', onReady)\n  stream.on('close', function () {\n    process.removeListener('exit', onExit)\n  })\n\n  process.on('exit', onExit)\n\n  function onReady () {\n    process.removeListener('exit', onExit)\n    stream.unref()\n\n    if (workerOpts.autoEnd !== false) {\n      setupOnExit(stream)\n    }\n  }\n\n  function onExit () {\n    /* istanbul ignore next */\n    if (stream.closed) {\n      return\n    }\n    stream.flushSync()\n    // Apparently there is a very sporadic race condition\n    // that in certain OS would prevent the messages to be flushed\n    // because the thread might not have been created still.\n    // Unfortunately we need to sleep(100) in this case.\n    sleep(100)\n    stream.end()\n  }\n\n  return stream\n}\n\nfunction autoEnd (stream) {\n  stream.ref()\n  stream.flushSync()\n  stream.end()\n  stream.once('close', function () {\n    stream.unref()\n  })\n}\n\nfunction flush (stream) {\n  stream.flushSync()\n}\n\nfunction transport (fullOptions) {\n  const { pipeline, targets, levels, dedupe, worker = {}, caller = getCallers(), sync = false } = fullOptions\n\n  const options = {\n    ...fullOptions.options\n  }\n\n  // Backwards compatibility\n  const callers = typeof caller === 'string' ? [caller] : caller\n\n  // This will be eventually modified by bundlers\n  const bundlerOverrides = '__bundlerPathsOverrides' in globalThis ? globalThis.__bundlerPathsOverrides : {}\n\n  let target = fullOptions.target\n\n  if (target && targets) {\n    throw new Error('only one of target or targets can be specified')\n  }\n\n  if (targets) {\n    target = bundlerOverrides['pino-worker'] || join(__dirname, 'worker.js')\n    options.targets = targets.filter(dest => dest.target).map((dest) => {\n      return {\n        ...dest,\n        target: fixTarget(dest.target)\n      }\n    })\n    options.pipelines = targets.filter(dest => dest.pipeline).map((dest) => {\n      return dest.pipeline.map((t) => {\n        return {\n          ...t,\n          level: dest.level, // duplicate the pipeline `level` property defined in the upper level\n          target: fixTarget(t.target)\n        }\n      })\n    })\n  } else if (pipeline) {\n    target = bundlerOverrides['pino-worker'] || join(__dirname, 'worker.js')\n    options.pipelines = [pipeline.map((dest) => {\n      return {\n        ...dest,\n        target: fixTarget(dest.target)\n      }\n    })]\n  }\n\n  if (levels) {\n    options.levels = levels\n  }\n\n  if (dedupe) {\n    options.dedupe = dedupe\n  }\n\n  options.pinoWillSendConfig = true\n\n  return buildStream(fixTarget(target), options, worker, sync)\n\n  function fixTarget (origin) {\n    origin = bundlerOverrides[origin] || origin\n\n    if (isAbsolute(origin) || origin.indexOf('file://') === 0) {\n      return origin\n    }\n\n    if (origin === 'pino/file') {\n      return join(__dirname, '..', 'file.js')\n    }\n\n    let fixTarget\n\n    for (const filePath of callers) {\n      try {\n        const context = filePath === 'node:repl'\n          ? process.cwd() + sep\n          : filePath\n\n        fixTarget = createRequire(context).resolve(origin)\n        break\n      } catch (err) {\n        // Silent catch\n        continue\n      }\n    }\n\n    if (!fixTarget) {\n      throw new Error(`unable to determine transport target for \"${origin}\"`)\n    }\n\n    return fixTarget\n  }\n}\n\nmodule.exports = transport\n","'use strict'\n\n/* eslint no-prototype-builtins: 0 */\n\nconst format = require('quick-format-unescaped')\nconst { mapHttpRequest, mapHttpResponse } = require('pino-std-serializers')\nconst SonicBoom = require('sonic-boom')\nconst onExit = require('on-exit-leak-free')\nconst {\n  lsCacheSym,\n  chindingsSym,\n  writeSym,\n  serializersSym,\n  formatOptsSym,\n  endSym,\n  stringifiersSym,\n  stringifySym,\n  stringifySafeSym,\n  wildcardFirstSym,\n  nestedKeySym,\n  formattersSym,\n  messageKeySym,\n  errorKeySym,\n  nestedKeyStrSym,\n  msgPrefixSym\n} = require('./symbols')\nconst { isMainThread } = require('worker_threads')\nconst transport = require('./transport')\n\nfunction noop () {\n}\n\nfunction genLog (level, hook) {\n  if (!hook) return LOG\n\n  return function hookWrappedLog (...args) {\n    hook.call(this, args, LOG, level)\n  }\n\n  function LOG (o, ...n) {\n    if (typeof o === 'object') {\n      let msg = o\n      if (o !== null) {\n        if (o.method && o.headers && o.socket) {\n          o = mapHttpRequest(o)\n        } else if (typeof o.setHeader === 'function') {\n          o = mapHttpResponse(o)\n        }\n      }\n      let formatParams\n      if (msg === null && n.length === 0) {\n        formatParams = [null]\n      } else {\n        msg = n.shift()\n        formatParams = n\n      }\n      // We do not use a coercive check for `msg` as it is\n      // measurably slower than the explicit checks.\n      if (typeof this[msgPrefixSym] === 'string' && msg !== undefined && msg !== null) {\n        msg = this[msgPrefixSym] + msg\n      }\n      this[writeSym](o, format(msg, formatParams, this[formatOptsSym]), level)\n    } else {\n      let msg = o === undefined ? n.shift() : o\n\n      // We do not use a coercive check for `msg` as it is\n      // measurably slower than the explicit checks.\n      if (typeof this[msgPrefixSym] === 'string' && msg !== undefined && msg !== null) {\n        msg = this[msgPrefixSym] + msg\n      }\n      this[writeSym](null, format(msg, n, this[formatOptsSym]), level)\n    }\n  }\n}\n\n// magically escape strings for json\n// relying on their charCodeAt\n// everything below 32 needs JSON.stringify()\n// 34 and 92 happens all the time, so we\n// have a fast case for them\nfunction asString (str) {\n  let result = ''\n  let last = 0\n  let found = false\n  let point = 255\n  const l = str.length\n  if (l > 100) {\n    return JSON.stringify(str)\n  }\n  for (var i = 0; i < l && point >= 32; i++) {\n    point = str.charCodeAt(i)\n    if (point === 34 || point === 92) {\n      result += str.slice(last, i) + '\\\\'\n      last = i\n      found = true\n    }\n  }\n  if (!found) {\n    result = str\n  } else {\n    result += str.slice(last)\n  }\n  return point < 32 ? JSON.stringify(str) : '\"' + result + '\"'\n}\n\nfunction asJson (obj, msg, num, time) {\n  const stringify = this[stringifySym]\n  const stringifySafe = this[stringifySafeSym]\n  const stringifiers = this[stringifiersSym]\n  const end = this[endSym]\n  const chindings = this[chindingsSym]\n  const serializers = this[serializersSym]\n  const formatters = this[formattersSym]\n  const messageKey = this[messageKeySym]\n  const errorKey = this[errorKeySym]\n  let data = this[lsCacheSym][num] + time\n\n  // we need the child bindings added to the output first so instance logged\n  // objects can take precedence when JSON.parse-ing the resulting log line\n  data = data + chindings\n\n  let value\n  if (formatters.log) {\n    obj = formatters.log(obj)\n  }\n  const wildcardStringifier = stringifiers[wildcardFirstSym]\n  let propStr = ''\n  for (const key in obj) {\n    value = obj[key]\n    if (Object.prototype.hasOwnProperty.call(obj, key) && value !== undefined) {\n      if (serializers[key]) {\n        value = serializers[key](value)\n      } else if (key === errorKey && serializers.err) {\n        value = serializers.err(value)\n      }\n\n      const stringifier = stringifiers[key] || wildcardStringifier\n\n      switch (typeof value) {\n        case 'undefined':\n        case 'function':\n          continue\n        case 'number':\n          /* eslint no-fallthrough: \"off\" */\n          if (Number.isFinite(value) === false) {\n            value = null\n          }\n        // this case explicitly falls through to the next one\n        case 'boolean':\n          if (stringifier) value = stringifier(value)\n          break\n        case 'string':\n          value = (stringifier || asString)(value)\n          break\n        default:\n          value = (stringifier || stringify)(value, stringifySafe)\n      }\n      if (value === undefined) continue\n      const strKey = asString(key)\n      propStr += ',' + strKey + ':' + value\n    }\n  }\n\n  let msgStr = ''\n  if (msg !== undefined) {\n    value = serializers[messageKey] ? serializers[messageKey](msg) : msg\n    const stringifier = stringifiers[messageKey] || wildcardStringifier\n\n    switch (typeof value) {\n      case 'function':\n        break\n      case 'number':\n        /* eslint no-fallthrough: \"off\" */\n        if (Number.isFinite(value) === false) {\n          value = null\n        }\n      // this case explicitly falls through to the next one\n      case 'boolean':\n        if (stringifier) value = stringifier(value)\n        msgStr = ',\"' + messageKey + '\":' + value\n        break\n      case 'string':\n        value = (stringifier || asString)(value)\n        msgStr = ',\"' + messageKey + '\":' + value\n        break\n      default:\n        value = (stringifier || stringify)(value, stringifySafe)\n        msgStr = ',\"' + messageKey + '\":' + value\n    }\n  }\n\n  if (this[nestedKeySym] && propStr) {\n    // place all the obj properties under the specified key\n    // the nested key is already formatted from the constructor\n    return data + this[nestedKeyStrSym] + propStr.slice(1) + '}' + msgStr + end\n  } else {\n    return data + propStr + msgStr + end\n  }\n}\n\nfunction asChindings (instance, bindings) {\n  let value\n  let data = instance[chindingsSym]\n  const stringify = instance[stringifySym]\n  const stringifySafe = instance[stringifySafeSym]\n  const stringifiers = instance[stringifiersSym]\n  const wildcardStringifier = stringifiers[wildcardFirstSym]\n  const serializers = instance[serializersSym]\n  const formatter = instance[formattersSym].bindings\n  bindings = formatter(bindings)\n\n  for (const key in bindings) {\n    value = bindings[key]\n    const valid = key !== 'level' &&\n      key !== 'serializers' &&\n      key !== 'formatters' &&\n      key !== 'customLevels' &&\n      bindings.hasOwnProperty(key) &&\n      value !== undefined\n    if (valid === true) {\n      value = serializers[key] ? serializers[key](value) : value\n      value = (stringifiers[key] || wildcardStringifier || stringify)(value, stringifySafe)\n      if (value === undefined) continue\n      data += ',\"' + key + '\":' + value\n    }\n  }\n  return data\n}\n\nfunction hasBeenTampered (stream) {\n  return stream.write !== stream.constructor.prototype.write\n}\n\nfunction buildSafeSonicBoom (opts) {\n  const stream = new SonicBoom(opts)\n  stream.on('error', filterBrokenPipe)\n  // If we are sync: false, we must flush on exit\n  if (!opts.sync && isMainThread) {\n    onExit.register(stream, autoEnd)\n\n    stream.on('close', function () {\n      onExit.unregister(stream)\n    })\n  }\n  return stream\n\n  function filterBrokenPipe (err) {\n    // Impossible to replicate across all operating systems\n    /* istanbul ignore next */\n    if (err.code === 'EPIPE') {\n      // If we get EPIPE, we should stop logging here\n      // however we have no control to the consumer of\n      // SonicBoom, so we just overwrite the write method\n      stream.write = noop\n      stream.end = noop\n      stream.flushSync = noop\n      stream.destroy = noop\n      return\n    }\n    stream.removeListener('error', filterBrokenPipe)\n    stream.emit('error', err)\n  }\n}\n\nfunction autoEnd (stream, eventName) {\n  // This check is needed only on some platforms\n  /* istanbul ignore next */\n  if (stream.destroyed) {\n    return\n  }\n\n  if (eventName === 'beforeExit') {\n    // We still have an event loop, let's use it\n    stream.flush()\n    stream.on('drain', function () {\n      stream.end()\n    })\n  } else {\n    // For some reason istanbul is not detecting this, but it's there\n    /* istanbul ignore next */\n    // We do not have an event loop, so flush synchronously\n    stream.flushSync()\n  }\n}\n\nfunction createArgsNormalizer (defaultOptions) {\n  return function normalizeArgs (instance, caller, opts = {}, stream) {\n    // support stream as a string\n    if (typeof opts === 'string') {\n      stream = buildSafeSonicBoom({ dest: opts })\n      opts = {}\n    } else if (typeof stream === 'string') {\n      if (opts && opts.transport) {\n        throw Error('only one of option.transport or stream can be specified')\n      }\n      stream = buildSafeSonicBoom({ dest: stream })\n    } else if (opts instanceof SonicBoom || opts.writable || opts._writableState) {\n      stream = opts\n      opts = {}\n    } else if (opts.transport) {\n      if (opts.transport instanceof SonicBoom || opts.transport.writable || opts.transport._writableState) {\n        throw Error('option.transport do not allow stream, please pass to option directly. e.g. pino(transport)')\n      }\n      if (opts.transport.targets && opts.transport.targets.length && opts.formatters && typeof opts.formatters.level === 'function') {\n        throw Error('option.transport.targets do not allow custom level formatters')\n      }\n\n      let customLevels\n      if (opts.customLevels) {\n        customLevels = opts.useOnlyCustomLevels ? opts.customLevels : Object.assign({}, opts.levels, opts.customLevels)\n      }\n      stream = transport({ caller, ...opts.transport, levels: customLevels })\n    }\n    opts = Object.assign({}, defaultOptions, opts)\n    opts.serializers = Object.assign({}, defaultOptions.serializers, opts.serializers)\n    opts.formatters = Object.assign({}, defaultOptions.formatters, opts.formatters)\n\n    if (opts.prettyPrint) {\n      throw new Error('prettyPrint option is no longer supported, see the pino-pretty package (https://github.com/pinojs/pino-pretty)')\n    }\n\n    const { enabled, onChild } = opts\n    if (enabled === false) opts.level = 'silent'\n    if (!onChild) opts.onChild = noop\n    if (!stream) {\n      if (!hasBeenTampered(process.stdout)) {\n        // If process.stdout.fd is undefined, it means that we are running\n        // in a worker thread. Let's assume we are logging to file descriptor 1.\n        stream = buildSafeSonicBoom({ fd: process.stdout.fd || 1 })\n      } else {\n        stream = process.stdout\n      }\n    }\n    return { opts, stream }\n  }\n}\n\nfunction stringify (obj, stringifySafeFn) {\n  try {\n    return JSON.stringify(obj)\n  } catch (_) {\n    try {\n      const stringify = stringifySafeFn || this[stringifySafeSym]\n      return stringify(obj)\n    } catch (_) {\n      return '\"[unable to serialize, circular reference is too complex to analyze]\"'\n    }\n  }\n}\n\nfunction buildFormatters (level, bindings, log) {\n  return {\n    level,\n    bindings,\n    log\n  }\n}\n\n/**\n * Convert a string integer file descriptor to a proper native integer\n * file descriptor.\n *\n * @param {string} destination The file descriptor string to attempt to convert.\n *\n * @returns {Number}\n */\nfunction normalizeDestFileDescriptor (destination) {\n  const fd = Number(destination)\n  if (typeof destination === 'string' && Number.isFinite(fd)) {\n    return fd\n  }\n  // destination could be undefined if we are in a worker\n  if (destination === undefined) {\n    // This is stdout in UNIX systems\n    return 1\n  }\n  return destination\n}\n\nmodule.exports = {\n  noop,\n  buildSafeSonicBoom,\n  asChindings,\n  asJson,\n  genLog,\n  createArgsNormalizer,\n  stringify,\n  buildFormatters,\n  normalizeDestFileDescriptor\n}\n","/**\n * Represents default log level values\n *\n * @enum {number}\n */\nconst DEFAULT_LEVELS = {\n  trace: 10,\n  debug: 20,\n  info: 30,\n  warn: 40,\n  error: 50,\n  fatal: 60\n}\n\n/**\n * Represents sort order direction: `ascending` or `descending`\n *\n * @enum {string}\n */\nconst SORTING_ORDER = {\n  ASC: 'ASC',\n  DESC: 'DESC'\n}\n\nmodule.exports = {\n  DEFAULT_LEVELS,\n  SORTING_ORDER\n}\n","'use strict'\n/* eslint no-prototype-builtins: 0 */\nconst {\n  lsCacheSym,\n  levelValSym,\n  useOnlyCustomLevelsSym,\n  streamSym,\n  formattersSym,\n  hooksSym,\n  levelCompSym\n} = require('./symbols')\nconst { noop, genLog } = require('./tools')\nconst { DEFAULT_LEVELS, SORTING_ORDER } = require('./constants')\n\nconst levelMethods = {\n  fatal: (hook) => {\n    const logFatal = genLog(DEFAULT_LEVELS.fatal, hook)\n    return function (...args) {\n      const stream = this[streamSym]\n      logFatal.call(this, ...args)\n      if (typeof stream.flushSync === 'function') {\n        try {\n          stream.flushSync()\n        } catch (e) {\n          // https://github.com/pinojs/pino/pull/740#discussion_r346788313\n        }\n      }\n    }\n  },\n  error: (hook) => genLog(DEFAULT_LEVELS.error, hook),\n  warn: (hook) => genLog(DEFAULT_LEVELS.warn, hook),\n  info: (hook) => genLog(DEFAULT_LEVELS.info, hook),\n  debug: (hook) => genLog(DEFAULT_LEVELS.debug, hook),\n  trace: (hook) => genLog(DEFAULT_LEVELS.trace, hook)\n}\n\nconst nums = Object.keys(DEFAULT_LEVELS).reduce((o, k) => {\n  o[DEFAULT_LEVELS[k]] = k\n  return o\n}, {})\n\nconst initialLsCache = Object.keys(nums).reduce((o, k) => {\n  o[k] = '{\"level\":' + Number(k)\n  return o\n}, {})\n\nfunction genLsCache (instance) {\n  const formatter = instance[formattersSym].level\n  const { labels } = instance.levels\n  const cache = {}\n  for (const label in labels) {\n    const level = formatter(labels[label], Number(label))\n    cache[label] = JSON.stringify(level).slice(0, -1)\n  }\n  instance[lsCacheSym] = cache\n  return instance\n}\n\nfunction isStandardLevel (level, useOnlyCustomLevels) {\n  if (useOnlyCustomLevels) {\n    return false\n  }\n\n  switch (level) {\n    case 'fatal':\n    case 'error':\n    case 'warn':\n    case 'info':\n    case 'debug':\n    case 'trace':\n      return true\n    default:\n      return false\n  }\n}\n\nfunction setLevel (level) {\n  const { labels, values } = this.levels\n  if (typeof level === 'number') {\n    if (labels[level] === undefined) throw Error('unknown level value' + level)\n    level = labels[level]\n  }\n  if (values[level] === undefined) throw Error('unknown level ' + level)\n  const preLevelVal = this[levelValSym]\n  const levelVal = this[levelValSym] = values[level]\n  const useOnlyCustomLevelsVal = this[useOnlyCustomLevelsSym]\n  const levelComparison = this[levelCompSym]\n  const hook = this[hooksSym].logMethod\n\n  for (const key in values) {\n    if (levelComparison(values[key], levelVal) === false) {\n      this[key] = noop\n      continue\n    }\n    this[key] = isStandardLevel(key, useOnlyCustomLevelsVal) ? levelMethods[key](hook) : genLog(values[key], hook)\n  }\n\n  this.emit(\n    'level-change',\n    level,\n    levelVal,\n    labels[preLevelVal],\n    preLevelVal,\n    this\n  )\n}\n\nfunction getLevel (level) {\n  const { levels, levelVal } = this\n  // protection against potential loss of Pino scope from serializers (edge case with circular refs - https://github.com/pinojs/pino/issues/833)\n  return (levels && levels.labels) ? levels.labels[levelVal] : ''\n}\n\nfunction isLevelEnabled (logLevel) {\n  const { values } = this.levels\n  const logLevelVal = values[logLevel]\n  return logLevelVal !== undefined && this[levelCompSym](logLevelVal, this[levelValSym])\n}\n\n/**\n * Determine if the given `current` level is enabled by comparing it\n * against the current threshold (`expected`).\n *\n * @param {SORTING_ORDER} direction comparison direction \"ASC\" or \"DESC\"\n * @param {number} current current log level number representation\n * @param {number} expected threshold value to compare with\n * @returns {boolean}\n */\nfunction compareLevel (direction, current, expected) {\n  if (direction === SORTING_ORDER.DESC) {\n    return current <= expected\n  }\n\n  return current >= expected\n}\n\n/**\n * Create a level comparison function based on `levelComparison`\n * it could a default function which compares levels either in \"ascending\" or \"descending\" order or custom comparison function\n *\n * @param {SORTING_ORDER | Function} levelComparison sort levels order direction or custom comparison function\n * @returns Function\n */\nfunction genLevelComparison (levelComparison) {\n  if (typeof levelComparison === 'string') {\n    return compareLevel.bind(null, levelComparison)\n  }\n\n  return levelComparison\n}\n\nfunction mappings (customLevels = null, useOnlyCustomLevels = false) {\n  const customNums = customLevels\n    /* eslint-disable */\n    ? Object.keys(customLevels).reduce((o, k) => {\n        o[customLevels[k]] = k\n        return o\n      }, {})\n    : null\n    /* eslint-enable */\n\n  const labels = Object.assign(\n    Object.create(Object.prototype, { Infinity: { value: 'silent' } }),\n    useOnlyCustomLevels ? null : nums,\n    customNums\n  )\n  const values = Object.assign(\n    Object.create(Object.prototype, { silent: { value: Infinity } }),\n    useOnlyCustomLevels ? null : DEFAULT_LEVELS,\n    customLevels\n  )\n  return { labels, values }\n}\n\nfunction assertDefaultLevelFound (defaultLevel, customLevels, useOnlyCustomLevels) {\n  if (typeof defaultLevel === 'number') {\n    const values = [].concat(\n      Object.keys(customLevels || {}).map(key => customLevels[key]),\n      useOnlyCustomLevels ? [] : Object.keys(nums).map(level => +level),\n      Infinity\n    )\n    if (!values.includes(defaultLevel)) {\n      throw Error(`default level:${defaultLevel} must be included in custom levels`)\n    }\n    return\n  }\n\n  const labels = Object.assign(\n    Object.create(Object.prototype, { silent: { value: Infinity } }),\n    useOnlyCustomLevels ? null : DEFAULT_LEVELS,\n    customLevels\n  )\n  if (!(defaultLevel in labels)) {\n    throw Error(`default level:${defaultLevel} must be included in custom levels`)\n  }\n}\n\nfunction assertNoLevelCollisions (levels, customLevels) {\n  const { labels, values } = levels\n  for (const k in customLevels) {\n    if (k in values) {\n      throw Error('levels cannot be overridden')\n    }\n    if (customLevels[k] in labels) {\n      throw Error('pre-existing level values cannot be used for new levels')\n    }\n  }\n}\n\n/**\n * Validates whether `levelComparison` is correct\n *\n * @throws Error\n * @param {SORTING_ORDER | Function} levelComparison - value to validate\n * @returns\n */\nfunction assertLevelComparison (levelComparison) {\n  if (typeof levelComparison === 'function') {\n    return\n  }\n\n  if (typeof levelComparison === 'string' && Object.values(SORTING_ORDER).includes(levelComparison)) {\n    return\n  }\n\n  throw new Error('Levels comparison should be one of \"ASC\", \"DESC\" or \"function\" type')\n}\n\nmodule.exports = {\n  initialLsCache,\n  genLsCache,\n  levelMethods,\n  getLevel,\n  setLevel,\n  isLevelEnabled,\n  mappings,\n  assertNoLevelCollisions,\n  assertDefaultLevelFound,\n  genLevelComparison,\n  assertLevelComparison\n}\n","'use strict'\n\nmodule.exports = { version: '9.7.0' }\n","'use strict'\n\n/* eslint no-prototype-builtins: 0 */\n\nconst { EventEmitter } = require('node:events')\nconst {\n  lsCacheSym,\n  levelValSym,\n  setLevelSym,\n  getLevelSym,\n  chindingsSym,\n  parsedChindingsSym,\n  mixinSym,\n  asJsonSym,\n  writeSym,\n  mixinMergeStrategySym,\n  timeSym,\n  timeSliceIndexSym,\n  streamSym,\n  serializersSym,\n  formattersSym,\n  errorKeySym,\n  messageKeySym,\n  useOnlyCustomLevelsSym,\n  needsMetadataGsym,\n  redactFmtSym,\n  stringifySym,\n  formatOptsSym,\n  stringifiersSym,\n  msgPrefixSym,\n  hooksSym\n} = require('./symbols')\nconst {\n  getLevel,\n  setLevel,\n  isLevelEnabled,\n  mappings,\n  initialLsCache,\n  genLsCache,\n  assertNoLevelCollisions\n} = require('./levels')\nconst {\n  asChindings,\n  asJson,\n  buildFormatters,\n  stringify\n} = require('./tools')\nconst {\n  version\n} = require('./meta')\nconst redaction = require('./redaction')\n\n// note: use of class is satirical\n// https://github.com/pinojs/pino/pull/433#pullrequestreview-127703127\nconst constructor = class Pino {}\nconst prototype = {\n  constructor,\n  child,\n  bindings,\n  setBindings,\n  flush,\n  isLevelEnabled,\n  version,\n  get level () { return this[getLevelSym]() },\n  set level (lvl) { this[setLevelSym](lvl) },\n  get levelVal () { return this[levelValSym] },\n  set levelVal (n) { throw Error('levelVal is read-only') },\n  [lsCacheSym]: initialLsCache,\n  [writeSym]: write,\n  [asJsonSym]: asJson,\n  [getLevelSym]: getLevel,\n  [setLevelSym]: setLevel\n}\n\nObject.setPrototypeOf(prototype, EventEmitter.prototype)\n\n// exporting and consuming the prototype object using factory pattern fixes scoping issues with getters when serializing\nmodule.exports = function () {\n  return Object.create(prototype)\n}\n\nconst resetChildingsFormatter = bindings => bindings\nfunction child (bindings, options) {\n  if (!bindings) {\n    throw Error('missing bindings for child Pino')\n  }\n  options = options || {} // default options to empty object\n  const serializers = this[serializersSym]\n  const formatters = this[formattersSym]\n  const instance = Object.create(this)\n\n  if (options.hasOwnProperty('serializers') === true) {\n    instance[serializersSym] = Object.create(null)\n\n    for (const k in serializers) {\n      instance[serializersSym][k] = serializers[k]\n    }\n    const parentSymbols = Object.getOwnPropertySymbols(serializers)\n    /* eslint no-var: off */\n    for (var i = 0; i < parentSymbols.length; i++) {\n      const ks = parentSymbols[i]\n      instance[serializersSym][ks] = serializers[ks]\n    }\n\n    for (const bk in options.serializers) {\n      instance[serializersSym][bk] = options.serializers[bk]\n    }\n    const bindingsSymbols = Object.getOwnPropertySymbols(options.serializers)\n    for (var bi = 0; bi < bindingsSymbols.length; bi++) {\n      const bks = bindingsSymbols[bi]\n      instance[serializersSym][bks] = options.serializers[bks]\n    }\n  } else instance[serializersSym] = serializers\n  if (options.hasOwnProperty('formatters')) {\n    const { level, bindings: chindings, log } = options.formatters\n    instance[formattersSym] = buildFormatters(\n      level || formatters.level,\n      chindings || resetChildingsFormatter,\n      log || formatters.log\n    )\n  } else {\n    instance[formattersSym] = buildFormatters(\n      formatters.level,\n      resetChildingsFormatter,\n      formatters.log\n    )\n  }\n  if (options.hasOwnProperty('customLevels') === true) {\n    assertNoLevelCollisions(this.levels, options.customLevels)\n    instance.levels = mappings(options.customLevels, instance[useOnlyCustomLevelsSym])\n    genLsCache(instance)\n  }\n\n  // redact must place before asChindings and only replace if exist\n  if ((typeof options.redact === 'object' && options.redact !== null) || Array.isArray(options.redact)) {\n    instance.redact = options.redact // replace redact directly\n    const stringifiers = redaction(instance.redact, stringify)\n    const formatOpts = { stringify: stringifiers[redactFmtSym] }\n    instance[stringifySym] = stringify\n    instance[stringifiersSym] = stringifiers\n    instance[formatOptsSym] = formatOpts\n  }\n\n  if (typeof options.msgPrefix === 'string') {\n    instance[msgPrefixSym] = (this[msgPrefixSym] || '') + options.msgPrefix\n  }\n\n  instance[chindingsSym] = asChindings(instance, bindings)\n  const childLevel = options.level || this.level\n  instance[setLevelSym](childLevel)\n  this.onChild(instance)\n  return instance\n}\n\nfunction bindings () {\n  const chindings = this[chindingsSym]\n  const chindingsJson = `{${chindings.substr(1)}}` // at least contains ,\"pid\":7068,\"hostname\":\"myMac\"\n  const bindingsFromJson = JSON.parse(chindingsJson)\n  delete bindingsFromJson.pid\n  delete bindingsFromJson.hostname\n  return bindingsFromJson\n}\n\nfunction setBindings (newBindings) {\n  const chindings = asChindings(this, newBindings)\n  this[chindingsSym] = chindings\n  delete this[parsedChindingsSym]\n}\n\n/**\n * Default strategy for creating `mergeObject` from arguments and the result from `mixin()`.\n * Fields from `mergeObject` have higher priority in this strategy.\n *\n * @param {Object} mergeObject The object a user has supplied to the logging function.\n * @param {Object} mixinObject The result of the `mixin` method.\n * @return {Object}\n */\nfunction defaultMixinMergeStrategy (mergeObject, mixinObject) {\n  return Object.assign(mixinObject, mergeObject)\n}\n\nfunction write (_obj, msg, num) {\n  const t = this[timeSym]()\n  const mixin = this[mixinSym]\n  const errorKey = this[errorKeySym]\n  const messageKey = this[messageKeySym]\n  const mixinMergeStrategy = this[mixinMergeStrategySym] || defaultMixinMergeStrategy\n  let obj\n  const streamWriteHook = this[hooksSym].streamWrite\n\n  if (_obj === undefined || _obj === null) {\n    obj = {}\n  } else if (_obj instanceof Error) {\n    obj = { [errorKey]: _obj }\n    if (msg === undefined) {\n      msg = _obj.message\n    }\n  } else {\n    obj = _obj\n    if (msg === undefined && _obj[messageKey] === undefined && _obj[errorKey]) {\n      msg = _obj[errorKey].message\n    }\n  }\n\n  if (mixin) {\n    obj = mixinMergeStrategy(obj, mixin(obj, num, this))\n  }\n\n  const s = this[asJsonSym](obj, msg, num, t)\n\n  const stream = this[streamSym]\n  if (stream[needsMetadataGsym] === true) {\n    stream.lastLevel = num\n    stream.lastObj = obj\n    stream.lastMsg = msg\n    stream.lastTime = t.slice(this[timeSliceIndexSym])\n    stream.lastLogger = this // for child loggers\n  }\n  stream.write(streamWriteHook ? streamWriteHook(s) : s)\n}\n\nfunction noop () {}\n\nfunction flush (cb) {\n  if (cb != null && typeof cb !== 'function') {\n    throw Error('callback must be a function')\n  }\n\n  const stream = this[streamSym]\n\n  if (typeof stream.flush === 'function') {\n    stream.flush(cb || noop)\n  } else if (cb) cb()\n}\n","'use strict'\n\nconst { hasOwnProperty } = Object.prototype\n\nconst stringify = configure()\n\n// @ts-expect-error\nstringify.configure = configure\n// @ts-expect-error\nstringify.stringify = stringify\n\n// @ts-expect-error\nstringify.default = stringify\n\n// @ts-expect-error used for named export\nexports.stringify = stringify\n// @ts-expect-error used for named export\nexports.configure = configure\n\nmodule.exports = stringify\n\n// eslint-disable-next-line no-control-regex\nconst strEscapeSequencesRegExp = /[\\u0000-\\u001f\\u0022\\u005c\\ud800-\\udfff]/\n\n// Escape C0 control characters, double quotes, the backslash and every code\n// unit with a numeric value in the inclusive range 0xD800 to 0xDFFF.\nfunction strEscape (str) {\n  // Some magic numbers that worked out fine while benchmarking with v8 8.0\n  if (str.length < 5000 && !strEscapeSequencesRegExp.test(str)) {\n    return `\"${str}\"`\n  }\n  return JSON.stringify(str)\n}\n\nfunction sort (array, comparator) {\n  // Insertion sort is very efficient for small input sizes, but it has a bad\n  // worst case complexity. Thus, use native array sort for bigger values.\n  if (array.length > 2e2 || comparator) {\n    return array.sort(comparator)\n  }\n  for (let i = 1; i < array.length; i++) {\n    const currentValue = array[i]\n    let position = i\n    while (position !== 0 && array[position - 1] > currentValue) {\n      array[position] = array[position - 1]\n      position--\n    }\n    array[position] = currentValue\n  }\n  return array\n}\n\nconst typedArrayPrototypeGetSymbolToStringTag =\n  Object.getOwnPropertyDescriptor(\n    Object.getPrototypeOf(\n      Object.getPrototypeOf(\n        new Int8Array()\n      )\n    ),\n    Symbol.toStringTag\n  ).get\n\nfunction isTypedArrayWithEntries (value) {\n  return typedArrayPrototypeGetSymbolToStringTag.call(value) !== undefined && value.length !== 0\n}\n\nfunction stringifyTypedArray (array, separator, maximumBreadth) {\n  if (array.length < maximumBreadth) {\n    maximumBreadth = array.length\n  }\n  const whitespace = separator === ',' ? '' : ' '\n  let res = `\"0\":${whitespace}${array[0]}`\n  for (let i = 1; i < maximumBreadth; i++) {\n    res += `${separator}\"${i}\":${whitespace}${array[i]}`\n  }\n  return res\n}\n\nfunction getCircularValueOption (options) {\n  if (hasOwnProperty.call(options, 'circularValue')) {\n    const circularValue = options.circularValue\n    if (typeof circularValue === 'string') {\n      return `\"${circularValue}\"`\n    }\n    if (circularValue == null) {\n      return circularValue\n    }\n    if (circularValue === Error || circularValue === TypeError) {\n      return {\n        toString () {\n          throw new TypeError('Converting circular structure to JSON')\n        }\n      }\n    }\n    throw new TypeError('The \"circularValue\" argument must be of type string or the value null or undefined')\n  }\n  return '\"[Circular]\"'\n}\n\nfunction getDeterministicOption (options) {\n  let value\n  if (hasOwnProperty.call(options, 'deterministic')) {\n    value = options.deterministic\n    if (typeof value !== 'boolean' && typeof value !== 'function') {\n      throw new TypeError('The \"deterministic\" argument must be of type boolean or comparator function')\n    }\n  }\n  return value === undefined ? true : value\n}\n\nfunction getBooleanOption (options, key) {\n  let value\n  if (hasOwnProperty.call(options, key)) {\n    value = options[key]\n    if (typeof value !== 'boolean') {\n      throw new TypeError(`The \"${key}\" argument must be of type boolean`)\n    }\n  }\n  return value === undefined ? true : value\n}\n\nfunction getPositiveIntegerOption (options, key) {\n  let value\n  if (hasOwnProperty.call(options, key)) {\n    value = options[key]\n    if (typeof value !== 'number') {\n      throw new TypeError(`The \"${key}\" argument must be of type number`)\n    }\n    if (!Number.isInteger(value)) {\n      throw new TypeError(`The \"${key}\" argument must be an integer`)\n    }\n    if (value < 1) {\n      throw new RangeError(`The \"${key}\" argument must be >= 1`)\n    }\n  }\n  return value === undefined ? Infinity : value\n}\n\nfunction getItemCount (number) {\n  if (number === 1) {\n    return '1 item'\n  }\n  return `${number} items`\n}\n\nfunction getUniqueReplacerSet (replacerArray) {\n  const replacerSet = new Set()\n  for (const value of replacerArray) {\n    if (typeof value === 'string' || typeof value === 'number') {\n      replacerSet.add(String(value))\n    }\n  }\n  return replacerSet\n}\n\nfunction getStrictOption (options) {\n  if (hasOwnProperty.call(options, 'strict')) {\n    const value = options.strict\n    if (typeof value !== 'boolean') {\n      throw new TypeError('The \"strict\" argument must be of type boolean')\n    }\n    if (value) {\n      return (value) => {\n        let message = `Object can not safely be stringified. Received type ${typeof value}`\n        if (typeof value !== 'function') message += ` (${value.toString()})`\n        throw new Error(message)\n      }\n    }\n  }\n}\n\nfunction configure (options) {\n  options = { ...options }\n  const fail = getStrictOption(options)\n  if (fail) {\n    if (options.bigint === undefined) {\n      options.bigint = false\n    }\n    if (!('circularValue' in options)) {\n      options.circularValue = Error\n    }\n  }\n  const circularValue = getCircularValueOption(options)\n  const bigint = getBooleanOption(options, 'bigint')\n  const deterministic = getDeterministicOption(options)\n  const comparator = typeof deterministic === 'function' ? deterministic : undefined\n  const maximumDepth = getPositiveIntegerOption(options, 'maximumDepth')\n  const maximumBreadth = getPositiveIntegerOption(options, 'maximumBreadth')\n\n  function stringifyFnReplacer (key, parent, stack, replacer, spacer, indentation) {\n    let value = parent[key]\n\n    if (typeof value === 'object' && value !== null && typeof value.toJSON === 'function') {\n      value = value.toJSON(key)\n    }\n    value = replacer.call(parent, key, value)\n\n    switch (typeof value) {\n      case 'string':\n        return strEscape(value)\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n\n        let res = ''\n        let join = ','\n        const originalIndentation = indentation\n\n        if (Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          if (spacer !== '') {\n            indentation += spacer\n            res += `\\n${indentation}`\n            join = `,\\n${indentation}`\n          }\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifyFnReplacer(String(i), value, stack, replacer, spacer, indentation)\n            res += tmp !== undefined ? tmp : 'null'\n            res += join\n          }\n          const tmp = stringifyFnReplacer(String(i), value, stack, replacer, spacer, indentation)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          if (spacer !== '') {\n            res += `\\n${originalIndentation}`\n          }\n          stack.pop()\n          return `[${res}]`\n        }\n\n        let keys = Object.keys(value)\n        const keyLength = keys.length\n        if (keyLength === 0) {\n          return '{}'\n        }\n        if (maximumDepth < stack.length + 1) {\n          return '\"[Object]\"'\n        }\n        let whitespace = ''\n        let separator = ''\n        if (spacer !== '') {\n          indentation += spacer\n          join = `,\\n${indentation}`\n          whitespace = ' '\n        }\n        const maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth)\n        if (deterministic && !isTypedArrayWithEntries(value)) {\n          keys = sort(keys, comparator)\n        }\n        stack.push(value)\n        for (let i = 0; i < maximumPropertiesToStringify; i++) {\n          const key = keys[i]\n          const tmp = stringifyFnReplacer(key, value, stack, replacer, spacer, indentation)\n          if (tmp !== undefined) {\n            res += `${separator}${strEscape(key)}:${whitespace}${tmp}`\n            separator = join\n          }\n        }\n        if (keyLength > maximumBreadth) {\n          const removedKeys = keyLength - maximumBreadth\n          res += `${separator}\"...\":${whitespace}\"${getItemCount(removedKeys)} not stringified\"`\n          separator = join\n        }\n        if (spacer !== '' && separator.length > 1) {\n          res = `\\n${indentation}${res}\\n${originalIndentation}`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringifyArrayReplacer (key, value, stack, replacer, spacer, indentation) {\n    if (typeof value === 'object' && value !== null && typeof value.toJSON === 'function') {\n      value = value.toJSON(key)\n    }\n\n    switch (typeof value) {\n      case 'string':\n        return strEscape(value)\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n\n        const originalIndentation = indentation\n        let res = ''\n        let join = ','\n\n        if (Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          if (spacer !== '') {\n            indentation += spacer\n            res += `\\n${indentation}`\n            join = `,\\n${indentation}`\n          }\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifyArrayReplacer(String(i), value[i], stack, replacer, spacer, indentation)\n            res += tmp !== undefined ? tmp : 'null'\n            res += join\n          }\n          const tmp = stringifyArrayReplacer(String(i), value[i], stack, replacer, spacer, indentation)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          if (spacer !== '') {\n            res += `\\n${originalIndentation}`\n          }\n          stack.pop()\n          return `[${res}]`\n        }\n        stack.push(value)\n        let whitespace = ''\n        if (spacer !== '') {\n          indentation += spacer\n          join = `,\\n${indentation}`\n          whitespace = ' '\n        }\n        let separator = ''\n        for (const key of replacer) {\n          const tmp = stringifyArrayReplacer(key, value[key], stack, replacer, spacer, indentation)\n          if (tmp !== undefined) {\n            res += `${separator}${strEscape(key)}:${whitespace}${tmp}`\n            separator = join\n          }\n        }\n        if (spacer !== '' && separator.length > 1) {\n          res = `\\n${indentation}${res}\\n${originalIndentation}`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringifyIndent (key, value, stack, spacer, indentation) {\n    switch (typeof value) {\n      case 'string':\n        return strEscape(value)\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (typeof value.toJSON === 'function') {\n          value = value.toJSON(key)\n          // Prevent calling `toJSON` again.\n          if (typeof value !== 'object') {\n            return stringifyIndent(key, value, stack, spacer, indentation)\n          }\n          if (value === null) {\n            return 'null'\n          }\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n        const originalIndentation = indentation\n\n        if (Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          indentation += spacer\n          let res = `\\n${indentation}`\n          const join = `,\\n${indentation}`\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifyIndent(String(i), value[i], stack, spacer, indentation)\n            res += tmp !== undefined ? tmp : 'null'\n            res += join\n          }\n          const tmp = stringifyIndent(String(i), value[i], stack, spacer, indentation)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          res += `\\n${originalIndentation}`\n          stack.pop()\n          return `[${res}]`\n        }\n\n        let keys = Object.keys(value)\n        const keyLength = keys.length\n        if (keyLength === 0) {\n          return '{}'\n        }\n        if (maximumDepth < stack.length + 1) {\n          return '\"[Object]\"'\n        }\n        indentation += spacer\n        const join = `,\\n${indentation}`\n        let res = ''\n        let separator = ''\n        let maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth)\n        if (isTypedArrayWithEntries(value)) {\n          res += stringifyTypedArray(value, join, maximumBreadth)\n          keys = keys.slice(value.length)\n          maximumPropertiesToStringify -= value.length\n          separator = join\n        }\n        if (deterministic) {\n          keys = sort(keys, comparator)\n        }\n        stack.push(value)\n        for (let i = 0; i < maximumPropertiesToStringify; i++) {\n          const key = keys[i]\n          const tmp = stringifyIndent(key, value[key], stack, spacer, indentation)\n          if (tmp !== undefined) {\n            res += `${separator}${strEscape(key)}: ${tmp}`\n            separator = join\n          }\n        }\n        if (keyLength > maximumBreadth) {\n          const removedKeys = keyLength - maximumBreadth\n          res += `${separator}\"...\": \"${getItemCount(removedKeys)} not stringified\"`\n          separator = join\n        }\n        if (separator !== '') {\n          res = `\\n${indentation}${res}\\n${originalIndentation}`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringifySimple (key, value, stack) {\n    switch (typeof value) {\n      case 'string':\n        return strEscape(value)\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (typeof value.toJSON === 'function') {\n          value = value.toJSON(key)\n          // Prevent calling `toJSON` again\n          if (typeof value !== 'object') {\n            return stringifySimple(key, value, stack)\n          }\n          if (value === null) {\n            return 'null'\n          }\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n\n        let res = ''\n\n        const hasLength = value.length !== undefined\n        if (hasLength && Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifySimple(String(i), value[i], stack)\n            res += tmp !== undefined ? tmp : 'null'\n            res += ','\n          }\n          const tmp = stringifySimple(String(i), value[i], stack)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `,\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          stack.pop()\n          return `[${res}]`\n        }\n\n        let keys = Object.keys(value)\n        const keyLength = keys.length\n        if (keyLength === 0) {\n          return '{}'\n        }\n        if (maximumDepth < stack.length + 1) {\n          return '\"[Object]\"'\n        }\n        let separator = ''\n        let maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth)\n        if (hasLength && isTypedArrayWithEntries(value)) {\n          res += stringifyTypedArray(value, ',', maximumBreadth)\n          keys = keys.slice(value.length)\n          maximumPropertiesToStringify -= value.length\n          separator = ','\n        }\n        if (deterministic) {\n          keys = sort(keys, comparator)\n        }\n        stack.push(value)\n        for (let i = 0; i < maximumPropertiesToStringify; i++) {\n          const key = keys[i]\n          const tmp = stringifySimple(key, value[key], stack)\n          if (tmp !== undefined) {\n            res += `${separator}${strEscape(key)}:${tmp}`\n            separator = ','\n          }\n        }\n        if (keyLength > maximumBreadth) {\n          const removedKeys = keyLength - maximumBreadth\n          res += `${separator}\"...\":\"${getItemCount(removedKeys)} not stringified\"`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringify (value, replacer, space) {\n    if (arguments.length > 1) {\n      let spacer = ''\n      if (typeof space === 'number') {\n        spacer = ' '.repeat(Math.min(space, 10))\n      } else if (typeof space === 'string') {\n        spacer = space.slice(0, 10)\n      }\n      if (replacer != null) {\n        if (typeof replacer === 'function') {\n          return stringifyFnReplacer('', { '': value }, [], replacer, spacer, '')\n        }\n        if (Array.isArray(replacer)) {\n          return stringifyArrayReplacer('', value, [], getUniqueReplacerSet(replacer), spacer, '')\n        }\n      }\n      if (spacer.length !== 0) {\n        return stringifyIndent('', value, [], spacer, '')\n      }\n    }\n    return stringifySimple('', value, [])\n  }\n\n  return stringify\n}\n","'use strict'\n\nconst metadata = Symbol.for('pino.metadata')\nconst { DEFAULT_LEVELS } = require('./constants')\n\nconst DEFAULT_INFO_LEVEL = DEFAULT_LEVELS.info\n\nfunction multistream (streamsArray, opts) {\n  let counter = 0\n  streamsArray = streamsArray || []\n  opts = opts || { dedupe: false }\n\n  const streamLevels = Object.create(DEFAULT_LEVELS)\n  streamLevels.silent = Infinity\n  if (opts.levels && typeof opts.levels === 'object') {\n    Object.keys(opts.levels).forEach(i => {\n      streamLevels[i] = opts.levels[i]\n    })\n  }\n\n  const res = {\n    write,\n    add,\n    emit,\n    flushSync,\n    end,\n    minLevel: 0,\n    streams: [],\n    clone,\n    [metadata]: true,\n    streamLevels\n  }\n\n  if (Array.isArray(streamsArray)) {\n    streamsArray.forEach(add, res)\n  } else {\n    add.call(res, streamsArray)\n  }\n\n  // clean this object up\n  // or it will stay allocated forever\n  // as it is closed on the following closures\n  streamsArray = null\n\n  return res\n\n  // we can exit early because the streams are ordered by level\n  function write (data) {\n    let dest\n    const level = this.lastLevel\n    const { streams } = this\n    // for handling situation when several streams has the same level\n    let recordedLevel = 0\n    let stream\n\n    // if dedupe set to true we send logs to the stream with the highest level\n    // therefore, we have to change sorting order\n    for (let i = initLoopVar(streams.length, opts.dedupe); checkLoopVar(i, streams.length, opts.dedupe); i = adjustLoopVar(i, opts.dedupe)) {\n      dest = streams[i]\n      if (dest.level <= level) {\n        if (recordedLevel !== 0 && recordedLevel !== dest.level) {\n          break\n        }\n        stream = dest.stream\n        if (stream[metadata]) {\n          const { lastTime, lastMsg, lastObj, lastLogger } = this\n          stream.lastLevel = level\n          stream.lastTime = lastTime\n          stream.lastMsg = lastMsg\n          stream.lastObj = lastObj\n          stream.lastLogger = lastLogger\n        }\n        stream.write(data)\n        if (opts.dedupe) {\n          recordedLevel = dest.level\n        }\n      } else if (!opts.dedupe) {\n        break\n      }\n    }\n  }\n\n  function emit (...args) {\n    for (const { stream } of this.streams) {\n      if (typeof stream.emit === 'function') {\n        stream.emit(...args)\n      }\n    }\n  }\n\n  function flushSync () {\n    for (const { stream } of this.streams) {\n      if (typeof stream.flushSync === 'function') {\n        stream.flushSync()\n      }\n    }\n  }\n\n  function add (dest) {\n    if (!dest) {\n      return res\n    }\n\n    // Check that dest implements either StreamEntry or DestinationStream\n    const isStream = typeof dest.write === 'function' || dest.stream\n    const stream_ = dest.write ? dest : dest.stream\n    // This is necessary to provide a meaningful error message, otherwise it throws somewhere inside write()\n    if (!isStream) {\n      throw Error('stream object needs to implement either StreamEntry or DestinationStream interface')\n    }\n\n    const { streams, streamLevels } = this\n\n    let level\n    if (typeof dest.levelVal === 'number') {\n      level = dest.levelVal\n    } else if (typeof dest.level === 'string') {\n      level = streamLevels[dest.level]\n    } else if (typeof dest.level === 'number') {\n      level = dest.level\n    } else {\n      level = DEFAULT_INFO_LEVEL\n    }\n\n    const dest_ = {\n      stream: stream_,\n      level,\n      levelVal: undefined,\n      id: counter++\n    }\n\n    streams.unshift(dest_)\n    streams.sort(compareByLevel)\n\n    this.minLevel = streams[0].level\n\n    return res\n  }\n\n  function end () {\n    for (const { stream } of this.streams) {\n      if (typeof stream.flushSync === 'function') {\n        stream.flushSync()\n      }\n      stream.end()\n    }\n  }\n\n  function clone (level) {\n    const streams = new Array(this.streams.length)\n\n    for (let i = 0; i < streams.length; i++) {\n      streams[i] = {\n        level,\n        stream: this.streams[i].stream\n      }\n    }\n\n    return {\n      write,\n      add,\n      minLevel: level,\n      streams,\n      clone,\n      emit,\n      flushSync,\n      [metadata]: true\n    }\n  }\n}\n\nfunction compareByLevel (a, b) {\n  return a.level - b.level\n}\n\nfunction initLoopVar (length, dedupe) {\n  return dedupe ? length - 1 : 0\n}\n\nfunction adjustLoopVar (i, dedupe) {\n  return dedupe ? i - 1 : i + 1\n}\n\nfunction checkLoopVar (i, length, dedupe) {\n  return dedupe ? i >= 0 : i < length\n}\n\nmodule.exports = multistream\n","'use strict'\n\nconst os = require('node:os')\nconst stdSerializers = require('pino-std-serializers')\nconst caller = require('./lib/caller')\nconst redaction = require('./lib/redaction')\nconst time = require('./lib/time')\nconst proto = require('./lib/proto')\nconst symbols = require('./lib/symbols')\nconst { configure } = require('safe-stable-stringify')\nconst { assertDefaultLevelFound, mappings, genLsCache, genLevelComparison, assertLevelComparison } = require('./lib/levels')\nconst { DEFAULT_LEVELS, SORTING_ORDER } = require('./lib/constants')\nconst {\n  createArgsNormalizer,\n  asChindings,\n  buildSafeSonicBoom,\n  buildFormatters,\n  stringify,\n  normalizeDestFileDescriptor,\n  noop\n} = require('./lib/tools')\nconst { version } = require('./lib/meta')\nconst {\n  chindingsSym,\n  redactFmtSym,\n  serializersSym,\n  timeSym,\n  timeSliceIndexSym,\n  streamSym,\n  stringifySym,\n  stringifySafeSym,\n  stringifiersSym,\n  setLevelSym,\n  endSym,\n  formatOptsSym,\n  messageKeySym,\n  errorKeySym,\n  nestedKeySym,\n  mixinSym,\n  levelCompSym,\n  useOnlyCustomLevelsSym,\n  formattersSym,\n  hooksSym,\n  nestedKeyStrSym,\n  mixinMergeStrategySym,\n  msgPrefixSym\n} = symbols\nconst { epochTime, nullTime } = time\nconst { pid } = process\nconst hostname = os.hostname()\nconst defaultErrorSerializer = stdSerializers.err\nconst defaultOptions = {\n  level: 'info',\n  levelComparison: SORTING_ORDER.ASC,\n  levels: DEFAULT_LEVELS,\n  messageKey: 'msg',\n  errorKey: 'err',\n  nestedKey: null,\n  enabled: true,\n  base: { pid, hostname },\n  serializers: Object.assign(Object.create(null), {\n    err: defaultErrorSerializer\n  }),\n  formatters: Object.assign(Object.create(null), {\n    bindings (bindings) {\n      return bindings\n    },\n    level (label, number) {\n      return { level: number }\n    }\n  }),\n  hooks: {\n    logMethod: undefined,\n    streamWrite: undefined\n  },\n  timestamp: epochTime,\n  name: undefined,\n  redact: null,\n  customLevels: null,\n  useOnlyCustomLevels: false,\n  depthLimit: 5,\n  edgeLimit: 100\n}\n\nconst normalize = createArgsNormalizer(defaultOptions)\n\nconst serializers = Object.assign(Object.create(null), stdSerializers)\n\nfunction pino (...args) {\n  const instance = {}\n  const { opts, stream } = normalize(instance, caller(), ...args)\n\n  if (opts.level && typeof opts.level === 'string' && DEFAULT_LEVELS[opts.level.toLowerCase()] !== undefined) opts.level = opts.level.toLowerCase()\n\n  const {\n    redact,\n    crlf,\n    serializers,\n    timestamp,\n    messageKey,\n    errorKey,\n    nestedKey,\n    base,\n    name,\n    level,\n    customLevels,\n    levelComparison,\n    mixin,\n    mixinMergeStrategy,\n    useOnlyCustomLevels,\n    formatters,\n    hooks,\n    depthLimit,\n    edgeLimit,\n    onChild,\n    msgPrefix\n  } = opts\n\n  const stringifySafe = configure({\n    maximumDepth: depthLimit,\n    maximumBreadth: edgeLimit\n  })\n\n  const allFormatters = buildFormatters(\n    formatters.level,\n    formatters.bindings,\n    formatters.log\n  )\n\n  const stringifyFn = stringify.bind({\n    [stringifySafeSym]: stringifySafe\n  })\n  const stringifiers = redact ? redaction(redact, stringifyFn) : {}\n  const formatOpts = redact\n    ? { stringify: stringifiers[redactFmtSym] }\n    : { stringify: stringifyFn }\n  const end = '}' + (crlf ? '\\r\\n' : '\\n')\n  const coreChindings = asChindings.bind(null, {\n    [chindingsSym]: '',\n    [serializersSym]: serializers,\n    [stringifiersSym]: stringifiers,\n    [stringifySym]: stringify,\n    [stringifySafeSym]: stringifySafe,\n    [formattersSym]: allFormatters\n  })\n\n  let chindings = ''\n  if (base !== null) {\n    if (name === undefined) {\n      chindings = coreChindings(base)\n    } else {\n      chindings = coreChindings(Object.assign({}, base, { name }))\n    }\n  }\n\n  const time = (timestamp instanceof Function)\n    ? timestamp\n    : (timestamp ? epochTime : nullTime)\n  const timeSliceIndex = time().indexOf(':') + 1\n\n  if (useOnlyCustomLevels && !customLevels) throw Error('customLevels is required if useOnlyCustomLevels is set true')\n  if (mixin && typeof mixin !== 'function') throw Error(`Unknown mixin type \"${typeof mixin}\" - expected \"function\"`)\n  if (msgPrefix && typeof msgPrefix !== 'string') throw Error(`Unknown msgPrefix type \"${typeof msgPrefix}\" - expected \"string\"`)\n\n  assertDefaultLevelFound(level, customLevels, useOnlyCustomLevels)\n  const levels = mappings(customLevels, useOnlyCustomLevels)\n\n  if (typeof stream.emit === 'function') {\n    stream.emit('message', { code: 'PINO_CONFIG', config: { levels, messageKey, errorKey } })\n  }\n\n  assertLevelComparison(levelComparison)\n  const levelCompFunc = genLevelComparison(levelComparison)\n\n  Object.assign(instance, {\n    levels,\n    [levelCompSym]: levelCompFunc,\n    [useOnlyCustomLevelsSym]: useOnlyCustomLevels,\n    [streamSym]: stream,\n    [timeSym]: time,\n    [timeSliceIndexSym]: timeSliceIndex,\n    [stringifySym]: stringify,\n    [stringifySafeSym]: stringifySafe,\n    [stringifiersSym]: stringifiers,\n    [endSym]: end,\n    [formatOptsSym]: formatOpts,\n    [messageKeySym]: messageKey,\n    [errorKeySym]: errorKey,\n    [nestedKeySym]: nestedKey,\n    // protect against injection\n    [nestedKeyStrSym]: nestedKey ? `,${JSON.stringify(nestedKey)}:{` : '',\n    [serializersSym]: serializers,\n    [mixinSym]: mixin,\n    [mixinMergeStrategySym]: mixinMergeStrategy,\n    [chindingsSym]: chindings,\n    [formattersSym]: allFormatters,\n    [hooksSym]: hooks,\n    silent: noop,\n    onChild,\n    [msgPrefixSym]: msgPrefix\n  })\n\n  Object.setPrototypeOf(instance, proto())\n\n  genLsCache(instance)\n\n  instance[setLevelSym](level)\n\n  return instance\n}\n\nmodule.exports = pino\n\nmodule.exports.destination = (dest = process.stdout.fd) => {\n  if (typeof dest === 'object') {\n    dest.dest = normalizeDestFileDescriptor(dest.dest || process.stdout.fd)\n    return buildSafeSonicBoom(dest)\n  } else {\n    return buildSafeSonicBoom({ dest: normalizeDestFileDescriptor(dest), minLength: 0 })\n  }\n}\n\nmodule.exports.transport = require('./lib/transport')\nmodule.exports.multistream = require('./lib/multistream')\n\nmodule.exports.levels = mappings()\nmodule.exports.stdSerializers = serializers\nmodule.exports.stdTimeFunctions = Object.assign({}, time)\nmodule.exports.symbols = symbols\nmodule.exports.version = version\n\n// Enables default and name export with TypeScript and Babel\nmodule.exports.default = pino\nmodule.exports.pino = pino\n","var __require = /* @__PURE__ */ ((x) => typeof require !== \"undefined\" ? require : typeof Proxy !== \"undefined\" ? new Proxy(x, {\n  get: (a, b) => (typeof require !== \"undefined\" ? require : a)[b]\n}) : x)(function(x) {\n  if (typeof require !== \"undefined\") return require.apply(this, arguments);\n  throw Error('Dynamic require of \"' + x + '\" is not supported');\n});\n\n// src/types/primitives.ts\nfunction asUUID(id) {\n  if (!id || !/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(id)) {\n    throw new Error(`Invalid UUID format: ${id}`);\n  }\n  return id;\n}\nvar ContentType = /* @__PURE__ */ ((ContentType2) => {\n  ContentType2[\"IMAGE\"] = \"image\";\n  ContentType2[\"VIDEO\"] = \"video\";\n  ContentType2[\"AUDIO\"] = \"audio\";\n  ContentType2[\"DOCUMENT\"] = \"document\";\n  ContentType2[\"LINK\"] = \"link\";\n  return ContentType2;\n})(ContentType || {});\n\n// src/types/memory.ts\nvar MemoryType = /* @__PURE__ */ ((MemoryType2) => {\n  MemoryType2[\"DOCUMENT\"] = \"document\";\n  MemoryType2[\"FRAGMENT\"] = \"fragment\";\n  MemoryType2[\"MESSAGE\"] = \"message\";\n  MemoryType2[\"DESCRIPTION\"] = \"description\";\n  MemoryType2[\"CUSTOM\"] = \"custom\";\n  return MemoryType2;\n})(MemoryType || {});\nfunction createMessageMemory(params) {\n  return {\n    ...params,\n    createdAt: Date.now(),\n    metadata: {\n      type: \"message\" /* MESSAGE */,\n      timestamp: Date.now(),\n      scope: params.agentId ? \"private\" : \"shared\"\n    }\n  };\n}\nfunction isDocumentMetadata(metadata) {\n  return metadata.type === \"document\" /* DOCUMENT */;\n}\nfunction isFragmentMetadata(metadata) {\n  return metadata.type === \"fragment\" /* FRAGMENT */;\n}\nfunction isMessageMetadata(metadata) {\n  return metadata.type === \"message\" /* MESSAGE */;\n}\nfunction isDescriptionMetadata(metadata) {\n  return metadata.type === \"description\" /* DESCRIPTION */;\n}\nfunction isCustomMetadata(metadata) {\n  return metadata.type !== \"document\" /* DOCUMENT */ && metadata.type !== \"fragment\" /* FRAGMENT */ && metadata.type !== \"message\" /* MESSAGE */ && metadata.type !== \"description\" /* DESCRIPTION */;\n}\nfunction isDocumentMemory(memory) {\n  return memory.metadata?.type === \"document\" /* DOCUMENT */;\n}\nfunction isFragmentMemory(memory) {\n  return memory.metadata?.type === \"fragment\" /* FRAGMENT */;\n}\nfunction getMemoryText(memory, defaultValue = \"\") {\n  return memory.content.text ?? defaultValue;\n}\n\n// src/types/knowledge.ts\nvar KnowledgeScope = /* @__PURE__ */ ((KnowledgeScope2) => {\n  KnowledgeScope2[\"SHARED\"] = \"shared\";\n  KnowledgeScope2[\"PRIVATE\"] = \"private\";\n  return KnowledgeScope2;\n})(KnowledgeScope || {});\nvar CacheKeyPrefix = /* @__PURE__ */ ((CacheKeyPrefix2) => {\n  CacheKeyPrefix2[\"KNOWLEDGE\"] = \"knowledge\";\n  return CacheKeyPrefix2;\n})(CacheKeyPrefix || {});\n\n// src/types/environment.ts\nvar Role = /* @__PURE__ */ ((Role2) => {\n  Role2[\"OWNER\"] = \"OWNER\";\n  Role2[\"ADMIN\"] = \"ADMIN\";\n  Role2[\"NONE\"] = \"NONE\";\n  return Role2;\n})(Role || {});\nvar ChannelType = /* @__PURE__ */ ((ChannelType2) => {\n  ChannelType2[\"SELF\"] = \"SELF\";\n  ChannelType2[\"DM\"] = \"DM\";\n  ChannelType2[\"GROUP\"] = \"GROUP\";\n  ChannelType2[\"VOICE_DM\"] = \"VOICE_DM\";\n  ChannelType2[\"VOICE_GROUP\"] = \"VOICE_GROUP\";\n  ChannelType2[\"FEED\"] = \"FEED\";\n  ChannelType2[\"THREAD\"] = \"THREAD\";\n  ChannelType2[\"WORLD\"] = \"WORLD\";\n  ChannelType2[\"FORUM\"] = \"FORUM\";\n  ChannelType2[\"API\"] = \"API\";\n  return ChannelType2;\n})(ChannelType || {});\n\n// src/types/agent.ts\nvar AgentStatus = /* @__PURE__ */ ((AgentStatus2) => {\n  AgentStatus2[\"ACTIVE\"] = \"active\";\n  AgentStatus2[\"INACTIVE\"] = \"inactive\";\n  return AgentStatus2;\n})(AgentStatus || {});\n\n// src/types/components.ts\nfunction createActionResult(partial = {}) {\n  return {\n    success: true,\n    // Default to success\n    ...partial\n  };\n}\n\n// src/types/service.ts\nvar ServiceType = {\n  TRANSCRIPTION: \"transcription\",\n  VIDEO: \"video\",\n  BROWSER: \"browser\",\n  PDF: \"pdf\",\n  REMOTE_FILES: \"aws_s3\",\n  WEB_SEARCH: \"web_search\",\n  EMAIL: \"email\",\n  TEE: \"tee\",\n  TASK: \"task\",\n  WALLET: \"wallet\",\n  LP_POOL: \"lp_pool\",\n  TOKEN_DATA: \"token_data\",\n  MESSAGE: \"message\",\n  POST: \"post\",\n  UNKNOWN: \"unknown\"\n};\nvar Service = class {\n  constructor(runtime) {\n    if (runtime) {\n      this.runtime = runtime;\n    }\n  }\n  /** Start service connection */\n  static async start(_runtime) {\n    throw new Error(\"Not implemented\");\n  }\n  /** Stop service connection */\n  static async stop(_runtime) {\n    throw new Error(\"Not implemented\");\n  }\n};\nfunction getTypedService(runtime, serviceType) {\n  return runtime.getService(serviceType);\n}\nfunction createServiceError(error, code = \"UNKNOWN_ERROR\") {\n  if (error instanceof Error) {\n    return {\n      code,\n      message: error.message,\n      cause: error\n    };\n  }\n  return {\n    code,\n    message: String(error)\n  };\n}\n\n// src/types/model.ts\nvar ModelType = {\n  SMALL: \"TEXT_SMALL\",\n  // kept for backwards compatibility\n  MEDIUM: \"TEXT_LARGE\",\n  // kept for backwards compatibility\n  LARGE: \"TEXT_LARGE\",\n  // kept for backwards compatibility\n  TEXT_SMALL: \"TEXT_SMALL\",\n  TEXT_LARGE: \"TEXT_LARGE\",\n  TEXT_EMBEDDING: \"TEXT_EMBEDDING\",\n  TEXT_TOKENIZER_ENCODE: \"TEXT_TOKENIZER_ENCODE\",\n  TEXT_TOKENIZER_DECODE: \"TEXT_TOKENIZER_DECODE\",\n  TEXT_REASONING_SMALL: \"REASONING_SMALL\",\n  TEXT_REASONING_LARGE: \"REASONING_LARGE\",\n  TEXT_COMPLETION: \"TEXT_COMPLETION\",\n  IMAGE: \"IMAGE\",\n  IMAGE_DESCRIPTION: \"IMAGE_DESCRIPTION\",\n  TRANSCRIPTION: \"TRANSCRIPTION\",\n  TEXT_TO_SPEECH: \"TEXT_TO_SPEECH\",\n  AUDIO: \"AUDIO\",\n  VIDEO: \"VIDEO\",\n  OBJECT_SMALL: \"OBJECT_SMALL\",\n  OBJECT_LARGE: \"OBJECT_LARGE\"\n};\nvar MODEL_SETTINGS = {\n  // Default settings - apply to all model types unless overridden\n  DEFAULT_MAX_TOKENS: \"DEFAULT_MAX_TOKENS\",\n  DEFAULT_TEMPERATURE: \"DEFAULT_TEMPERATURE\",\n  DEFAULT_FREQUENCY_PENALTY: \"DEFAULT_FREQUENCY_PENALTY\",\n  DEFAULT_PRESENCE_PENALTY: \"DEFAULT_PRESENCE_PENALTY\",\n  // TEXT_SMALL specific settings\n  TEXT_SMALL_MAX_TOKENS: \"TEXT_SMALL_MAX_TOKENS\",\n  TEXT_SMALL_TEMPERATURE: \"TEXT_SMALL_TEMPERATURE\",\n  TEXT_SMALL_FREQUENCY_PENALTY: \"TEXT_SMALL_FREQUENCY_PENALTY\",\n  TEXT_SMALL_PRESENCE_PENALTY: \"TEXT_SMALL_PRESENCE_PENALTY\",\n  // TEXT_LARGE specific settings\n  TEXT_LARGE_MAX_TOKENS: \"TEXT_LARGE_MAX_TOKENS\",\n  TEXT_LARGE_TEMPERATURE: \"TEXT_LARGE_TEMPERATURE\",\n  TEXT_LARGE_FREQUENCY_PENALTY: \"TEXT_LARGE_FREQUENCY_PENALTY\",\n  TEXT_LARGE_PRESENCE_PENALTY: \"TEXT_LARGE_PRESENCE_PENALTY\",\n  // OBJECT_SMALL specific settings\n  OBJECT_SMALL_MAX_TOKENS: \"OBJECT_SMALL_MAX_TOKENS\",\n  OBJECT_SMALL_TEMPERATURE: \"OBJECT_SMALL_TEMPERATURE\",\n  OBJECT_SMALL_FREQUENCY_PENALTY: \"OBJECT_SMALL_FREQUENCY_PENALTY\",\n  OBJECT_SMALL_PRESENCE_PENALTY: \"OBJECT_SMALL_PRESENCE_PENALTY\",\n  // OBJECT_LARGE specific settings\n  OBJECT_LARGE_MAX_TOKENS: \"OBJECT_LARGE_MAX_TOKENS\",\n  OBJECT_LARGE_TEMPERATURE: \"OBJECT_LARGE_TEMPERATURE\",\n  OBJECT_LARGE_FREQUENCY_PENALTY: \"OBJECT_LARGE_FREQUENCY_PENALTY\",\n  OBJECT_LARGE_PRESENCE_PENALTY: \"OBJECT_LARGE_PRESENCE_PENALTY\",\n  // Legacy keys for backwards compatibility (will be treated as defaults)\n  MODEL_MAX_TOKEN: \"MODEL_MAX_TOKEN\",\n  MODEL_TEMPERATURE: \"MODEL_TEMPERATURE\",\n  MODEL_FREQ_PENALTY: \"MODEL_FREQ_PENALTY\",\n  MODEL_PRESENCE_PENALTY: \"MODEL_PRESENCE_PENALTY\"\n};\nfunction getModelSpecificSettingKey(modelType, param) {\n  const supportedModelTypes = [\"TEXT_SMALL\", \"TEXT_LARGE\", \"OBJECT_SMALL\", \"OBJECT_LARGE\"];\n  if (!supportedModelTypes.includes(modelType)) {\n    return null;\n  }\n  return `${modelType}_${param}`;\n}\n\n// src/types/database.ts\nvar VECTOR_DIMS = {\n  SMALL: 384,\n  MEDIUM: 512,\n  LARGE: 768,\n  XL: 1024,\n  XXL: 1536,\n  XXXL: 3072\n};\n\n// src/types/events.ts\nvar EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[\"WORLD_JOINED\"] = \"WORLD_JOINED\";\n  EventType2[\"WORLD_CONNECTED\"] = \"WORLD_CONNECTED\";\n  EventType2[\"WORLD_LEFT\"] = \"WORLD_LEFT\";\n  EventType2[\"ENTITY_JOINED\"] = \"ENTITY_JOINED\";\n  EventType2[\"ENTITY_LEFT\"] = \"ENTITY_LEFT\";\n  EventType2[\"ENTITY_UPDATED\"] = \"ENTITY_UPDATED\";\n  EventType2[\"ROOM_JOINED\"] = \"ROOM_JOINED\";\n  EventType2[\"ROOM_LEFT\"] = \"ROOM_LEFT\";\n  EventType2[\"MESSAGE_RECEIVED\"] = \"MESSAGE_RECEIVED\";\n  EventType2[\"MESSAGE_SENT\"] = \"MESSAGE_SENT\";\n  EventType2[\"MESSAGE_DELETED\"] = \"MESSAGE_DELETED\";\n  EventType2[\"CHANNEL_CLEARED\"] = \"CHANNEL_CLEARED\";\n  EventType2[\"VOICE_MESSAGE_RECEIVED\"] = \"VOICE_MESSAGE_RECEIVED\";\n  EventType2[\"VOICE_MESSAGE_SENT\"] = \"VOICE_MESSAGE_SENT\";\n  EventType2[\"REACTION_RECEIVED\"] = \"REACTION_RECEIVED\";\n  EventType2[\"POST_GENERATED\"] = \"POST_GENERATED\";\n  EventType2[\"INTERACTION_RECEIVED\"] = \"INTERACTION_RECEIVED\";\n  EventType2[\"RUN_STARTED\"] = \"RUN_STARTED\";\n  EventType2[\"RUN_ENDED\"] = \"RUN_ENDED\";\n  EventType2[\"RUN_TIMEOUT\"] = \"RUN_TIMEOUT\";\n  EventType2[\"ACTION_STARTED\"] = \"ACTION_STARTED\";\n  EventType2[\"ACTION_COMPLETED\"] = \"ACTION_COMPLETED\";\n  EventType2[\"EVALUATOR_STARTED\"] = \"EVALUATOR_STARTED\";\n  EventType2[\"EVALUATOR_COMPLETED\"] = \"EVALUATOR_COMPLETED\";\n  EventType2[\"MODEL_USED\"] = \"MODEL_USED\";\n  return EventType2;\n})(EventType || {});\nvar PlatformPrefix = /* @__PURE__ */ ((PlatformPrefix2) => {\n  PlatformPrefix2[\"DISCORD\"] = \"DISCORD\";\n  PlatformPrefix2[\"TELEGRAM\"] = \"TELEGRAM\";\n  PlatformPrefix2[\"TWITTER\"] = \"TWITTER\";\n  return PlatformPrefix2;\n})(PlatformPrefix || {});\n\n// src/types/tee.ts\nvar TEEMode = /* @__PURE__ */ ((TEEMode2) => {\n  TEEMode2[\"OFF\"] = \"OFF\";\n  TEEMode2[\"LOCAL\"] = \"LOCAL\";\n  TEEMode2[\"DOCKER\"] = \"DOCKER\";\n  TEEMode2[\"PRODUCTION\"] = \"PRODUCTION\";\n  return TEEMode2;\n})(TEEMode || {});\nvar TeeType = /* @__PURE__ */ ((TeeType2) => {\n  TeeType2[\"TDX_DSTACK\"] = \"tdx_dstack\";\n  return TeeType2;\n})(TeeType || {});\n\n// src/types/token.ts\nvar ITokenDataService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"Provides standardized access to token market data.\";\n  }\n  static {\n    this.serviceType = ServiceType.TOKEN_DATA;\n  }\n  // Future potential methods:\n  // getHistoricalPriceData(address: string, chain: string, timeFrame: string): Promise<any[]>;\n  // getTokenMarketChart(address: string, chain: string, days: number): Promise<any[]>;\n};\n\n// src/types/messaging.ts\nvar SOCKET_MESSAGE_TYPE = /* @__PURE__ */ ((SOCKET_MESSAGE_TYPE2) => {\n  SOCKET_MESSAGE_TYPE2[SOCKET_MESSAGE_TYPE2[\"ROOM_JOINING\"] = 1] = \"ROOM_JOINING\";\n  SOCKET_MESSAGE_TYPE2[SOCKET_MESSAGE_TYPE2[\"SEND_MESSAGE\"] = 2] = \"SEND_MESSAGE\";\n  SOCKET_MESSAGE_TYPE2[SOCKET_MESSAGE_TYPE2[\"MESSAGE\"] = 3] = \"MESSAGE\";\n  SOCKET_MESSAGE_TYPE2[SOCKET_MESSAGE_TYPE2[\"ACK\"] = 4] = \"ACK\";\n  SOCKET_MESSAGE_TYPE2[SOCKET_MESSAGE_TYPE2[\"THINKING\"] = 5] = \"THINKING\";\n  SOCKET_MESSAGE_TYPE2[SOCKET_MESSAGE_TYPE2[\"CONTROL\"] = 6] = \"CONTROL\";\n  return SOCKET_MESSAGE_TYPE2;\n})(SOCKET_MESSAGE_TYPE || {});\n\n// src/types/wallet.ts\nvar IWalletService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"Provides standardized access to wallet balances and portfolios.\";\n  }\n  static {\n    this.serviceType = ServiceType.WALLET;\n  }\n};\n\n// src/types/lp.ts\nvar ILpService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"Provides standardized access to DEX liquidity pools.\";\n  }\n  static {\n    this.serviceType = \"lp\";\n  }\n};\n\n// src/types/pdf.ts\nvar IPdfService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"PDF processing, extraction, and generation capabilities\";\n  }\n  static {\n    this.serviceType = ServiceType.PDF;\n  }\n};\n\n// src/types/video.ts\nvar IVideoService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"Video download, processing, and conversion capabilities\";\n  }\n  static {\n    this.serviceType = ServiceType.VIDEO;\n  }\n};\n\n// src/types/browser.ts\nvar IBrowserService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"Web browser automation and scraping capabilities\";\n  }\n  static {\n    this.serviceType = ServiceType.BROWSER;\n  }\n};\n\n// src/types/transcription.ts\nvar ITranscriptionService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"Audio transcription and speech processing capabilities\";\n  }\n  static {\n    this.serviceType = ServiceType.TRANSCRIPTION;\n  }\n};\n\n// src/types/web-search.ts\nvar IWebSearchService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"Web search and content discovery capabilities\";\n  }\n  static {\n    this.serviceType = ServiceType.WEB_SEARCH;\n  }\n};\n\n// src/types/email.ts\nvar IEmailService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"Email sending, receiving, and management capabilities\";\n  }\n  static {\n    this.serviceType = ServiceType.EMAIL;\n  }\n};\n\n// src/types/message.ts\nvar IMessageService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"Message sending, receiving, and management capabilities\";\n  }\n  static {\n    this.serviceType = ServiceType.MESSAGE;\n  }\n};\n\n// src/types/post.ts\nvar IPostService = class extends Service {\n  constructor() {\n    super(...arguments);\n    this.capabilityDescription = \"Social media posting and content management capabilities\";\n  }\n  static {\n    this.serviceType = ServiceType.POST;\n  }\n};\n\n// src/utils.ts\nimport handlebars from \"handlebars\";\nimport { sha1 } from \"js-sha1\";\nimport { RecursiveCharacterTextSplitter } from \"langchain/text_splitter\";\nimport { names, uniqueNamesGenerator } from \"unique-names-generator\";\nimport { z } from \"zod\";\n\n// src/logger.ts\nimport pino from \"pino\";\n\n// src/sentry/instrument.ts\nimport * as Sentry from \"@sentry/browser\";\nvar dsn = process.env.SENTRY_DSN || \"https://c20e2d51b66c14a783b0689d536f7e5c@o4509349865259008.ingest.us.sentry.io/4509352524120064\";\nif (process.env.SENTRY_LOGGING !== \"false\") {\n  Sentry.onLoad(() => {\n    Sentry.init({\n      dsn,\n      environment: process.env.SENTRY_ENVIRONMENT || process.env.NODE_ENV,\n      tracesSampleRate: parseFloat(process.env.SENTRY_TRACES_SAMPLE_RATE ?? \"\") || 1,\n      sendDefaultPii: process.env.SENTRY_SEND_DEFAULT_PII === \"true\"\n    });\n  });\n}\n\n// src/logger.ts\nfunction parseBooleanFromText(value) {\n  if (!value) return false;\n  const normalized = value.toLowerCase().trim();\n  return normalized === \"true\" || normalized === \"1\" || normalized === \"yes\" || normalized === \"on\";\n}\nvar InMemoryDestination = class {\n  /**\n   * Constructor for creating a new instance of the class.\n   * @param {DestinationStream|null} stream - The stream to assign to the instance. Can be null.\n   */\n  constructor(stream) {\n    this.logs = [];\n    this.maxLogs = 1e3;\n    this.stream = stream;\n  }\n  /**\n   * Writes a log entry to the memory buffer and forwards it to the pretty print stream if available.\n   *\n   * @param {string | LogEntry} data - The data to be written, which can be either a string or a LogEntry object.\n   * @returns {void}\n   */\n  write(data) {\n    let logEntry;\n    let stringData;\n    if (typeof data === \"string\") {\n      stringData = data;\n      try {\n        logEntry = JSON.parse(data);\n      } catch (e) {\n        if (this.stream) {\n          this.stream.write(data);\n        }\n        return;\n      }\n    } else {\n      logEntry = data;\n      stringData = JSON.stringify(data);\n    }\n    if (!logEntry.time) {\n      logEntry.time = Date.now();\n    }\n    const isDebugMode2 = (process?.env?.LOG_LEVEL || \"\").toLowerCase() === \"debug\";\n    const isLoggingDiagnostic = Boolean(process?.env?.LOG_DIAGNOSTIC);\n    if (isLoggingDiagnostic) {\n      logEntry.diagnostic = true;\n    }\n    if (!isDebugMode2) {\n      if (logEntry.agentName && logEntry.agentId) {\n        const msg = logEntry.msg || \"\";\n        if (typeof msg === \"string\" && (msg.includes(\"registered successfully\") || msg.includes(\"Registering\") || msg.includes(\"Success:\") || msg.includes(\"linked to\") || msg.includes(\"Started\"))) {\n          if (isLoggingDiagnostic) {\n            console.error(\"Filtered log:\", stringData);\n          }\n          return;\n        }\n      }\n    }\n    this.logs.push(logEntry);\n    if (this.logs.length > this.maxLogs) {\n      this.logs.shift();\n    }\n    if (this.stream) {\n      this.stream.write(stringData);\n    }\n  }\n  /**\n   * Retrieves the recent logs from the system.\n   *\n   * @returns {LogEntry[]} An array of LogEntry objects representing the recent logs.\n   */\n  recentLogs() {\n    return this.logs;\n  }\n  /**\n   * Clears all logs from memory.\n   *\n   * @returns {void}\n   */\n  clear() {\n    this.logs = [];\n  }\n};\nvar customLevels = {\n  fatal: 60,\n  error: 50,\n  warn: 40,\n  info: 30,\n  log: 29,\n  progress: 28,\n  success: 27,\n  debug: 20,\n  trace: 10\n};\nvar raw = parseBooleanFromText(process?.env?.LOG_JSON_FORMAT) || false;\nvar isDebugMode = (process?.env?.LOG_LEVEL || \"\").toLowerCase() === \"debug\";\nvar effectiveLogLevel = isDebugMode ? \"debug\" : process?.env?.DEFAULT_LOG_LEVEL || \"info\";\nvar showTimestamps = process?.env?.LOG_TIMESTAMPS !== void 0 ? parseBooleanFromText(process?.env?.LOG_TIMESTAMPS) : true;\nvar createPrettyConfig = () => ({\n  colorize: true,\n  translateTime: showTimestamps ? \"yyyy-mm-dd HH:MM:ss\" : false,\n  ignore: showTimestamps ? \"pid,hostname\" : \"pid,hostname,time\",\n  levelColors: {\n    60: \"red\",\n    // fatal\n    50: \"red\",\n    // error\n    40: \"yellow\",\n    // warn\n    30: \"blue\",\n    // info\n    29: \"green\",\n    // log\n    28: \"cyan\",\n    // progress\n    27: \"greenBright\",\n    // success\n    20: \"magenta\",\n    // debug\n    10: \"grey\",\n    // trace\n    \"*\": \"white\"\n    // default for any unspecified level\n  },\n  customPrettifiers: {\n    level: (inputData) => {\n      let level;\n      if (typeof inputData === \"object\" && inputData !== null) {\n        level = inputData.level || inputData.value;\n      } else {\n        level = inputData;\n      }\n      const levelNames = {\n        10: \"TRACE\",\n        20: \"DEBUG\",\n        27: \"SUCCESS\",\n        28: \"PROGRESS\",\n        29: \"LOG\",\n        30: \"INFO\",\n        40: \"WARN\",\n        50: \"ERROR\",\n        60: \"FATAL\"\n      };\n      if (typeof level === \"number\") {\n        return levelNames[level] || `LEVEL${level}`;\n      }\n      if (level === void 0 || level === null) {\n        return \"UNKNOWN\";\n      }\n      return String(level).toUpperCase();\n    },\n    // Add a custom prettifier for error messages\n    msg: (msg) => {\n      return msg.replace(/ERROR \\([^)]+\\):/g, \"ERROR:\");\n    }\n  },\n  messageFormat: \"{msg}\"\n});\nvar createStream = async () => {\n  if (raw) {\n    return void 0;\n  }\n  const pretty = await import(\"pino-pretty\");\n  return pretty.default(createPrettyConfig());\n};\nvar options = {\n  level: effectiveLogLevel,\n  // Use more restrictive level unless in debug mode\n  customLevels,\n  hooks: {\n    logMethod(inputArgs, method) {\n      const [arg1, ...rest] = inputArgs;\n      if (process.env.SENTRY_LOGGING !== \"false\") {\n        if (arg1 instanceof Error) {\n          Sentry.captureException(arg1);\n        } else {\n          for (const item of rest) {\n            if (item instanceof Error) {\n              Sentry.captureException(item);\n            }\n          }\n        }\n      }\n      const formatError = (err) => ({\n        message: `(${err.name}) ${err.message}`,\n        stack: err.stack?.split(\"\\n\").map((line) => line.trim())\n      });\n      if (typeof arg1 === \"object\") {\n        if (arg1 instanceof Error) {\n          method.apply(this, [\n            {\n              error: formatError(arg1)\n            }\n          ]);\n        } else {\n          const messageParts = rest.map(\n            (arg) => typeof arg === \"string\" ? arg : JSON.stringify(arg)\n          );\n          const message = messageParts.join(\" \");\n          method.apply(this, [arg1, message]);\n        }\n      } else {\n        const context = {};\n        const messageParts = [arg1, ...rest].map((arg) => {\n          if (arg instanceof Error) {\n            return formatError(arg);\n          }\n          return typeof arg === \"string\" ? arg : arg;\n        });\n        const message = messageParts.filter((part) => typeof part === \"string\").join(\" \");\n        const jsonParts = messageParts.filter((part) => typeof part === \"object\");\n        Object.assign(context, ...jsonParts);\n        method.apply(this, [context, message]);\n      }\n    }\n  }\n};\nvar createLogger = (bindings = false) => {\n  const opts = { ...options };\n  if (bindings) {\n    opts.base = bindings;\n    opts.transport = {\n      target: \"pino-pretty\",\n      // this is just a string, not a dynamic import\n      options: {\n        colorize: true,\n        translateTime: showTimestamps ? \"SYS:standard\" : false,\n        ignore: showTimestamps ? \"pid,hostname\" : \"pid,hostname,time\"\n      }\n    };\n  }\n  const logger2 = pino(opts);\n  return logger2;\n};\nvar logger = pino(options);\nif (typeof process !== \"undefined\") {\n  let stream = null;\n  if (!raw) {\n    try {\n      const pretty = __require(\"pino-pretty\");\n      stream = pretty.default ? pretty.default(createPrettyConfig()) : null;\n    } catch (e) {\n      createStream().then((prettyStream) => {\n        const destination = new InMemoryDestination(prettyStream);\n        logger = pino(options, destination);\n        logger[Symbol.for(\"pino-destination\")] = destination;\n        logger.clear = () => {\n          const destination2 = logger[Symbol.for(\"pino-destination\")];\n          if (destination2 instanceof InMemoryDestination) {\n            destination2.clear();\n          }\n        };\n      });\n    }\n  }\n  if (stream !== null || raw) {\n    const destination = new InMemoryDestination(stream);\n    logger = pino(options, destination);\n    logger[Symbol.for(\"pino-destination\")] = destination;\n    logger.clear = () => {\n      const destination2 = logger[Symbol.for(\"pino-destination\")];\n      if (destination2 instanceof InMemoryDestination) {\n        destination2.clear();\n      }\n    };\n  }\n}\nvar elizaLogger = logger;\nvar logger_default = logger;\n\n// src/utils.ts\nfunction upgradeDoubleToTriple(tpl) {\n  return tpl.replace(\n    // ────────╮ negative-LB: not already \"{{{\"\n    //          │   {{     ─ opening braces\n    //          │    ╰──── negative-LA: not {, #, /, !, >\n    //          ▼\n    /(?<!{){{(?![{#\\/!>])([\\s\\S]*?)}}/g,\n    (_match, inner) => {\n      if (inner.trim() === \"else\") return `{{${inner}}}`;\n      return `{{{${inner}}}}`;\n    }\n  );\n}\nvar composePrompt = ({\n  state,\n  template\n}) => {\n  const templateStr = typeof template === \"function\" ? template({ state }) : template;\n  const templateFunction = handlebars.compile(upgradeDoubleToTriple(templateStr));\n  const output = composeRandomUser(templateFunction(state), 10);\n  return output;\n};\nvar composePromptFromState = ({\n  state,\n  template\n}) => {\n  const templateStr = typeof template === \"function\" ? template({ state }) : template;\n  const templateFunction = handlebars.compile(upgradeDoubleToTriple(templateStr));\n  const stateKeys = Object.keys(state);\n  const filteredKeys = stateKeys.filter((key) => ![\"text\", \"values\", \"data\"].includes(key));\n  const filteredState = filteredKeys.reduce((acc, key) => {\n    acc[key] = state[key];\n    return acc;\n  }, {});\n  const output = composeRandomUser(templateFunction({ ...filteredState, ...state.values }), 10);\n  return output;\n};\nvar addHeader = (header, body) => {\n  return body.length > 0 ? `${header ? `${header}\n` : header}${body}\n` : \"\";\n};\nvar composeRandomUser = (template, length) => {\n  const exampleNames = Array.from(\n    { length },\n    () => uniqueNamesGenerator({ dictionaries: [names] })\n  );\n  let result = template;\n  for (let i = 0; i < exampleNames.length; i++) {\n    result = result.replaceAll(`{{name${i + 1}}}`, exampleNames[i]);\n  }\n  return result;\n};\nvar formatPosts = ({\n  messages,\n  entities,\n  conversationHeader = true\n}) => {\n  const groupedMessages = {};\n  messages.forEach((message) => {\n    if (message.roomId) {\n      if (!groupedMessages[message.roomId]) {\n        groupedMessages[message.roomId] = [];\n      }\n      groupedMessages[message.roomId].push(message);\n    }\n  });\n  Object.values(groupedMessages).forEach((roomMessages) => {\n    roomMessages.sort((a, b) => a.createdAt - b.createdAt);\n  });\n  const sortedRooms = Object.entries(groupedMessages).sort(\n    ([, messagesA], [, messagesB]) => messagesB[messagesB.length - 1].createdAt - messagesA[messagesA.length - 1].createdAt\n  );\n  const formattedPosts = sortedRooms.map(([roomId, roomMessages]) => {\n    const messageStrings = roomMessages.filter((message) => message.entityId).map((message) => {\n      const entity = entities.find((entity2) => entity2.id === message.entityId);\n      if (!entity) {\n        logger_default.warn({ entityId: message.entityId }, \"core::prompts:formatPosts - no entity for\");\n      }\n      const userName = entity?.names[0] || \"Unknown User\";\n      const displayName = entity?.names[0] || \"unknown\";\n      return `Name: ${userName} (@${displayName} EntityID:${message.entityId})\nMessageID: ${message.id}${message.content.inReplyTo ? `\nIn reply to: ${message.content.inReplyTo}` : \"\"}\nSource: ${message.content.source}\nDate: ${formatTimestamp(message.createdAt)}\nText:\n${message.content.text}`;\n    });\n    const header = conversationHeader ? `Conversation: ${roomId.slice(-5)}\n` : \"\";\n    return `${header}${messageStrings.join(\"\\n\\n\")}`;\n  });\n  return formattedPosts.join(\"\\n\\n\");\n};\nvar formatMessages = ({\n  messages,\n  entities\n}) => {\n  const messageStrings = messages.reverse().filter((message) => message.entityId).map((message) => {\n    const messageText = message.content.text;\n    const messageActions = message.content.actions;\n    const messageThought = message.content.thought;\n    const formattedName = entities.find((entity) => entity.id === message.entityId)?.names[0] || \"Unknown User\";\n    const attachments = message.content.attachments;\n    const attachmentString = attachments && attachments.length > 0 ? ` (Attachments: ${attachments.map((media) => {\n      const lines = [`[${media.id} - ${media.title} (${media.url})]`];\n      if (media.text) lines.push(`Text: ${media.text}`);\n      if (media.description) lines.push(`Description: ${media.description}`);\n      return lines.join(\"\\n\");\n    }).join(\n      // Use comma separator only if all attachments are single-line (no text/description)\n      attachments.every((media) => !media.text && !media.description) ? \", \" : \"\\n\"\n    )})` : null;\n    const messageTime = new Date(message.createdAt);\n    const hours = messageTime.getHours().toString().padStart(2, \"0\");\n    const minutes = messageTime.getMinutes().toString().padStart(2, \"0\");\n    const timeString = `${hours}:${minutes}`;\n    const timestamp = formatTimestamp(message.createdAt);\n    const thoughtString = messageThought ? `(${formattedName}'s internal thought: ${messageThought})` : null;\n    const timestampString = `${timeString} (${timestamp}) [${message.entityId}]`;\n    const textString = messageText ? `${timestampString} ${formattedName}: ${messageText}` : null;\n    const actionString = messageActions && messageActions.length > 0 ? `${textString ? \"\" : timestampString} (${formattedName}'s actions: ${messageActions.join(\", \")})` : null;\n    const messageString = [textString, thoughtString, actionString, attachmentString].filter(Boolean).join(\"\\n\");\n    return messageString;\n  }).join(\"\\n\");\n  return messageStrings;\n};\nvar formatTimestamp = (messageDate) => {\n  const now = /* @__PURE__ */ new Date();\n  const diff = now.getTime() - messageDate;\n  const absDiff = Math.abs(diff);\n  const seconds = Math.floor(absDiff / 1e3);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n  if (absDiff < 6e4) {\n    return \"just now\";\n  }\n  if (minutes < 60) {\n    return `${minutes} minute${minutes !== 1 ? \"s\" : \"\"} ago`;\n  }\n  if (hours < 24) {\n    return `${hours} hour${hours !== 1 ? \"s\" : \"\"} ago`;\n  }\n  return `${days} day${days !== 1 ? \"s\" : \"\"} ago`;\n};\nvar jsonBlockPattern = /```json\\n([\\s\\S]*?)\\n```/;\nfunction parseKeyValueXml(text) {\n  if (!text) return null;\n  let xmlBlockMatch = text.match(/<response>([\\s\\S]*?)<\\/response>/);\n  let xmlContent;\n  if (xmlBlockMatch) {\n    xmlContent = xmlBlockMatch[1];\n    logger_default.debug(\"Found response XML block\");\n  } else {\n    const findFirstXmlBlock = (input) => {\n      let i = 0;\n      const length = input.length;\n      while (i < length) {\n        const openIdx = input.indexOf(\"<\", i);\n        if (openIdx === -1) break;\n        if (input.startsWith(\"</\", openIdx) || input.startsWith(\"<!--\", openIdx) || input.startsWith(\"<?\", openIdx)) {\n          i = openIdx + 1;\n          continue;\n        }\n        let j = openIdx + 1;\n        let tag = \"\";\n        while (j < length) {\n          const ch = input[j];\n          if (/^[A-Za-z0-9_-]$/.test(ch)) {\n            tag += ch;\n            j++;\n            continue;\n          }\n          break;\n        }\n        if (!tag) {\n          i = openIdx + 1;\n          continue;\n        }\n        const startTagEnd = input.indexOf(\">\", j);\n        if (startTagEnd === -1) break;\n        const startTagText = input.slice(openIdx, startTagEnd + 1);\n        if (/\\/\\s*>$/.test(startTagText)) {\n          i = startTagEnd + 1;\n          continue;\n        }\n        const closeSeq = `</${tag}>`;\n        let depth = 1;\n        let searchStart = startTagEnd + 1;\n        while (depth > 0 && searchStart < length) {\n          const nextOpen = input.indexOf(`<${tag}`, searchStart);\n          const nextClose = input.indexOf(closeSeq, searchStart);\n          if (nextClose === -1) {\n            break;\n          }\n          if (nextOpen !== -1 && nextOpen < nextClose) {\n            const nestedStartEnd = input.indexOf(\">\", nextOpen + 1);\n            if (nestedStartEnd === -1) {\n              break;\n            }\n            const nestedStartText = input.slice(nextOpen, nestedStartEnd + 1);\n            if (/\\/\\s*>$/.test(nestedStartText)) {\n              searchStart = nestedStartEnd + 1;\n            } else {\n              depth++;\n              searchStart = nestedStartEnd + 1;\n            }\n          } else {\n            depth--;\n            searchStart = nextClose + closeSeq.length;\n          }\n        }\n        if (depth === 0) {\n          const closeIdx = searchStart - closeSeq.length;\n          const inner = input.slice(startTagEnd + 1, closeIdx);\n          return { tag, content: inner };\n        }\n        i = startTagEnd + 1;\n      }\n      return null;\n    };\n    const fb = findFirstXmlBlock(text);\n    if (!fb) {\n      logger_default.warn(\"Could not find XML block in text\");\n      logger_default.debug({ textPreview: text.substring(0, 200) + \"...\" }, \"Text content\");\n      return null;\n    }\n    xmlContent = fb.content;\n    logger_default.debug(`Found XML block with tag: ${fb.tag}`);\n  }\n  const result = {};\n  const extractDirectChildren = (input) => {\n    const pairs = [];\n    const length = input.length;\n    let i = 0;\n    while (i < length) {\n      const openIdx = input.indexOf(\"<\", i);\n      if (openIdx === -1) break;\n      if (input.startsWith(\"</\", openIdx) || input.startsWith(\"<!--\", openIdx) || input.startsWith(\"<?\", openIdx)) {\n        i = openIdx + 1;\n        continue;\n      }\n      let j = openIdx + 1;\n      let tag = \"\";\n      while (j < length) {\n        const ch = input[j];\n        if (/^[A-Za-z0-9_-]$/.test(ch)) {\n          tag += ch;\n          j++;\n          continue;\n        }\n        break;\n      }\n      if (!tag) {\n        i = openIdx + 1;\n        continue;\n      }\n      const startTagEnd = input.indexOf(\">\", j);\n      if (startTagEnd === -1) break;\n      const startTagText = input.slice(openIdx, startTagEnd + 1);\n      if (/\\/\\s*>$/.test(startTagText)) {\n        i = startTagEnd + 1;\n        continue;\n      }\n      const closeSeq = `</${tag}>`;\n      let depth = 1;\n      let searchStart = startTagEnd + 1;\n      while (depth > 0 && searchStart < length) {\n        const nextOpen = input.indexOf(`<${tag}`, searchStart);\n        const nextClose = input.indexOf(closeSeq, searchStart);\n        if (nextClose === -1) {\n          break;\n        }\n        if (nextOpen !== -1 && nextOpen < nextClose) {\n          const nestedStartEnd = input.indexOf(\">\", nextOpen + 1);\n          if (nestedStartEnd === -1) {\n            break;\n          }\n          const nestedStartText = input.slice(nextOpen, nestedStartEnd + 1);\n          if (!/\\/\\s*>$/.test(nestedStartText)) {\n            depth++;\n          }\n          searchStart = nestedStartEnd + 1;\n        } else {\n          depth--;\n          searchStart = nextClose + closeSeq.length;\n        }\n      }\n      if (depth !== 0) {\n        i = startTagEnd + 1;\n        continue;\n      }\n      const closeIdx = searchStart - closeSeq.length;\n      const innerRaw = input.slice(startTagEnd + 1, closeIdx);\n      const unescaped = innerRaw.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\").replace(/&amp;/g, \"&\").replace(/&quot;/g, '\"').replace(/&apos;/g, \"'\").trim();\n      pairs.push({ key: tag, value: unescaped });\n      i = searchStart;\n    }\n    return pairs;\n  };\n  const children = extractDirectChildren(xmlContent);\n  for (const { key, value } of children) {\n    if (key === \"actions\" || key === \"providers\" || key === \"evaluators\") {\n      result[key] = value ? value.split(\",\").map((s) => s.trim()) : [];\n    } else if (key === \"simple\") {\n      result[key] = value.toLowerCase() === \"true\";\n    } else {\n      result[key] = value;\n    }\n  }\n  if (Object.keys(result).length === 0) {\n    logger_default.warn(\"No key-value pairs extracted from XML content\");\n    logger_default.debug({ xmlPreview: xmlContent.substring(0, 200) + \"...\" }, \"XML content was\");\n    return null;\n  }\n  return result;\n}\nfunction parseJSONObjectFromText(text) {\n  let jsonData = null;\n  const jsonBlockMatch = text.match(jsonBlockPattern);\n  try {\n    if (jsonBlockMatch) {\n      jsonData = JSON.parse(normalizeJsonString(jsonBlockMatch[1].trim()));\n    } else {\n      jsonData = JSON.parse(normalizeJsonString(text.trim()));\n    }\n  } catch (_e) {\n    return null;\n  }\n  if (jsonData && typeof jsonData === \"object\" && !Array.isArray(jsonData)) {\n    return jsonData;\n  }\n  return null;\n}\nvar normalizeJsonString = (str) => {\n  str = str.replace(/\\{\\s+/, \"{\").replace(/\\s+\\}/, \"}\").trim();\n  str = str.replace(/(\"[\\w\\d_-]+\")\\s*: \\s*(?!\"|\\[)([\\s\\S]+?)(?=(,\\s*\"|\\}$))/g, '$1: \"$2\"');\n  str = str.replace(/\"([^\"]+)\"\\s*:\\s*'([^']*)'/g, (_, key, value) => `\"${key}\": \"${value}\"`);\n  str = str.replace(/(\"[\\w\\d_-]+\")\\s*:\\s*([A-Za-z_]+)(?![\"\\w])/g, '$1: \"$2\"');\n  return str;\n};\nfunction truncateToCompleteSentence(text, maxLength) {\n  if (text.length <= maxLength) {\n    return text;\n  }\n  const lastPeriodIndex = text.lastIndexOf(\".\", maxLength - 1);\n  if (lastPeriodIndex !== -1) {\n    const truncatedAtPeriod = text.slice(0, lastPeriodIndex + 1).trim();\n    if (truncatedAtPeriod.length > 0) {\n      return truncatedAtPeriod;\n    }\n  }\n  const lastSpaceIndex = text.lastIndexOf(\" \", maxLength - 1);\n  if (lastSpaceIndex !== -1) {\n    const truncatedAtSpace = text.slice(0, lastSpaceIndex).trim();\n    if (truncatedAtSpace.length > 0) {\n      return `${truncatedAtSpace}...`;\n    }\n  }\n  const hardTruncated = text.slice(0, maxLength - 3).trim();\n  return `${hardTruncated}...`;\n}\nasync function splitChunks(content, chunkSize = 512, bleed = 20) {\n  logger_default.debug(\"[splitChunks] Starting text split\");\n  const characterstoTokens = 3.5;\n  const textSplitter = new RecursiveCharacterTextSplitter({\n    chunkSize: Number(Math.floor(chunkSize * characterstoTokens)),\n    chunkOverlap: Number(Math.floor(bleed * characterstoTokens))\n  });\n  const chunks = await textSplitter.splitText(content);\n  logger_default.debug(\n    {\n      numberOfChunks: chunks.length,\n      averageChunkSize: chunks.reduce((acc, chunk) => acc + chunk.length, 0) / chunks.length\n    },\n    \"[splitChunks] Split complete\"\n  );\n  return chunks;\n}\nasync function trimTokens(prompt, maxTokens, runtime) {\n  if (!prompt) throw new Error(\"Trim tokens received a null prompt\");\n  if (prompt.length < maxTokens / 5) return prompt;\n  if (maxTokens <= 0) throw new Error(\"maxTokens must be positive\");\n  const tokens = await runtime.useModel(ModelType.TEXT_TOKENIZER_ENCODE, {\n    prompt\n  });\n  if (tokens.length <= maxTokens) {\n    return prompt;\n  }\n  const truncatedTokens = tokens.slice(-maxTokens);\n  return await runtime.useModel(ModelType.TEXT_TOKENIZER_DECODE, {\n    tokens: truncatedTokens\n  });\n}\nfunction safeReplacer() {\n  const seen = /* @__PURE__ */ new WeakSet();\n  return function(_key, value) {\n    if (typeof value === \"object\" && value !== null) {\n      if (seen.has(value)) {\n        return \"[Circular]\";\n      }\n      seen.add(value);\n    }\n    return value;\n  };\n}\nfunction parseBooleanFromText2(value) {\n  if (!value) return false;\n  const affirmative = [\"YES\", \"Y\", \"TRUE\", \"T\", \"1\", \"ON\", \"ENABLE\"];\n  const negative = [\"NO\", \"N\", \"FALSE\", \"F\", \"0\", \"OFF\", \"DISABLE\"];\n  const normalizedText = value.trim().toUpperCase();\n  if (affirmative.includes(normalizedText)) {\n    return true;\n  }\n  if (negative.includes(normalizedText)) {\n    return false;\n  }\n  return false;\n}\nvar uuidSchema = z.string().uuid();\nfunction validateUuid(value) {\n  const result = uuidSchema.safeParse(value);\n  return result.success ? result.data : null;\n}\nfunction stringToUuid(target) {\n  if (typeof target === \"number\") {\n    target = target.toString();\n  }\n  if (typeof target !== \"string\") {\n    throw TypeError(\"Value must be string\");\n  }\n  const _uint8ToHex = (ubyte) => {\n    const first = ubyte >> 4;\n    const second = ubyte - (first << 4);\n    const HEX_DIGITS = \"0123456789abcdef\".split(\"\");\n    return HEX_DIGITS[first] + HEX_DIGITS[second];\n  };\n  const _uint8ArrayToHex = (buf) => {\n    let out = \"\";\n    for (let i = 0; i < buf.length; i++) {\n      out += _uint8ToHex(buf[i]);\n    }\n    return out;\n  };\n  const escapedStr = encodeURIComponent(target);\n  const buffer = new Uint8Array(escapedStr.length);\n  for (let i = 0; i < escapedStr.length; i++) {\n    buffer[i] = escapedStr[i].charCodeAt(0);\n  }\n  const hash = sha1(buffer);\n  const hashBuffer = new Uint8Array(hash.length / 2);\n  for (let i = 0; i < hash.length; i += 2) {\n    hashBuffer[i / 2] = Number.parseInt(hash.slice(i, i + 2), 16);\n  }\n  return `${_uint8ArrayToHex(hashBuffer.slice(0, 4))}-${_uint8ArrayToHex(hashBuffer.slice(4, 6))}-${_uint8ToHex(hashBuffer[6] & 15)}${_uint8ToHex(hashBuffer[7])}-${_uint8ToHex(hashBuffer[8] & 63 | 128)}${_uint8ToHex(hashBuffer[9])}-${_uint8ArrayToHex(hashBuffer.slice(10, 16))}`;\n}\nvar getContentTypeFromMimeType = (mimeType) => {\n  if (mimeType.startsWith(\"image/\")) return \"image\" /* IMAGE */;\n  if (mimeType.startsWith(\"video/\")) return \"video\" /* VIDEO */;\n  if (mimeType.startsWith(\"audio/\")) return \"audio\" /* AUDIO */;\n  if (mimeType.includes(\"pdf\") || mimeType.includes(\"document\") || mimeType.startsWith(\"text/\")) {\n    return \"document\" /* DOCUMENT */;\n  }\n  return void 0;\n};\nfunction getLocalServerUrl(path) {\n  const port = process.env.SERVER_PORT || \"3000\";\n  return `http://localhost:${port}${path}`;\n}\n\n// src/schemas/character.ts\nimport { z as z2 } from \"zod\";\nvar uuidSchema2 = z2.string().regex(/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i, \"Invalid UUID format\");\nvar contentSchema = z2.object({\n  text: z2.string().optional(),\n  thought: z2.string().optional(),\n  actions: z2.array(z2.string()).optional(),\n  providers: z2.array(z2.string()).optional(),\n  source: z2.string().optional(),\n  target: z2.string().optional(),\n  url: z2.string().optional(),\n  inReplyTo: uuidSchema2.optional(),\n  attachments: z2.array(z2.any()).optional(),\n  channelType: z2.string().optional()\n}).passthrough();\nvar messageExampleSchema = z2.object({\n  name: z2.string(),\n  content: contentSchema\n});\nvar directoryItemSchema = z2.object({\n  directory: z2.string(),\n  shared: z2.boolean().optional()\n});\nvar knowledgeItemSchema = z2.union([\n  z2.string(),\n  z2.object({\n    path: z2.string(),\n    shared: z2.boolean().optional()\n  }),\n  directoryItemSchema\n]);\nvar templateTypeSchema = z2.union([\n  z2.string(),\n  z2.function().optional()\n  // Functions won't be in JSON but allowed in runtime\n]);\nvar styleSchema = z2.object({\n  all: z2.array(z2.string()).optional(),\n  chat: z2.array(z2.string()).optional(),\n  post: z2.array(z2.string()).optional()\n}).optional();\nvar settingsSchema = z2.record(z2.union([z2.string(), z2.boolean(), z2.number(), z2.any()])).optional();\nvar secretsSchema = z2.record(z2.union([z2.string(), z2.boolean(), z2.number()])).optional();\nvar characterSchema = z2.object({\n  id: uuidSchema2.optional(),\n  name: z2.string().min(1, \"Character name is required\"),\n  username: z2.string().optional(),\n  system: z2.string().optional(),\n  templates: z2.record(templateTypeSchema).optional(),\n  bio: z2.union([z2.string(), z2.array(z2.string())]),\n  messageExamples: z2.array(z2.array(messageExampleSchema)).optional(),\n  postExamples: z2.array(z2.string()).optional(),\n  topics: z2.array(z2.string()).optional(),\n  adjectives: z2.array(z2.string()).optional(),\n  knowledge: z2.array(knowledgeItemSchema).optional(),\n  plugins: z2.array(z2.string()).optional(),\n  settings: settingsSchema,\n  secrets: secretsSchema,\n  style: styleSchema\n}).strict();\nfunction validateCharacter(data) {\n  const result = characterSchema.safeParse(data);\n  if (result.success) {\n    return {\n      success: true,\n      data: result.data\n    };\n  }\n  return {\n    success: false,\n    error: {\n      message: `Character validation failed: ${result.error.message}`,\n      issues: result.error.issues\n    }\n  };\n}\nfunction parseAndValidateCharacter(jsonString) {\n  try {\n    const parsed = JSON.parse(jsonString);\n    return validateCharacter(parsed);\n  } catch (error) {\n    return {\n      success: false,\n      error: {\n        message: `Invalid JSON: ${error instanceof Error ? error.message : \"Unknown JSON parsing error\"}`\n      }\n    };\n  }\n}\nfunction isValidCharacter(data) {\n  return validateCharacter(data).success;\n}\n\n// src/actions.ts\nimport { names as names2, uniqueNamesGenerator as uniqueNamesGenerator2 } from \"unique-names-generator\";\nvar composeActionExamples = (actionsData, count) => {\n  if (!actionsData.length || count <= 0) {\n    return \"\";\n  }\n  const actionsWithExamples = actionsData.filter(\n    (action) => action.examples && Array.isArray(action.examples) && action.examples.length > 0\n  );\n  if (!actionsWithExamples.length) {\n    return \"\";\n  }\n  const examplesCopy = actionsWithExamples.map((action) => [\n    ...action.examples\n  ]);\n  const selectedExamples = [];\n  let availableActionIndices = examplesCopy.map((examples, index) => examples.length > 0 ? index : -1).filter((index) => index !== -1);\n  while (selectedExamples.length < count && availableActionIndices.length > 0) {\n    const randomIndex = Math.floor(Math.random() * availableActionIndices.length);\n    const actionIndex = availableActionIndices[randomIndex];\n    const examples = examplesCopy[actionIndex];\n    const exampleIndex = Math.floor(Math.random() * examples.length);\n    selectedExamples.push(examples.splice(exampleIndex, 1)[0]);\n    if (examples.length === 0) {\n      availableActionIndices.splice(randomIndex, 1);\n    }\n  }\n  return formatSelectedExamples(selectedExamples);\n};\nvar formatSelectedExamples = (examples) => {\n  const MAX_NAME_PLACEHOLDERS = 5;\n  return examples.map((example) => {\n    const randomNames = Array.from(\n      { length: MAX_NAME_PLACEHOLDERS },\n      () => uniqueNamesGenerator2({ dictionaries: [names2] })\n    );\n    const conversation = example.map((message) => {\n      let messageText = `${message.name}: ${message.content.text}`;\n      for (let i = 0; i < randomNames.length; i++) {\n        messageText = messageText.replaceAll(`{{name${i + 1}}}`, randomNames[i]);\n      }\n      return messageText;\n    }).join(\"\\n\");\n    return `\n${conversation}`;\n  }).join(\"\\n\");\n};\nfunction formatActionNames(actions) {\n  if (!actions?.length) return \"\";\n  return [...actions].sort(() => Math.random() - 0.5).map((action) => action.name).join(\", \");\n}\nfunction formatActions(actions) {\n  if (!actions?.length) return \"\";\n  return [...actions].sort(() => Math.random() - 0.5).map((action) => `- **${action.name}**: ${action.description || \"No description available\"}`).join(\"\\n\");\n}\n\n// src/database.ts\nvar DatabaseAdapter = class {\n};\n\n// src/entities.ts\nvar entityResolutionTemplate = `# Task: Resolve Entity Name\nMessage Sender: {{senderName}} (ID: {{senderId}})\nAgent: {{agentName}} (ID: {{agentId}})\n\n# Entities in Room:\n{{#if entitiesInRoom}}\n{{entitiesInRoom}}\n{{/if}}\n\n{{recentMessages}}\n\n# Instructions:\n1. Analyze the context to identify which entity is being referenced\n2. Consider special references like \"me\" (the message sender) or \"you\" (agent the message is directed to)\n3. Look for usernames/handles in standard formats (e.g. @username, user#1234)\n4. Consider context from recent messages for pronouns and references\n5. If multiple matches exist, use context to disambiguate\n6. Consider recent interactions and relationship strength when resolving ambiguity\n\nDo NOT include any thinking, reasoning, or <think> sections in your response. \nGo directly to the XML response format without any preamble or explanation.\n\nReturn an XML response with:\n<response>\n  <entityId>exact-id-if-known-otherwise-null</entityId>\n  <type>EXACT_MATCH | USERNAME_MATCH | NAME_MATCH | RELATIONSHIP_MATCH | AMBIGUOUS | UNKNOWN</type>\n  <matches>\n    <match>\n      <name>matched-name</name>\n      <reason>why this entity matches</reason>\n    </match>\n  </matches>\n</response>\n\nIMPORTANT: Your response must ONLY contain the <response></response> XML block above. Do not include any text, thinking, or reasoning before or after this XML block. Start your response immediately with <response> and end with </response>.`;\nasync function getRecentInteractions(runtime, sourceEntityId, candidateEntities, roomId, relationships) {\n  const results = [];\n  const recentMessages = await runtime.getMemories({\n    tableName: \"messages\",\n    roomId,\n    count: 20\n    // Reduced from 100 since we only need context\n  });\n  for (const entity of candidateEntities) {\n    const interactions = [];\n    let interactionScore = 0;\n    const directReplies = recentMessages.filter(\n      (msg) => msg.entityId === sourceEntityId && msg.content.inReplyTo === entity.id || msg.entityId === entity.id && msg.content.inReplyTo === sourceEntityId\n    );\n    interactions.push(...directReplies);\n    const relationship = relationships.find(\n      (rel) => rel.sourceEntityId === sourceEntityId && rel.targetEntityId === entity.id || rel.targetEntityId === sourceEntityId && rel.sourceEntityId === entity.id\n    );\n    if (relationship?.metadata?.interactions) {\n      interactionScore = relationship.metadata.interactions;\n    }\n    interactionScore += directReplies.length;\n    const uniqueInteractions = [...new Set(interactions)];\n    results.push({\n      entity,\n      interactions: uniqueInteractions.slice(-5),\n      // Only keep last 5 messages for context\n      count: Math.round(interactionScore)\n    });\n  }\n  return results.sort((a, b) => b.count - a.count);\n}\nasync function findEntityByName(runtime, message, state) {\n  const room = state.data.room ?? await runtime.getRoom(message.roomId);\n  if (!room) {\n    logger.warn(\"Room not found for entity search\");\n    return null;\n  }\n  const world = room.worldId ? await runtime.getWorld(room.worldId) : null;\n  const entitiesInRoom = await runtime.getEntitiesForRoom(room.id, true);\n  const filteredEntities = await Promise.all(\n    entitiesInRoom.map(async (entity) => {\n      if (!entity.components) return entity;\n      const worldRoles = world?.metadata?.roles || {};\n      entity.components = entity.components.filter((component) => {\n        if (component.sourceEntityId === message.entityId) return true;\n        if (world && component.sourceEntityId) {\n          const sourceRole = worldRoles[component.sourceEntityId];\n          if (sourceRole === \"OWNER\" || sourceRole === \"ADMIN\") return true;\n        }\n        if (component.sourceEntityId === runtime.agentId) return true;\n        return false;\n      });\n      return entity;\n    })\n  );\n  const relationships = await runtime.getRelationships({\n    entityId: message.entityId\n  });\n  const relationshipEntities = await Promise.all(\n    relationships.map(async (rel) => {\n      const entityId = rel.sourceEntityId === message.entityId ? rel.targetEntityId : rel.sourceEntityId;\n      return runtime.getEntityById(entityId);\n    })\n  );\n  const allEntities = [\n    ...filteredEntities,\n    ...relationshipEntities.filter((e) => e !== null)\n  ];\n  const interactionData = await getRecentInteractions(\n    runtime,\n    message.entityId,\n    allEntities,\n    room.id,\n    relationships\n  );\n  const prompt = composePrompt({\n    state: {\n      roomName: room.name || room.id,\n      worldName: world?.name || \"Unknown\",\n      entitiesInRoom: JSON.stringify(filteredEntities, null, 2),\n      entityId: message.entityId,\n      senderId: message.entityId\n    },\n    template: entityResolutionTemplate\n  });\n  const result = await runtime.useModel(ModelType.TEXT_SMALL, {\n    prompt,\n    stopSequences: []\n  });\n  const resolution = parseKeyValueXml(result);\n  if (!resolution) {\n    logger.warn(\"Failed to parse entity resolution result\");\n    return null;\n  }\n  if (resolution.type === \"EXACT_MATCH\" && resolution.entityId) {\n    const entity = await runtime.getEntityById(resolution.entityId);\n    if (entity) {\n      if (entity.components) {\n        const worldRoles = world?.metadata?.roles || {};\n        entity.components = entity.components.filter((component) => {\n          if (component.sourceEntityId === message.entityId) return true;\n          if (world && component.sourceEntityId) {\n            const sourceRole = worldRoles[component.sourceEntityId];\n            if (sourceRole === \"OWNER\" || sourceRole === \"ADMIN\") return true;\n          }\n          if (component.sourceEntityId === runtime.agentId) return true;\n          return false;\n        });\n      }\n      return entity;\n    }\n  }\n  let matchesArray = [];\n  if (resolution.matches?.match) {\n    matchesArray = Array.isArray(resolution.matches.match) ? resolution.matches.match : [resolution.matches.match];\n  }\n  if (matchesArray.length > 0 && matchesArray[0]?.name) {\n    const matchName = matchesArray[0].name.toLowerCase();\n    const matchingEntity = allEntities.find((entity) => {\n      if (entity.names.some((n) => n.toLowerCase() === matchName)) return true;\n      return entity.components?.some(\n        (c) => c.data.username?.toLowerCase() === matchName || c.data.handle?.toLowerCase() === matchName\n      );\n    });\n    if (matchingEntity) {\n      if (resolution.type === \"RELATIONSHIP_MATCH\") {\n        const interactionInfo = interactionData.find((d) => d.entity.id === matchingEntity.id);\n        if (interactionInfo && interactionInfo.count > 0) {\n          return matchingEntity;\n        }\n      } else {\n        return matchingEntity;\n      }\n    }\n  }\n  return null;\n}\nvar createUniqueUuid = (runtime, baseUserId) => {\n  if (baseUserId === runtime.agentId) {\n    return runtime.agentId;\n  }\n  const combinedString = `${baseUserId}:${runtime.agentId}`;\n  return stringToUuid(combinedString);\n};\nasync function getEntityDetails({\n  runtime,\n  roomId\n}) {\n  const [room, roomEntities] = await Promise.all([\n    runtime.getRoom(roomId),\n    runtime.getEntitiesForRoom(roomId, true)\n  ]);\n  const uniqueEntities = /* @__PURE__ */ new Map();\n  for (const entity of roomEntities) {\n    if (uniqueEntities.has(entity.id)) continue;\n    const allData = {};\n    for (const component of entity.components || []) {\n      Object.assign(allData, component.data);\n    }\n    const mergedData = {};\n    for (const [key, value] of Object.entries(allData)) {\n      if (!mergedData[key]) {\n        mergedData[key] = value;\n        continue;\n      }\n      if (Array.isArray(mergedData[key]) && Array.isArray(value)) {\n        mergedData[key] = [.../* @__PURE__ */ new Set([...mergedData[key], ...value])];\n      } else if (typeof mergedData[key] === \"object\" && typeof value === \"object\") {\n        mergedData[key] = { ...mergedData[key], ...value };\n      }\n    }\n    uniqueEntities.set(entity.id, {\n      id: entity.id,\n      name: room?.source ? entity.metadata[room.source]?.name || entity.names[0] : entity.names[0],\n      names: entity.names,\n      data: JSON.stringify({ ...mergedData, ...entity.metadata })\n    });\n  }\n  return Array.from(uniqueEntities.values());\n}\nfunction formatEntities({ entities }) {\n  const entityStrings = entities.map((entity) => {\n    const header = `\"${entity.names.join('\" aka \"')}\"\nID: ${entity.id}${entity.metadata && Object.keys(entity.metadata).length > 0 ? `\nData: ${JSON.stringify(entity.metadata)}\n` : \"\\n\"}`;\n    return header;\n  });\n  return entityStrings.join(\"\\n\");\n}\n\n// src/prompts.ts\nvar shouldRespondTemplate = `<task>Decide on behalf of {{agentName}} whether they should respond to the message, ignore it or stop the conversation.</task>\n\n<providers>\n{{providers}}\n</providers>\n\n<instructions>Decide if {{agentName}} should respond to or interact with the conversation.\nIf the message is directed at or relevant to {{agentName}}, respond with RESPOND action.\nIf a user asks {{agentName}} to be quiet, respond with STOP action.\nIf {{agentName}} should ignore the message, respond with IGNORE action.</instructions>\n\n<output>\nDo NOT include any thinking, reasoning, or <think> sections in your response. \nGo directly to the XML response format without any preamble or explanation.\n\nRespond using XML format like this:\n<response>\n  <name>{{agentName}}</name>\n  <reasoning>Your reasoning here</reasoning>\n  <action>RESPOND | IGNORE | STOP</action>\n</response>\n\nIMPORTANT: Your response must ONLY contain the <response></response> XML block above. Do not include any text, thinking, or reasoning before or after this XML block. Start your response immediately with <response> and end with </response>.\n</output>`;\nvar messageHandlerTemplate = `<task>Generate dialog and actions for the character {{agentName}}.</task>\n\n<providers>\n{{providers}}\n</providers>\n\nThese are the available valid actions:\n<actionNames>\n{{actionNames}}\n</actionNames>\n\n<instructions>\nWrite a thought and plan for {{agentName}} and decide what actions to take. Also include the providers that {{agentName}} will use to have the right context for responding and acting, if any.\n\nIMPORTANT ACTION ORDERING RULES:\n- Actions are executed in the ORDER you list them - the order MATTERS!\n- REPLY should come FIRST to acknowledge the user's request before executing other actions\n- Common patterns:\n  - For requests requiring tool use: REPLY,CALL_MCP_TOOL (acknowledge first, then gather info)\n  - For task execution: REPLY,SEND_MESSAGE or REPLY,EVM_SWAP_TOKENS (acknowledge first, then do the task)\n  - For multi-step operations: REPLY,ACTION1,ACTION2 (acknowledge first, then complete all steps)\n- REPLY is used to acknowledge and inform the user about what you're going to do\n- Follow-up actions execute the actual tasks after acknowledgment\n- Use IGNORE only when you should not respond at all\n- If you use IGNORE, do not include any other actions. IGNORE should be used alone when you should not respond or take any actions.\n\nIMPORTANT PROVIDER SELECTION RULES:\n- Only include providers if they are needed to respond accurately.\n- If the message mentions images, photos, pictures, attachments, or visual content, OR if you see \"(Attachments:\" in the conversation, you MUST include \"ATTACHMENTS\" in your providers list\n- If the message asks about or references specific people, include \"ENTITIES\" in your providers list  \n- If the message asks about relationships or connections between people, include \"RELATIONSHIPS\" in your providers list\n- If the message asks about facts or specific information, include \"FACTS\" in your providers list\n- If the message asks about the environment or world context, include \"WORLD\" in your providers list\n- If no additional context is needed, you may leave the providers list empty.\n\nIMPORTANT CODE BLOCK FORMATTING RULES:\n- If {{agentName}} includes code examples, snippets, or multi-line code in the response, ALWAYS wrap the code with \\`\\`\\` fenced code blocks (specify the language if known, e.g., \\`\\`\\`python).\n- ONLY use fenced code blocks for actual code. Do NOT wrap non-code text, instructions, or single words in fenced code blocks.\n- If including inline code (short single words or function names), use single backticks (\\`) as appropriate.\n- This ensures the user sees clearly formatted and copyable code when relevant.\n\nFirst, think about what you want to do next and plan your actions. Then, write the next message and include the actions you plan to take.\n</instructions>\n\n<keys>\n\"thought\" should be a short description of what the agent is thinking about and planning.\n\"actions\" should be a comma-separated list of the actions {{agentName}} plans to take based on the thought, IN THE ORDER THEY SHOULD BE EXECUTED (if none, use IGNORE, if simply responding with text, use REPLY)\n\"providers\" should be a comma-separated list of the providers that {{agentName}} will use to have the right context for responding and acting (NEVER use \"IGNORE\" as a provider - use specific provider names like ATTACHMENTS, ENTITIES, FACTS, KNOWLEDGE, etc.)\n\"text\" should be the text of the next message for {{agentName}} which they will send to the conversation.\n</keys>\n\n<output>\nDo NOT include any thinking, reasoning, or <think> sections in your response. \nGo directly to the XML response format without any preamble or explanation.\n\nRespond using XML format like this:\n<response>\n    <thought>Your thought here</thought>\n    <actions>ACTION1,ACTION2</actions>\n    <providers>PROVIDER1,PROVIDER2</providers>\n    <text>Your response text here</text>\n</response>\n\nIMPORTANT: Your response must ONLY contain the <response></response> XML block above. Do not include any text, thinking, or reasoning before or after this XML block. Start your response immediately with <response> and end with </response>.\n</output>`;\nvar postCreationTemplate = `# Task: Create a post in the voice and style and perspective of {{agentName}} @{{twitterUserName}}.\n\nExample task outputs:\n1. A post about the importance of AI in our lives\n<response>\n  <thought>I am thinking about writing a post about the importance of AI in our lives</thought>\n  <post>AI is changing the world and it is important to understand how it works</post>\n  <imagePrompt>A futuristic cityscape with flying cars and people using AI to do things</imagePrompt>\n</response>\n\n2. A post about dogs\n<response>\n  <thought>I am thinking about writing a post about dogs</thought>\n  <post>Dogs are man's best friend and they are loyal and loving</post>\n  <imagePrompt>A dog playing with a ball in a park</imagePrompt>\n</response>\n\n3. A post about finding a new job\n<response>\n  <thought>Getting a job is hard, I bet there's a good tweet in that</thought>\n  <post>Just keep going!</post>\n  <imagePrompt>A person looking at a computer screen with a job search website</imagePrompt>\n</response>\n\n{{providers}}\n\nWrite a post that is {{adjective}} about {{topic}} (without mentioning {{topic}} directly), from the perspective of {{agentName}}. Do not add commentary or acknowledge this request, just write the post.\nYour response should be 1, 2, or 3 sentences (choose the length at random).\nYour response should not contain any questions. Brief, concise statements only. The total character count MUST be less than 280. No emojis. Use \\\\n\\\\n (double spaces) between statements if there are multiple statements in your response.\n\nYour output should be formatted in XML like this:\n<response>\n  <thought>Your thought here</thought>\n  <post>Your post text here</post>\n  <imagePrompt>Optional image prompt here</imagePrompt>\n</response>\n\nThe \"post\" field should be the post you want to send. Do not including any thinking or internal reflection in the \"post\" field.\nThe \"imagePrompt\" field is optional and should be a prompt for an image that is relevant to the post. It should be a single sentence that captures the essence of the post. ONLY USE THIS FIELD if it makes sense that the post would benefit from an image.\nThe \"thought\" field should be a short description of what the agent is thinking about before responding, including a brief justification for the response. Includate an explanation how the post is relevant to the topic but unique and different than other posts.\n\nDo NOT include any thinking, reasoning, or <think> sections in your response. \nGo directly to the XML response format without any preamble or explanation.\n\nIMPORTANT: Your response must ONLY contain the <response></response> XML block above. Do not include any text, thinking, or reasoning before or after this XML block. Start your response immediately with <response> and end with </response>.`;\nvar booleanFooter = \"Respond with only a YES or a NO.\";\nvar imageDescriptionTemplate = `<task>Analyze the provided image and generate a comprehensive description with multiple levels of detail.</task>\n\n<instructions>\nCarefully examine the image and provide:\n1. A concise, descriptive title that captures the main subject or scene\n2. A brief summary description (1-2 sentences) highlighting the key elements\n3. An extensive, detailed description that covers all visible elements, composition, lighting, colors, mood, and any other relevant details\n\nBe objective and descriptive. Focus on what you can actually see in the image rather than making assumptions about context or meaning.\n</instructions>\n\n<output>\nDo NOT include any thinking, reasoning, or <think> sections in your response. \nGo directly to the XML response format without any preamble or explanation.\n\nRespond using XML format like this:\n<response>\n  <title>A concise, descriptive title for the image</title>\n  <description>A brief 1-2 sentence summary of the key elements in the image</description>\n  <text>An extensive, detailed description covering all visible elements, composition, lighting, colors, mood, setting, objects, people, activities, and any other relevant details you can observe in the image</text>\n</response>\n\nIMPORTANT: Your response must ONLY contain the <response></response> XML block above. Do not include any text, thinking, or reasoning before or after this XML block. Start your response immediately with <response> and end with </response>.\n</output>`;\n\n// src/roles.ts\nasync function getUserServerRole(runtime, entityId, serverId) {\n  const worldId = createUniqueUuid(runtime, serverId);\n  const world = await runtime.getWorld(worldId);\n  if (!world || !world.metadata?.roles) {\n    return \"NONE\" /* NONE */;\n  }\n  if (world.metadata.roles[entityId]) {\n    return world.metadata.roles[entityId];\n  }\n  if (world.metadata.roles[entityId]) {\n    return world.metadata.roles[entityId];\n  }\n  return \"NONE\" /* NONE */;\n}\nasync function findWorldsForOwner(runtime, entityId) {\n  if (!entityId) {\n    logger.error(\"User ID is required to find server\");\n    return null;\n  }\n  const worlds = await runtime.getAllWorlds();\n  if (!worlds || worlds.length === 0) {\n    logger.info(\"No worlds found for this agent\");\n    return null;\n  }\n  const ownerWorlds = [];\n  for (const world of worlds) {\n    if (world.metadata?.ownership?.ownerId === entityId) {\n      ownerWorlds.push(world);\n    }\n  }\n  return ownerWorlds.length ? ownerWorlds : null;\n}\n\n// src/runtime.ts\nimport { v4 as uuidv4 } from \"uuid\";\n\n// src/search.ts\nvar isV = (char) => {\n  switch (char) {\n    case 97:\n    case 101:\n    case 105:\n    case 111:\n    case 117:\n    case 121:\n      return true;\n    default:\n      return false;\n  }\n};\nvar isWxy = (char) => {\n  switch (char) {\n    case 97:\n    case 101:\n    case 105:\n    case 111:\n    case 117:\n    case 121:\n    case 119:\n    case 120:\n    case 89:\n      return true;\n    default:\n      return false;\n  }\n};\nvar isValidLi = (char) => {\n  switch (char) {\n    case 99:\n    case 100:\n    case 101:\n    case 103:\n    case 104:\n    case 107:\n    case 109:\n    case 110:\n    case 114:\n    case 116:\n      return true;\n    default:\n      return false;\n  }\n};\nvar isDouble = (char) => {\n  switch (char) {\n    case 98:\n    case 100:\n    case 102:\n    case 103:\n    case 109:\n    case 110:\n    case 112:\n    case 114:\n    case 116:\n      return true;\n    default:\n      return false;\n  }\n};\nvar isShortV = (w, len) => {\n  return len >= 2 && isV(w[len - 2]) && (len === 2 && !isV(w[len - 1]) || len >= 3 && !isV(w[len - 3]) && !isWxy(w[len - 1]));\n};\nvar stem = (word) => {\n  if (word.length < 3) return word;\n  if (word.length <= 6) {\n    switch (word) {\n      case \"ski\":\n        return \"ski\";\n      case \"skies\":\n        return \"sky\";\n      case \"dying\":\n        return \"die\";\n      case \"lying\":\n        return \"lie\";\n      case \"tying\":\n        return \"tie\";\n      // special -LY cases\n      case \"idly\":\n        return \"idl\";\n      case \"gently\":\n        return \"gentl\";\n      case \"ugly\":\n        return \"ugli\";\n      case \"early\":\n        return \"earli\";\n      case \"only\":\n        return \"onli\";\n      case \"singly\":\n        return \"singl\";\n      // invariant forms\n      case \"sky\":\n      case \"news\":\n      case \"howe\":\n      // not plural forms\n      case \"atlas\":\n      case \"cosmos\":\n      case \"bias\":\n      case \"andes\":\n        return word;\n    }\n  }\n  const initialOffset = word.charCodeAt(0) === 39 ? 1 : 0;\n  let l = word.length - initialOffset;\n  const w = new Array(l);\n  let yFound = false;\n  for (let i = 0; i < l; ++i) {\n    const ch = word.charCodeAt(i + initialOffset);\n    if (ch === 121 && (i === 0 || isV(w[i - 1]))) {\n      yFound = true;\n      w[i] = 89;\n      continue;\n    }\n    w[i] = ch;\n  }\n  if (w[l - 1] === 39) --l;\n  if (l >= 2 && w[l - 2] === 39 && w[l - 1] === 115) l -= 2;\n  let rv = 0;\n  while (rv < l && !isV(w[rv])) ++rv;\n  if (rv < l) ++rv;\n  let r1 = rv;\n  if (l >= 5 && (w[0] === 103 && w[1] === 101 && w[2] === 110 && w[3] === 101 && w[4] === 114 || // gener\n  w[0] === 97 && w[1] === 114 && w[2] === 115 && w[3] === 101 && w[4] === 110))\n    r1 = 5;\n  else if (l >= 6 && w[0] === 99 && // c\n  w[1] === 111 && // o\n  w[2] === 109 && // m\n  w[3] === 109 && // m\n  w[4] === 117 && // u\n  w[5] === 110)\n    r1 = 6;\n  else {\n    while (r1 < l && isV(w[r1])) ++r1;\n    if (r1 < l) ++r1;\n  }\n  let r2 = r1;\n  while (r2 < l && !isV(w[r2])) ++r2;\n  while (r2 < l && isV(w[r2])) ++r2;\n  if (r2 < l) ++r2;\n  if (l >= 3) {\n    if (w[l - 1] === 115) {\n      if (l >= 4 && w[l - 2] === 101 && w[l - 3] === 115 && w[l - 4] === 115)\n        l -= 2;\n      else if (w[l - 2] === 101 && w[l - 3] === 105)\n        l -= l >= 5 ? 2 : 1;\n      else if (w[l - 2] !== 117 && w[l - 2] !== 115 && rv < l - 1)\n        l -= 1;\n    } else if (w[l - 1] === 100 && w[l - 2] === 101 && w[l - 3] === 105) l -= l >= 5 ? 2 : 1;\n  }\n  if (l === 6 && (w[0] === 105 && // i\n  w[1] === 110 && // n\n  w[2] === 110 && // n\n  w[3] === 105 && // i\n  w[4] === 110 && // n\n  w[5] === 103 || // g (inning)\n  w[0] === 111 && // o\n  w[1] === 117 && // u\n  w[2] === 116 && // t\n  w[3] === 105 && // i\n  w[4] === 110 && // n\n  w[5] === 103 || // g (outing)\n  w[0] === 101 && // e\n  w[1] === 120 && // x\n  w[2] === 99 && // c\n  w[3] === 101 && // e\n  w[4] === 101 && // e\n  w[5] === 100) || // d (exceed)\n  l === 7 && (w[0] === 99 && // c\n  w[1] === 97 && // a\n  w[2] === 110 && // n\n  w[3] === 110 && // n\n  w[4] === 105 && // i\n  w[5] === 110 && // n\n  w[6] === 103 || // g (canning)\n  w[0] === 104 && // h\n  w[1] === 101 && // e\n  w[2] === 114 && // r\n  w[3] === 114 && // r\n  w[4] === 105 && // i\n  w[5] === 110 && // n\n  w[6] === 103 || // g (herring)\n  w[0] === 101 && // e\n  w[1] === 97 && // a\n  w[2] === 114 && // r\n  w[3] === 114 && // r\n  w[4] === 105 && // i\n  w[5] === 110 && // n\n  w[6] === 103 || // g (earring)\n  w[0] === 112 && // p\n  w[1] === 114 && // r\n  w[2] === 111 && // o\n  w[3] === 99 && // c\n  w[4] === 101 && // e\n  w[5] === 101 && // e\n  w[6] === 100 || // d (proceed)\n  w[0] === 115 && // s\n  w[1] === 117 && // u\n  w[2] === 99 && // c\n  w[3] === 99 && // c\n  w[4] === 101 && // e\n  w[5] === 101 && // e\n  w[6] === 100)) {\n    let exp2Out = \"\";\n    for (let i = 0; i < l; ++i) exp2Out += String.fromCharCode(w[i]);\n    return exp2Out;\n  }\n  let ll = (\n    // l (length) without the -ly ending\n    l >= 2 && w[l - 1] === 121 && w[l - 2] === 108 ? l - 2 : l\n  );\n  if (ll >= 3) {\n    if (w[ll - 3] === 101 && w[ll - 2] === 101 && w[ll - 1] === 100) {\n      if (ll >= r1 + 3) l = ll - 1;\n    } else {\n      if (w[ll - 2] === 101 && w[ll - 1] === 100)\n        ll -= 2;\n      else if (w[ll - 3] === 105 && w[ll - 2] === 110 && w[ll - 1] === 103)\n        ll -= 3;\n      else ll = -1;\n      if (ll >= 0 && rv <= ll) {\n        l = ll;\n        if (l >= 2) {\n          if (w[l - 1] === 116 && w[l - 2] === 97 || // at\n          w[l - 1] === 108 && w[l - 2] === 98 || // bl\n          w[l - 1] === 122 && w[l - 2] === 105) {\n            w[l] = 101;\n            ++l;\n          } else if (w[l - 2] === w[l - 1] && isDouble(w[l - 1])) {\n            --l;\n          } else if (r1 >= l && isShortV(w, l)) {\n            w[l] = 101;\n            ++l;\n          }\n        }\n      }\n    }\n  }\n  if (l >= 3 && (w[l - 1] === 89 || w[l - 1] === 121) && !isV(w[l - 2])) w[l - 1] = 105;\n  if (l >= r1 + 2) {\n    switch (w[l - 1]) {\n      case 108:\n        if (l >= r1 + 6 && w[l - 2] === 97 && // a\n        w[l - 3] === 110 && // n\n        w[l - 4] === 111 && // o\n        w[l - 5] === 105 && // i\n        w[l - 6] === 116) {\n          if (l >= 7 && w[l - 7] === 97) {\n            if (l >= r1 + 7) {\n              l -= 4;\n              w[l - 1] = 101;\n            }\n          } else {\n            l -= 2;\n          }\n        }\n        break;\n      case 110:\n        if (l >= r1 + 5 && w[l - 2] === 111 && // o\n        w[l - 3] === 105 && // i\n        w[l - 4] === 116 && // t\n        w[l - 5] === 97) {\n          if (l >= 7 && w[l - 6] === 122 && w[l - 7] === 105) {\n            if (l >= r1 + 7) {\n              l -= 4;\n              w[l - 1] = 101;\n            }\n          } else {\n            l -= 2;\n            w[l - 1] = 101;\n          }\n        }\n        break;\n      case 114:\n        if (l >= r1 + 4) {\n          if (w[l - 2] === 101) {\n            if (w[l - 3] === 122 && w[l - 4] === 105) --l;\n          } else if (w[l - 2] === 111) {\n            if (w[l - 3] === 116 && w[l - 4] === 97) {\n              --l;\n              w[l - 1] = 101;\n            }\n          }\n        }\n        break;\n      case 115:\n        if (l >= r1 + 7 && w[l - 2] === 115 && // s\n        w[l - 3] === 101 && // e\n        w[l - 4] === 110 && // n (ness)\n        (w[l - 5] === 108 && w[l - 6] === 117 && w[l - 7] === 102 || // fulness\n        w[l - 5] === 115 && w[l - 6] === 117 && w[l - 7] === 111 || // ousness\n        w[l - 5] === 101 && w[l - 6] === 118 && w[l - 7] === 105)) {\n          l -= 4;\n        }\n        break;\n      case 109:\n        if (l >= r1 + 5 && w[l - 2] === 115 && // s\n        w[l - 3] === 105 && // i\n        w[l - 4] === 108 && // l\n        w[l - 5] === 97)\n          l -= 3;\n        break;\n      case 105:\n        if (w[l - 2] === 99) {\n          if (l >= r1 + 4 && (w[l - 4] === 101 || w[l - 4] === 97) && w[l - 3] === 110) {\n            w[l - 1] = 101;\n          }\n        } else if (w[l - 2] === 103) {\n          if (l >= r1 + 3 && l >= 4 && w[l - 2] === 103 && w[l - 3] === 111 && w[l - 4] === 108)\n            --l;\n        } else if (w[l - 2] === 116) {\n          if (l >= r1 + 5 && w[l - 3] === 105) {\n            if (w[l - 4] === 108) {\n              if (l >= 6 && w[l - 5] === 105 && w[l - 6] === 98) {\n                if (l >= r1 + 6) {\n                  l -= 3;\n                  w[l - 2] = 108;\n                  w[l - 1] = 101;\n                }\n              } else if (w[l - 4] === 108 && w[l - 5] === 97) {\n                l -= 3;\n              }\n            } else if (w[l - 4] === 118 && w[l - 5] === 105) {\n              l -= 2;\n              w[l - 1] = 101;\n            }\n          }\n        } else if (w[l - 2] === 108 && l >= 3) {\n          if (w[l - 3] === 98) {\n            if (l >= 4 && w[l - 4] === 97) {\n              if (l >= r1 + 4) w[l - 1] = 101;\n            } else if (l >= r1 + 3) {\n              w[l - 1] = 101;\n            }\n          } else {\n            if (w[l - 3] === 108) {\n              if (l >= 5 && w[l - 4] === 117 && w[l - 5] === 102) {\n                if (l >= r1 + 5) l -= 2;\n              } else if (l >= r1 + 4 && w[l - 4] === 97) {\n                l -= 2;\n              }\n            } else if (w[l - 3] === 115) {\n              if (l >= 6 && w[l - 4] === 115 && w[l - 5] === 101 && w[l - 6] === 108) {\n                if (l >= r1 + 6) l -= 2;\n              } else if (l >= r1 + 5 && w[l - 4] === 117 && w[l - 5] === 111) {\n                l -= 2;\n              }\n            } else if (l >= 5 && w[l - 3] === 116 && w[l - 4] === 110 && w[l - 5] === 101) {\n              if (l >= r1 + 5) l -= 2;\n            } else if (isValidLi(w[l - 3])) {\n              l -= 2;\n            }\n          }\n        }\n    }\n  }\n  if (l >= r1 + 3) {\n    switch (w[l - 1]) {\n      case 108:\n        if (w[l - 3] === 99) {\n          if (l >= r1 + 4 && w[l - 4] === 105 && w[l - 2] === 97) l -= 2;\n        } else if (w[l - 3] === 102) {\n          if (w[l - 2] === 117) l -= 3;\n        } else if (w[l - 3] === 110) {\n          if (l >= r1 + 6 && w[l - 2] === 97 && // a\n          w[l - 4] === 111 && // o\n          w[l - 5] === 105 && // i\n          w[l - 6] === 116) {\n            if (l >= 7 && w[l - 7] === 97) {\n              if (l >= r1 + 7) {\n                l -= 4;\n                w[l - 1] = 101;\n              }\n            } else {\n              l -= 2;\n            }\n          }\n        }\n        break;\n      case 101:\n        if (w[l - 2] === 122) {\n          if (l >= r1 + 5 && w[l - 3] === 105 && w[l - 4] === 108 && w[l - 5] === 97) l -= 3;\n        } else if (w[l - 2] === 116) {\n          if (l >= r1 + 5 && w[l - 3] === 97 && w[l - 4] === 99 && w[l - 5] === 105) l -= 3;\n        } else if (w[l - 2] === 118) {\n          if (l >= r2 + 5 && w[l - 3] === 105 && w[l - 4] === 116 && w[l - 5] === 97) l -= 5;\n        }\n        break;\n      case 105:\n        if (l >= r1 + 5 && w[l - 2] === 116 && // t\n        w[l - 3] === 105 && // i\n        w[l - 4] === 99 && // c\n        w[l - 5] === 105)\n          l -= 3;\n        break;\n      case 115:\n        if (l >= r1 + 4 && w[l - 2] === 115 && w[l - 3] === 101 && w[l - 4] === 110) l -= 4;\n    }\n  }\n  if (l >= r2 + 2) {\n    switch (w[l - 1]) {\n      case 110:\n        if (l >= r2 + 3 && w[l - 2] === 111 && // o\n        w[l - 3] === 105 && // i (ion)\n        (w[l - 4] === 115 || w[l - 4] === 116))\n          l -= 3;\n        break;\n      case 108:\n        if (w[l - 2] === 97) l -= 2;\n        break;\n      case 114:\n        if (w[l - 2] === 101) l -= 2;\n        break;\n      case 99:\n        if (w[l - 2] === 105) l -= 2;\n        break;\n      case 109:\n        if (l >= r2 + 3 && w[l - 2] === 115 && w[l - 3] === 105) l -= 3;\n        break;\n      case 105:\n        if (l >= r2 + 3 && w[l - 2] === 116 && w[l - 3] === 105) l -= 3;\n        break;\n      case 115:\n        if (l >= r2 + 3 && w[l - 2] === 117 && w[l - 3] === 111) l -= 3;\n        break;\n      case 116:\n        if (l >= r2 + 3 && w[l - 2] === 110) {\n          if (w[l - 3] === 97) {\n            l -= 3;\n          } else if (w[l - 3] === 101) {\n            if (l >= 4 && w[l - 4] === 109) {\n              if (l >= 5 && w[l - 5] === 101) {\n                if (l >= r2 + 5) l -= 5;\n              } else if (l >= r2 + 4) {\n                l -= 4;\n              }\n            } else {\n              l -= 3;\n            }\n          }\n        }\n        break;\n      case 101:\n        if (w[l - 2] === 99) {\n          if (l >= r2 + 4 && w[l - 3] === 110 && (w[l - 4] === 97 || w[l - 4] === 101)) l -= 4;\n        } else if (w[l - 2] === 108) {\n          if (l >= r2 + 4 && w[l - 3] === 98 && (w[l - 4] === 97 || w[l - 4] === 105)) l -= 4;\n        } else if (w[l - 2] === 116) {\n          if (l >= r2 + 3 && w[l - 3] === 97) l -= 3;\n        } else if (l >= r2 + 3 && (w[l - 2] === 118 || w[l - 2] === 122) && w[l - 3] === 105) {\n          l -= 3;\n        }\n    }\n  }\n  if (l >= r1 + 1 && // r1 is >= 1\n  (l >= r2 + 1 && w[l - 1] === 108 && w[l - 2] === 108 || // ll\n  w[l - 1] === 101 && (l >= r2 + 1 || !isShortV(w, l - 1))))\n    --l;\n  let out = \"\";\n  if (yFound) {\n    for (let i = 0; i < l; ++i) {\n      out += String.fromCharCode(w[i] === 89 ? 121 : w[i]);\n    }\n  } else {\n    for (let i = 0; i < l; ++i) out += String.fromCharCode(w[i]);\n  }\n  return out;\n};\nvar DEFAULT_OPTIONS = {\n  k1: 1.2,\n  b: 0.75,\n  minLength: 2,\n  stopWords: /* @__PURE__ */ new Set([\n    \"a\",\n    \"an\",\n    \"and\",\n    \"are\",\n    \"as\",\n    \"at\",\n    \"be\",\n    \"by\",\n    \"for\",\n    \"from\",\n    \"has\",\n    \"he\",\n    \"in\",\n    \"is\",\n    \"it\",\n    \"its\",\n    \"of\",\n    \"on\",\n    \"that\",\n    \"the\",\n    \"to\",\n    \"was\",\n    \"were\",\n    \"will\",\n    \"with\"\n  ]),\n  stemming: false,\n  stemWords: (word) => word\n};\nvar Tokenizer = class _Tokenizer {\n  static {\n    /** Default options for the Tokenizer. */\n    this.DEFAULT_OPTIONS = {\n      stopWords: /* @__PURE__ */ new Set(),\n      minLength: 2,\n      stemming: false,\n      stemmingRules: []\n    };\n  }\n  /**\n   * Creates a new tokenizer instance.\n   * @param options - Tokenization options including stop words, min length, stemming, and custom rules.\n   */\n  constructor(options2 = {}) {\n    const mergedOptions = { ..._Tokenizer.DEFAULT_OPTIONS, ...options2 };\n    this.stopWords = mergedOptions.stopWords;\n    this.minLength = mergedOptions.minLength;\n    this.stemming = mergedOptions.stemming;\n    this.stemmingRules = mergedOptions.stemmingRules.map((rule) => ({\n      ...rule,\n      pattern: typeof rule.pattern === \"string\" ? new RegExp(rule.pattern) : rule.pattern\n    }));\n  }\n  /**\n   * Tokenizes input text into an array of processed terms.\n   * Steps:\n   * 1. Cleans the text (lowercase, normalize, remove punctuation/symbols).\n   * 2. Splits the text into potential tokens.\n   * 3. Filters tokens based on `minLength` and `stopWords`.\n   * 4. Applies stemming if `stemming` is true (custom rules first, then Porter2).\n   * 5. Optionally calculates statistics.\n   *\n   * @param text - The input text string to tokenize.\n   * @param includeStats - If true, returns tokenization statistics along with tokens. Defaults to false.\n   * @returns A `TokenizationResult` object containing the array of tokens and optional stats.\n   * @throws {Error} If the input text is null, undefined, or empty.\n   */\n  tokenize(text, includeStats = false) {\n    if (!text) {\n      throw new Error(\"Input text cannot be null or empty\");\n    }\n    const startTime = Date.now();\n    const originalWords = text.split(/\\s+/).filter((word) => word.length > 0);\n    const cleaned = this.cleanText(text);\n    const tokens = cleaned.split(/\\s+/).filter((token) => this.isValidToken(token)).map((token) => this.stemming ? this.stemWord(token) : token);\n    const stats = includeStats ? {\n      originalWordCount: originalWords.length,\n      stopWordsRemoved: originalWords.length - tokens.length,\n      // This might be incorrect if stemming changes token count\n      stemmedWords: this.stemming ? tokens.length : 0,\n      processingTimeMs: Date.now() - startTime\n    } : {\n      originalWordCount: 0,\n      stopWordsRemoved: 0,\n      stemmedWords: 0,\n      processingTimeMs: 0\n    };\n    return { tokens, stats };\n  }\n  /**\n   * Cleans and normalizes text for tokenization.\n   * - Converts to lowercase.\n   * - Normalizes Unicode characters (NFKD).\n   * - Removes control characters and zero-width spaces.\n   * - Removes diacritical marks (accents).\n   * - Removes emojis and pictographs.\n   * - Removes common symbols (™, ®, ©, ℠, ‼).\n   * - Replaces Unicode punctuation with spaces.\n   * - Removes characters not matching basic Latin, CJK, Hangul, or whitespace.\n   * - Collapses multiple spaces into single spaces.\n   * - Trims leading/trailing whitespace.\n   *\n   * @param text - Input text to clean.\n   * @returns Cleaned and normalized text, ready for splitting into tokens.\n   *\n   * @example\n   * cleanText(\"Hello, World™!\") // \"hello world\"\n   * cleanText(\"héllo 👋\") // \"hello\"\n   * cleanText(\"Hello 世界!\") // \"hello 世界\"\n   * cleanText(\"I'm don't\") // \"i'm don't\" (apostrophes kept by replacing punctuation with space)\n   * cleanText(\"test©2023\") // \"test 2023\"\n   */\n  cleanText(text) {\n    return text.toLowerCase().normalize(\"NFKD\").replace(/[\\u0000-\\u001F\\u007F-\\u009F\\u200B-\\u200D\\uFEFF]/g, \"\").replace(/[\\u0300-\\u036f]/g, \"\").replace(/[\\p{Emoji_Presentation}\\p{Extended_Pictographic}]/gu, \"\").replace(/[™®©℠‼]/g, \"\").replace(/[\\p{P}]/gu, \" \").replace(/[^a-z0-9\\u3040-\\u30FF\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uAC00-\\uD7AF\\s]/gu, \" \").replace(/\\s+/g, \" \").trim();\n  }\n  /**\n   * Checks if a token is valid (meets `minLength` criteria and is not a stop word).\n   * Numeric tokens are always considered valid regardless of length.\n   * @param token - The token string to validate.\n   * @returns `true` if the token is valid, `false` otherwise.\n   */\n  isValidToken(token) {\n    const isNumeric = /^\\d+$/.test(token);\n    return (token.length >= this.minLength || isNumeric) && !this.stopWords.has(token);\n  }\n  /**\n   * Applies stemming to a single word.\n   * First, tries to apply custom stemming rules defined in `stemmingRules`.\n   * If no custom rule matches, applies the default Porter2 stemming algorithm.\n   * Words shorter than 3 characters are not stemmed.\n   * @param word - The word to stem.\n   * @returns The stemmed word.\n   */\n  stemWord(word) {\n    if (word.length < 3) return word;\n    let customRuleApplied = false;\n    let stemmed = word;\n    for (const rule of this.stemmingRules) {\n      const match = stemmed.match(rule.pattern);\n      if (match) {\n        if (!rule.minMeasure || this.measure(stemmed.substring(0, match.index)) >= rule.minMeasure) {\n          if (typeof rule.replacement === \"string\") {\n            stemmed = stemmed.replace(rule.pattern, rule.replacement);\n          } else {\n            stemmed = stemmed.replace(\n              rule.pattern,\n              (...args) => rule.replacement(...args)\n            );\n          }\n          customRuleApplied = true;\n        }\n      }\n    }\n    if (customRuleApplied && stemmed !== word) return stemmed;\n    return stem(stemmed);\n  }\n  /**\n   * Checks if the character at a given index in a word is a consonant.\n   * Treats 'y' as a consonant if it's the first letter or follows a consonant.\n   * @param word - The word string.\n   * @param i - The index of the character to check.\n   * @returns `true` if the character is a consonant, `false` otherwise.\n   */\n  isConsonant(word, i) {\n    const char = word[i];\n    if (\"aeiou\".includes(char)) return false;\n    return char !== \"y\" || (i === 0 ? true : !this.isConsonant(word, i - 1));\n  }\n  /**\n   * Calculates the \"measure\" of a word stem (approximates syllable count).\n   * The measure (m) is the number of times a sequence of vowels is followed by a\n   * sequence of consonants (VC). Used in some stemming rules.\n   * Example: measure(\"tree\") = 0, measure(\"trouble\") = 1, measure(\"private\") = 2\n   * @param word - The word (or stem) to measure.\n   * @returns The measure (m) of the word.\n   */\n  measure(word) {\n    let m = 0;\n    let vowelSeen = false;\n    for (let i = 0; i < word.length; i++) {\n      if (this.isConsonant(word, i)) {\n        if (vowelSeen) {\n          m++;\n          vowelSeen = false;\n        }\n      } else {\n        vowelSeen = true;\n      }\n    }\n    return m;\n  }\n};\nvar BM25 = class {\n  // Consider using a generic <T>\n  /**\n   * Creates a new BM25 search instance.\n   * @param docs - Optional array of initial documents (objects with string fields) to index.\n   * @param options - Configuration options for BM25 parameters (k1, b), tokenizer (stopWords, stemming, minLength), and field boosts.\n   */\n  constructor(docs, options2 = {}) {\n    const opts = { ...DEFAULT_OPTIONS, ...options2 };\n    this.termFrequencySaturation = opts.k1;\n    this.lengthNormalizationFactor = opts.b;\n    this.tokenizer = new Tokenizer(opts);\n    this.fieldBoosts = opts.fieldBoosts || {};\n    this.documents = [];\n    this.documentLengths = new Uint32Array(0);\n    this.termToIndex = /* @__PURE__ */ new Map();\n    this.documentFrequency = new Uint32Array(0);\n    this.averageDocLength = 0;\n    this.termFrequencies = /* @__PURE__ */ new Map();\n    if (docs && docs.length > 0) {\n      this.documents = [...docs];\n      const { documentLengths, termToIndex, documentFrequency, averageDocLength, termFrequencies } = this.processDocuments(docs);\n      this.documentLengths = documentLengths;\n      this.termToIndex = termToIndex;\n      this.documentFrequency = documentFrequency;\n      this.averageDocLength = averageDocLength;\n      this.termFrequencies = termFrequencies;\n    }\n  }\n  /**\n   * Processes an array of documents to build the initial index structures.\n   * Calculates document lengths, term frequencies, document frequencies, and average document length.\n   * @param docs - Array of documents to process.\n   * @returns An object containing the calculated index data.\n   * @internal\n   */\n  processDocuments(docs) {\n    const numDocs = docs.length;\n    const documentLengths = new Uint32Array(numDocs);\n    const termToIndex = /* @__PURE__ */ new Map();\n    const termDocs = /* @__PURE__ */ new Map();\n    const termFrequencies = /* @__PURE__ */ new Map();\n    let totalDocLength = 0;\n    let nextTermIndex = 0;\n    docs.forEach((doc, docIndex) => {\n      let currentDocLength = 0;\n      const docTermFrequencies = /* @__PURE__ */ new Map();\n      Object.entries(doc).forEach(([field, content]) => {\n        if (typeof content !== \"string\") return;\n        const fieldBoost = this.fieldBoosts[field] || 1;\n        const { tokens } = this.tokenizer.tokenize(content);\n        const fieldLength = tokens.length * fieldBoost;\n        currentDocLength += fieldLength;\n        tokens.forEach((term) => {\n          if (!termToIndex.has(term)) {\n            termToIndex.set(term, nextTermIndex++);\n          }\n          const termIndexVal = termToIndex.get(term);\n          if (!termDocs.has(term)) {\n            termDocs.set(term, /* @__PURE__ */ new Set());\n          }\n          termDocs.get(term).add(docIndex);\n          const currentFreq = docTermFrequencies.get(termIndexVal) || 0;\n          docTermFrequencies.set(termIndexVal, currentFreq + fieldBoost);\n        });\n      });\n      documentLengths[docIndex] = currentDocLength;\n      totalDocLength += currentDocLength;\n      docTermFrequencies.forEach((freq, termIndexVal) => {\n        if (!termFrequencies.has(termIndexVal)) {\n          termFrequencies.set(termIndexVal, /* @__PURE__ */ new Map());\n        }\n        termFrequencies.get(termIndexVal).set(docIndex, freq);\n      });\n    });\n    const documentFrequency = new Uint32Array(termToIndex.size);\n    termDocs.forEach((docsSet, term) => {\n      const termIndexVal = termToIndex.get(term);\n      documentFrequency[termIndexVal] = docsSet.size;\n    });\n    return {\n      documentLengths,\n      termToIndex,\n      documentFrequency,\n      averageDocLength: numDocs > 0 ? totalDocLength / numDocs : 0,\n      termFrequencies\n    };\n  }\n  /**\n   * Recalculates the average document length based on the current `documentLengths`.\n   * @internal\n   */\n  recalculateAverageLength() {\n    if (this.documentLengths.length === 0) {\n      this.averageDocLength = 0;\n      return;\n    }\n    const totalLength = Array.prototype.reduce.call(\n      this.documentLengths,\n      (sum, len) => sum + len,\n      0\n    );\n    this.averageDocLength = totalLength / this.documentLengths.length;\n  }\n  /**\n   * Searches the indexed documents for a given query string using the BM25 ranking formula.\n   *\n   * @param query - The search query text.\n   * @param topK - The maximum number of top-scoring results to return. Defaults to 10.\n   * @returns An array of `SearchResult` objects, sorted by descending BM25 score.\n   */\n  search(query, topK = 10) {\n    const { tokens: queryTokens } = this.tokenizer.tokenize(query);\n    const scores = new Float32Array(this.documentLengths.length).fill(0);\n    queryTokens.forEach((term) => {\n      const termIndex = this.termToIndex.get(term);\n      if (termIndex === void 0) return;\n      const idf = this.calculateIdf(termIndex);\n      if (idf <= 0) return;\n      const termFreqsInDocs = this.termFrequencies.get(termIndex);\n      if (!termFreqsInDocs) return;\n      termFreqsInDocs.forEach((tf, docIndex) => {\n        const docLength = this.documentLengths[docIndex];\n        const numerator = tf * (this.termFrequencySaturation + 1);\n        const denominator = tf + this.termFrequencySaturation * (1 - this.lengthNormalizationFactor + this.lengthNormalizationFactor * docLength / this.averageDocLength);\n        scores[docIndex] += idf * (numerator / denominator);\n      });\n    });\n    return Array.from({ length: scores.length }, (_, i) => ({\n      index: i,\n      score: scores[i]\n      // Optionally add: doc: this.getDocument(i) // If you want the full doc in results\n    })).filter((result) => result.score > 0).sort((a, b) => b.score - a.score).slice(0, topK);\n  }\n  /**\n   * Searches for an exact phrase within the indexed documents.\n   * Ranks documents containing the exact sequence of tokens higher.\n   * Note: This is a basic implementation. More sophisticated phrase search might consider proximity.\n   *\n   * @param phrase - The exact phrase to search for.\n   * @param topK - The maximum number of results to return. Defaults to 10.\n   * @returns An array of `SearchResult` objects, sorted by score, for documents containing the phrase.\n   */\n  searchPhrase(phrase, topK = 10) {\n    const { tokens: phraseTokens } = this.tokenizer.tokenize(phrase);\n    if (phraseTokens.length === 0) return [];\n    let candidateDocs = null;\n    for (const term of phraseTokens) {\n      const termIndex = this.termToIndex.get(term);\n      if (termIndex === void 0) return [];\n      const docsContainingTermIter = this.termFrequencies.get(termIndex)?.keys();\n      if (!docsContainingTermIter) return [];\n      const currentTermDocs = new Set(docsContainingTermIter);\n      if (candidateDocs === null) {\n        candidateDocs = currentTermDocs;\n      } else {\n        candidateDocs = new Set([...candidateDocs].filter((docIdx) => currentTermDocs.has(docIdx)));\n      }\n      if (candidateDocs.size === 0) return [];\n    }\n    if (candidateDocs === null || candidateDocs.size === 0) return [];\n    const scores = /* @__PURE__ */ new Map();\n    candidateDocs.forEach((docIndex) => {\n      const doc = this.getDocument(docIndex);\n      let phraseFoundInDoc = false;\n      Object.entries(doc).forEach(([field, content]) => {\n        if (typeof content !== \"string\" || phraseFoundInDoc) return;\n        const fieldBoost = this.fieldBoosts[field] || 1;\n        const { tokens: docTokens } = this.tokenizer.tokenize(content);\n        for (let i = 0; i <= docTokens.length - phraseTokens.length; i++) {\n          let match = true;\n          for (let j = 0; j < phraseTokens.length; j++) {\n            if (docTokens[i + j] !== phraseTokens[j]) {\n              match = false;\n              break;\n            }\n          }\n          if (match) {\n            const phraseScoreVal = this.calculatePhraseScore(phraseTokens, docIndex) * fieldBoost;\n            scores.set(docIndex, (scores.get(docIndex) || 0) + phraseScoreVal);\n            phraseFoundInDoc = true;\n            break;\n          }\n        }\n      });\n    });\n    return Array.from(scores.entries()).map(([index, score]) => ({ index, score })).sort((a, b) => b.score - a.score).slice(0, topK);\n  }\n  /**\n   * Calculates a BM25-like score for a sequence of phrase tokens within a specific document.\n   * Sums the individual BM25 scores of the terms in the phrase for that document.\n   * @param phraseTokens - The tokenized phrase.\n   * @param docIndex - The index of the document to score against.\n   * @returns The calculated phrase score for the document.\n   * @internal\n   */\n  calculatePhraseScore(phraseTokens, docIndex) {\n    return phraseTokens.reduce((currentScore, term) => {\n      const termIndex = this.termToIndex.get(term);\n      if (termIndex === void 0) return currentScore;\n      const idf = this.calculateIdf(termIndex);\n      const tf = this.termFrequencies.get(termIndex)?.get(docIndex) || 0;\n      const docLength = this.documentLengths[docIndex];\n      const numerator = tf * (this.termFrequencySaturation + 1);\n      const denominator = tf + this.termFrequencySaturation * (1 - this.lengthNormalizationFactor + this.lengthNormalizationFactor * docLength / this.averageDocLength);\n      return currentScore + idf * (numerator / denominator);\n    }, 0);\n  }\n  /**\n   * Adds a single new document to the index.\n   * Updates all internal index structures incrementally.\n   * Note: For adding many documents, `addDocumentsParallel` is generally more efficient.\n   *\n   * @param doc - The document object (with string fields) to add.\n   * @throws {Error} If the document is null or undefined.\n   */\n  async addDocument(doc) {\n    if (!doc) throw new Error(\"Document cannot be null\");\n    const docIndex = this.documentLengths.length;\n    this.documents.push(doc);\n    const newDocLengths = new Uint32Array(docIndex + 1);\n    newDocLengths.set(this.documentLengths, 0);\n    this.documentLengths = newDocLengths;\n    let currentDocLength = 0;\n    const docTermFrequencies = /* @__PURE__ */ new Map();\n    Object.entries(doc).forEach(([field, content]) => {\n      if (typeof content !== \"string\") return;\n      const fieldBoost = this.fieldBoosts[field] || 1;\n      const { tokens } = this.tokenizer.tokenize(content);\n      currentDocLength += tokens.length * fieldBoost;\n      tokens.forEach((term) => {\n        let termIndexVal;\n        if (!this.termToIndex.has(term)) {\n          termIndexVal = this.termToIndex.size;\n          this.termToIndex.set(term, termIndexVal);\n          if (this.documentFrequency.length <= termIndexVal) {\n            const oldDf = this.documentFrequency;\n            const newSize = Math.max(termIndexVal + 1, oldDf.length * 2 || 1);\n            this.documentFrequency = new Uint32Array(newSize);\n            this.documentFrequency.set(oldDf, 0);\n          }\n          this.documentFrequency[termIndexVal] = 0;\n        } else {\n          termIndexVal = this.termToIndex.get(term);\n        }\n        const currentFreq = docTermFrequencies.get(termIndexVal) || 0;\n        docTermFrequencies.set(termIndexVal, currentFreq + fieldBoost);\n      });\n    });\n    this.documentLengths[docIndex] = currentDocLength;\n    docTermFrequencies.forEach((freq, termIndexVal) => {\n      if (!this.termFrequencies.has(termIndexVal)) {\n        this.termFrequencies.set(termIndexVal, /* @__PURE__ */ new Map());\n      }\n      this.termFrequencies.get(termIndexVal).set(docIndex, freq);\n      if (termIndexVal < this.documentFrequency.length) {\n        this.documentFrequency[termIndexVal]++;\n      } else {\n        console.error(\n          `Error: termIndexVal ${termIndexVal} is out of bounds for documentFrequency (length ${this.documentFrequency.length}). This indicates an issue with array resizing or term indexing.`\n        );\n      }\n    });\n    this.recalculateAverageLength();\n  }\n  /**\n   * Calculates the Inverse Document Frequency (IDF) for a given term index.\n   * Uses the BM25 IDF formula: log(1 + (N - n + 0.5) / (n + 0.5))\n   * where N is the total number of documents and n is the number of documents\n   * containing the term. The +1 smooths the logarithm.\n   *\n   * @param termIndex - The integer index of the term.\n   * @returns The IDF score for the term. Returns 0 if the term is not found or has 0 DF.\n   */\n  calculateIdf(termIndex) {\n    if (termIndex < 0 || termIndex >= this.documentFrequency.length) {\n      return 0;\n    }\n    const docFreq = this.documentFrequency[termIndex];\n    if (docFreq <= 0 || docFreq > this.documentLengths.length) {\n      return 0;\n    }\n    const N = this.documentLengths.length;\n    const numerator = N - docFreq + 0.5;\n    const denominator = docFreq + 0.5;\n    return Math.log(1 + numerator / denominator);\n  }\n  /**\n   * Retrieves the term frequency (TF) for a specific term in a specific document.\n   * @param termIndex - The integer index of the term.\n   * @param docIndex - The index of the document.\n   * @returns The term frequency, or 0 if the term is not in the document or indices are invalid.\n   */\n  getTermFrequency(termIndex, docIndex) {\n    return this.termFrequencies.get(termIndex)?.get(docIndex) || 0;\n  }\n  /**\n   * Retrieves the original document object stored at a given index.\n   * @param index - The index of the document to retrieve.\n   * @returns The document object.\n   * @throws {Error} If the index is out of bounds.\n   */\n  getDocument(index) {\n    if (index < 0 || index >= this.documents.length) {\n      throw new Error(`Document index ${index} out of bounds (0-${this.documents.length - 1})`);\n    }\n    return this.documents[index];\n  }\n  /**\n   * Clears all indexed documents and resets the BM25 instance to its initial state.\n   */\n  clearDocuments() {\n    this.documents = [];\n    this.documentLengths = new Uint32Array(0);\n    this.termToIndex.clear();\n    this.documentFrequency = new Uint32Array(0);\n    this.averageDocLength = 0;\n    this.termFrequencies.clear();\n  }\n  /**\n   * Gets the total number of documents currently indexed.\n   * @returns The document count.\n   */\n  getDocumentCount() {\n    return this.documents.length;\n  }\n  /**\n   * Adds multiple documents sequentially by calling `addDocument` for each.\n   * This method processes documents sequentially in the main thread.\n   * @param docs - An array of documents to add.\n   */\n  async addDocuments(docs) {\n    return Promise.all(docs.map((doc) => this.addDocument(doc)));\n  }\n};\n\n// src/runtime.ts\nvar environmentSettings = {};\nvar Semaphore = class {\n  constructor(count) {\n    this.waiting = [];\n    this.permits = count;\n  }\n  async acquire() {\n    if (this.permits > 0) {\n      this.permits -= 1;\n      return Promise.resolve();\n    }\n    return new Promise((resolve) => {\n      this.waiting.push(resolve);\n    });\n  }\n  release() {\n    this.permits += 1;\n    const nextResolve = this.waiting.shift();\n    if (nextResolve && this.permits > 0) {\n      this.permits -= 1;\n      nextResolve();\n    }\n  }\n};\nvar AgentRuntime = class {\n  // Default value, can be overridden\n  constructor(opts) {\n    this.#conversationLength = 32;\n    this.actions = [];\n    this.evaluators = [];\n    this.providers = [];\n    this.plugins = [];\n    this.isInitialized = false;\n    this.events = /* @__PURE__ */ new Map();\n    this.stateCache = /* @__PURE__ */ new Map();\n    this.fetch = fetch;\n    this.services = /* @__PURE__ */ new Map();\n    this.serviceTypes = /* @__PURE__ */ new Map();\n    this.models = /* @__PURE__ */ new Map();\n    this.routes = [];\n    this.taskWorkers = /* @__PURE__ */ new Map();\n    this.sendHandlers = /* @__PURE__ */ new Map();\n    this.eventHandlers = /* @__PURE__ */ new Map();\n    // A map of all plugins available to the runtime, keyed by name, for dependency resolution.\n    this.allAvailablePlugins = /* @__PURE__ */ new Map();\n    // The initial list of plugins specified by the character configuration.\n    this.characterPlugins = [];\n    this.servicesInitQueue = /* @__PURE__ */ new Set();\n    this.maxWorkingMemoryEntries = 50;\n    this.agentId = opts.character?.id ?? opts?.agentId ?? stringToUuid(opts.character?.name ?? uuidv4() + opts.character?.username);\n    this.character = opts.character;\n    const logLevel = process.env.LOG_LEVEL || \"info\";\n    this.logger = createLogger({\n      agentName: this.character?.name,\n      logLevel\n    });\n    this.#conversationLength = opts.conversationLength ?? this.#conversationLength;\n    if (opts.adapter) {\n      this.registerDatabaseAdapter(opts.adapter);\n    }\n    this.fetch = opts.fetch ?? this.fetch;\n    this.settings = opts.settings ?? environmentSettings;\n    this.plugins = [];\n    this.characterPlugins = opts?.plugins ?? [];\n    if (opts.allAvailablePlugins) {\n      for (const plugin of opts.allAvailablePlugins) {\n        if (plugin?.name) {\n          this.allAvailablePlugins.set(plugin.name, plugin);\n        }\n      }\n    }\n    this.logger.debug(`Success: Agent ID: ${this.agentId}`);\n    this.currentRunId = void 0;\n    if (opts.settings?.MAX_WORKING_MEMORY_ENTRIES) {\n      this.maxWorkingMemoryEntries = parseInt(opts.settings.MAX_WORKING_MEMORY_ENTRIES, 10) || 50;\n    } else if (process.env.MAX_WORKING_MEMORY_ENTRIES) {\n      this.maxWorkingMemoryEntries = parseInt(process.env.MAX_WORKING_MEMORY_ENTRIES, 10) || 50;\n    }\n  }\n  #conversationLength;\n  /**\n   * Create a new run ID for tracking a sequence of model calls\n   */\n  createRunId() {\n    return uuidv4();\n  }\n  /**\n   * Start a new run for tracking prompts\n   */\n  startRun() {\n    this.currentRunId = this.createRunId();\n    return this.currentRunId;\n  }\n  /**\n   * End the current run\n   */\n  endRun() {\n    this.currentRunId = void 0;\n  }\n  /**\n   * Get the current run ID (creates one if it doesn't exist)\n   */\n  getCurrentRunId() {\n    if (!this.currentRunId) {\n      this.currentRunId = this.createRunId();\n    }\n    return this.currentRunId;\n  }\n  async registerPlugin(plugin) {\n    if (!plugin?.name) {\n      const errorMsg = \"Plugin or plugin name is undefined\";\n      this.logger.error(`*** registerPlugin: ${errorMsg}`);\n      throw new Error(`*** registerPlugin: ${errorMsg}`);\n    }\n    const existingPlugin = this.plugins.find((p) => p.name === plugin.name);\n    if (existingPlugin) {\n      this.logger.warn(\n        `${this.character.name}(${this.agentId}) - Plugin ${plugin.name} is already registered. Skipping re-registration.`\n      );\n      return;\n    }\n    this.plugins.push(plugin);\n    this.logger.debug(\n      `Success: Plugin ${plugin.name} added to active plugins for ${this.character.name}(${this.agentId}).`\n    );\n    if (plugin.init) {\n      try {\n        await plugin.init(plugin.config || {}, this);\n        this.logger.debug(`Success: Plugin ${plugin.name} initialized successfully`);\n      } catch (error) {\n        const errorMessage = error instanceof Error ? error.message : String(error);\n        if (errorMessage.includes(\"API key\") || errorMessage.includes(\"environment variables\") || errorMessage.includes(\"Invalid plugin configuration\")) {\n          console.warn(`Plugin ${plugin.name} requires configuration. ${errorMessage}`);\n          console.warn(\n            \"Please check your environment variables and ensure all required API keys are set.\"\n          );\n          console.warn(\"You can set these in your .env file.\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    if (plugin.adapter) {\n      this.logger.debug(`Registering database adapter for plugin ${plugin.name}`);\n      this.registerDatabaseAdapter(plugin.adapter);\n    }\n    if (plugin.actions) {\n      for (const action of plugin.actions) {\n        this.registerAction(action);\n      }\n    }\n    if (plugin.evaluators) {\n      for (const evaluator of plugin.evaluators) {\n        this.registerEvaluator(evaluator);\n      }\n    }\n    if (plugin.providers) {\n      for (const provider of plugin.providers) {\n        this.registerProvider(provider);\n      }\n    }\n    if (plugin.models) {\n      for (const [modelType, handler] of Object.entries(plugin.models)) {\n        this.registerModel(\n          modelType,\n          handler,\n          plugin.name,\n          plugin?.priority\n        );\n      }\n    }\n    if (plugin.routes) {\n      for (const route of plugin.routes) {\n        this.routes.push(route);\n      }\n    }\n    if (plugin.events) {\n      for (const [eventName, eventHandlers] of Object.entries(plugin.events)) {\n        for (const eventHandler of eventHandlers) {\n          this.registerEvent(eventName, eventHandler);\n        }\n      }\n    }\n    if (plugin.services) {\n      for (const service of plugin.services) {\n        if (this.isInitialized) {\n          await this.registerService(service);\n        } else {\n          this.servicesInitQueue.add(service);\n        }\n      }\n    }\n  }\n  getAllServices() {\n    return this.services;\n  }\n  async stop() {\n    this.logger.debug(`runtime::stop - character ${this.character.name}`);\n    for (const [serviceName, services] of this.services) {\n      this.logger.debug(`runtime::stop - requesting service stop for ${serviceName}`);\n      for (const service of services) {\n        await service.stop();\n      }\n    }\n  }\n  async initialize() {\n    if (this.isInitialized) {\n      this.logger.warn(\"Agent already initialized\");\n      return;\n    }\n    const pluginRegistrationPromises = [];\n    const pluginsToLoad = this.characterPlugins;\n    for (const plugin of pluginsToLoad) {\n      if (plugin) {\n        pluginRegistrationPromises.push(this.registerPlugin(plugin));\n      }\n    }\n    await Promise.all(pluginRegistrationPromises);\n    if (!this.adapter) {\n      this.logger.error(\n        \"Database adapter not initialized. Make sure @elizaos/plugin-sql is included in your plugins.\"\n      );\n      throw new Error(\n        \"Database adapter not initialized. The SQL plugin (@elizaos/plugin-sql) is required for agent initialization. Please ensure it is included in your character configuration.\"\n      );\n    }\n    try {\n      await this.adapter.init();\n      this.logger.info(\"Running plugin migrations...\");\n      await this.runPluginMigrations();\n      this.logger.info(\"Plugin migrations completed.\");\n      const existingAgent = await this.ensureAgentExists(this.character);\n      if (!existingAgent) {\n        const errorMsg = `Agent ${this.character.name} does not exist in database after ensureAgentExists call`;\n        throw new Error(errorMsg);\n      }\n      let agentEntity = await this.getEntityById(this.agentId);\n      if (!agentEntity) {\n        const created = await this.createEntity({\n          id: this.agentId,\n          names: [this.character.name],\n          metadata: {},\n          agentId: existingAgent.id\n        });\n        if (!created) {\n          const errorMsg = `Failed to create entity for agent ${this.agentId}`;\n          throw new Error(errorMsg);\n        }\n        agentEntity = await this.getEntityById(this.agentId);\n        if (!agentEntity) throw new Error(`Agent entity not found for ${this.agentId}`);\n        this.logger.debug(`Success: Agent entity created successfully for ${this.character.name}`);\n      }\n    } catch (error) {\n      const errorMsg = error instanceof Error ? error.message : String(error);\n      this.logger.error(`Failed to create agent entity: ${errorMsg}`);\n      throw error;\n    }\n    try {\n      const room = await this.getRoom(this.agentId);\n      if (!room) {\n        await this.createRoom({\n          id: this.agentId,\n          name: this.character.name,\n          source: \"elizaos\",\n          type: \"SELF\" /* SELF */,\n          channelId: this.agentId,\n          serverId: this.agentId,\n          worldId: this.agentId\n        });\n      }\n      const participants = await this.adapter.getParticipantsForRoom(this.agentId);\n      if (!participants.includes(this.agentId)) {\n        const added = await this.addParticipant(this.agentId, this.agentId);\n        if (!added) {\n          const errorMsg = `Failed to add agent ${this.agentId} as participant to its own room`;\n          throw new Error(errorMsg);\n        }\n        this.logger.debug(`Agent ${this.character.name} linked to its own room successfully`);\n      }\n    } catch (error) {\n      const errorMsg = error instanceof Error ? error.message : String(error);\n      this.logger.error(`Failed to add agent as participant: ${errorMsg}`);\n      throw error;\n    }\n    const embeddingModel = this.getModel(ModelType.TEXT_EMBEDDING);\n    if (!embeddingModel) {\n      this.logger.warn(\n        `[AgentRuntime][${this.character.name}] No TEXT_EMBEDDING model registered. Skipping embedding dimension setup.`\n      );\n    } else {\n      await this.ensureEmbeddingDimension();\n    }\n    for (const service of this.servicesInitQueue) {\n      await this.registerService(service);\n    }\n    this.isInitialized = true;\n  }\n  async runPluginMigrations() {\n    const drizzle = this.adapter?.db;\n    if (!drizzle) {\n      this.logger.warn(\"Drizzle instance not found on adapter, skipping plugin migrations.\");\n      return;\n    }\n    const pluginsWithSchemas = this.plugins.filter((p) => p.schema);\n    this.logger.info(`Found ${pluginsWithSchemas.length} plugins with schemas to migrate.`);\n    for (const p of pluginsWithSchemas) {\n      if (p.schema) {\n        this.logger.info(`Running migrations for plugin: ${p.name}`);\n        try {\n          if (this.adapter && \"runMigrations\" in this.adapter) {\n            await this.adapter.runMigrations(p.schema, p.name);\n            this.logger.info(`Successfully migrated plugin: ${p.name}`);\n          }\n        } catch (error) {\n          this.logger.error(`Failed to migrate plugin ${p.name}:`, error);\n        }\n      }\n    }\n  }\n  async getConnection() {\n    if (!this.adapter) {\n      throw new Error(\"Database adapter not registered\");\n    }\n    return this.adapter.getConnection();\n  }\n  setSetting(key, value, secret = false) {\n    if (secret) {\n      if (!this.character.secrets) {\n        this.character.secrets = {};\n      }\n      this.character.secrets[key] = value;\n    } else {\n      if (!this.character.settings) {\n        this.character.settings = {};\n      }\n      this.character.settings[key] = value;\n    }\n  }\n  getSetting(key) {\n    const value = this.character.secrets?.[key] || this.character.settings?.[key] || this.character.settings?.secrets?.[key] || this.settings[key];\n    const decryptedValue = decryptStringValue(value, getSalt());\n    if (decryptedValue === \"true\") return true;\n    if (decryptedValue === \"false\") return false;\n    return decryptedValue || null;\n  }\n  getConversationLength() {\n    return this.#conversationLength;\n  }\n  registerDatabaseAdapter(adapter) {\n    if (this.adapter) {\n      this.logger.warn(\n        \"Database adapter already registered. Additional adapters will be ignored. This may lead to unexpected behavior.\"\n      );\n    } else {\n      this.adapter = adapter;\n      this.logger.debug(\"Success: Database adapter registered successfully.\");\n    }\n  }\n  registerProvider(provider) {\n    this.providers.push(provider);\n    this.logger.debug(`Success: Provider ${provider.name} registered successfully.`);\n  }\n  registerAction(action) {\n    this.logger.debug(\n      `${this.character.name}(${this.agentId}) - Registering action: ${action.name}`\n    );\n    if (this.actions.find((a) => a.name === action.name)) {\n      this.logger.warn(\n        `${this.character.name}(${this.agentId}) - Action ${action.name} already exists. Skipping registration.`\n      );\n    } else {\n      this.actions.push(action);\n      this.logger.debug(\n        `${this.character.name}(${this.agentId}) - Action ${action.name} registered successfully.`\n      );\n    }\n  }\n  registerEvaluator(evaluator) {\n    this.evaluators.push(evaluator);\n  }\n  // Helper functions for immutable action plan updates\n  updateActionPlan(plan, updates) {\n    return { ...plan, ...updates };\n  }\n  updateActionStep(plan, index, stepUpdates) {\n    if (!plan.steps || index < 0 || index >= plan.steps.length) {\n      this.logger.warn(\n        `Invalid step index: ${index} for plan with ${plan.steps?.length || 0} steps`\n      );\n      return plan;\n    }\n    return {\n      ...plan,\n      steps: plan.steps.map(\n        (step, i) => i === index ? { ...step, ...stepUpdates } : step\n      )\n    };\n  }\n  async processActions(message, responses, state, callback) {\n    const allActions = [];\n    for (const response of responses) {\n      if (response.content?.actions && response.content.actions.length > 0) {\n        allActions.push(...response.content.actions);\n      }\n    }\n    const hasMultipleActions = allActions.length > 1;\n    const runId = this.createRunId();\n    let actionPlan = null;\n    if (hasMultipleActions) {\n      const thought = responses[0]?.content?.thought || `Executing ${allActions.length} actions: ${allActions.join(\", \")}`;\n      actionPlan = {\n        runId,\n        totalSteps: allActions.length,\n        currentStep: 0,\n        steps: allActions.map((action) => ({\n          action,\n          status: \"pending\"\n        })),\n        thought,\n        startTime: Date.now()\n      };\n    }\n    let actionIndex = 0;\n    for (const response of responses) {\n      let normalizeAction = function(actionString) {\n        return actionString.toLowerCase().replace(/_/g, \"\");\n      };\n      if (!response.content?.actions || response.content.actions.length === 0) {\n        this.logger.warn(\"No action found in the response content.\");\n        continue;\n      }\n      const actions = response.content.actions;\n      const actionResults = [];\n      let accumulatedState = state;\n      this.logger.debug(`Found actions: ${this.actions.map((a) => normalizeAction(a.name))}`);\n      for (const responseAction of actions) {\n        if (actionPlan) {\n          actionPlan = this.updateActionPlan(actionPlan, { currentStep: actionIndex + 1 });\n        }\n        accumulatedState = await this.composeState(message, [\n          \"RECENT_MESSAGES\",\n          \"ACTION_STATE\"\n          // This will include the action plan\n        ]);\n        if (actionPlan && accumulatedState.data) {\n          accumulatedState.data.actionPlan = actionPlan;\n          accumulatedState.data.actionResults = actionResults;\n        }\n        this.logger.debug(`Success: Calling action: ${responseAction}`);\n        const normalizedResponseAction = normalizeAction(responseAction);\n        let action = this.actions.find(\n          (a) => normalizeAction(a.name) === normalizedResponseAction\n        );\n        if (!action) {\n          action = this.actions.find(\n            (a) => normalizeAction(a.name).includes(normalizedResponseAction) || normalizedResponseAction.includes(normalizeAction(a.name))\n          );\n        }\n        if (action) {\n          this.logger.debug(`Success: Found action: ${action?.name}`);\n        } else {\n          this.logger.debug(\"Attempting to find action in similes.\");\n          for (const _action of this.actions) {\n            const exactSimileMatch = _action.similes?.find(\n              (simile) => normalizeAction(simile) === normalizedResponseAction\n            );\n            if (exactSimileMatch) {\n              action = _action;\n              this.logger.debug(`Success: Action found in similes (exact match): ${action.name}`);\n              break;\n            }\n            const fuzzySimileMatch = _action.similes?.find(\n              (simile) => normalizeAction(simile).includes(normalizedResponseAction) || normalizedResponseAction.includes(normalizeAction(simile))\n            );\n            if (fuzzySimileMatch) {\n              action = _action;\n              this.logger.debug(`Success: Action found in similes (fuzzy match): ${action.name}`);\n              break;\n            }\n          }\n        }\n        if (!action) {\n          const errorMsg = `No action found for: ${responseAction}`;\n          this.logger.error(errorMsg);\n          if (actionPlan && actionPlan.steps[actionIndex]) {\n            actionPlan = this.updateActionStep(actionPlan, actionIndex, {\n              status: \"failed\",\n              error: errorMsg\n            });\n          }\n          const actionMemory = {\n            id: uuidv4(),\n            entityId: message.entityId,\n            roomId: message.roomId,\n            worldId: message.worldId,\n            content: {\n              thought: errorMsg,\n              source: \"auto\",\n              type: \"action_result\",\n              actionName: responseAction,\n              actionStatus: \"failed\",\n              runId\n            }\n          };\n          await this.createMemory(actionMemory, \"messages\");\n          actionIndex++;\n          continue;\n        }\n        if (!action.handler) {\n          this.logger.error(`Action ${action.name} has no handler.`);\n          if (actionPlan && actionPlan.steps[actionIndex]) {\n            actionPlan = this.updateActionStep(actionPlan, actionIndex, {\n              status: \"failed\",\n              error: \"No handler\"\n            });\n          }\n          actionIndex++;\n          continue;\n        }\n        try {\n          this.logger.debug(`Executing handler for action: ${action.name}`);\n          const actionId = uuidv4();\n          this.currentActionContext = {\n            actionName: action.name,\n            actionId,\n            prompts: []\n          };\n          const actionContext = {\n            previousResults: actionResults,\n            getPreviousResult: (actionName) => {\n              return actionResults.find((r) => r.data?.actionName === actionName);\n            }\n          };\n          const options2 = {\n            context: actionContext\n          };\n          if (actionPlan) {\n            options2.actionPlan = {\n              totalSteps: actionPlan.totalSteps,\n              currentStep: actionPlan.currentStep,\n              steps: actionPlan.steps,\n              thought: actionPlan.thought\n            };\n          }\n          const result = await action.handler(\n            this,\n            message,\n            accumulatedState,\n            options2,\n            callback,\n            responses\n          );\n          const isLegacyReturn = result === void 0 || result === null || typeof result === \"boolean\";\n          let actionResult = null;\n          if (!isLegacyReturn) {\n            if (typeof result === \"object\" && result !== null && (\"values\" in result || \"data\" in result || \"text\" in result)) {\n              actionResult = {\n                success: true,\n                // Default to true if not specified\n                ...result\n              };\n            } else {\n              actionResult = {\n                success: true,\n                // Default success for legacy results\n                data: {\n                  actionName: action.name,\n                  legacyResult: result\n                }\n              };\n            }\n            actionResults.push(actionResult);\n            if (actionResult.values) {\n              accumulatedState = {\n                ...accumulatedState,\n                values: { ...accumulatedState.values, ...actionResult.values },\n                data: {\n                  ...accumulatedState.data || {},\n                  actionResults: [...accumulatedState.data?.actionResults || [], actionResult],\n                  actionPlan\n                }\n              };\n            }\n            if (actionResult && accumulatedState.data) {\n              if (!accumulatedState.data.workingMemory) accumulatedState.data.workingMemory = {};\n              const memoryKey = `action_${responseAction}_${uuidv4()}`;\n              const memoryEntry = {\n                actionName: action.name,\n                result: actionResult,\n                timestamp: Date.now()\n              };\n              accumulatedState.data.workingMemory[memoryKey] = memoryEntry;\n              const entries = Object.entries(accumulatedState.data.workingMemory);\n              if (entries.length > this.maxWorkingMemoryEntries) {\n                const sorted = entries.sort((a, b) => {\n                  const entryA = a[1];\n                  const entryB = b[1];\n                  const timestampA = entryA?.timestamp ?? 0;\n                  const timestampB = entryB?.timestamp ?? 0;\n                  return timestampB - timestampA;\n                });\n                accumulatedState.data.workingMemory = Object.fromEntries(\n                  sorted.slice(0, this.maxWorkingMemoryEntries)\n                );\n              }\n            }\n            if (actionPlan && actionPlan.steps[actionIndex]) {\n              actionPlan = this.updateActionStep(actionPlan, actionIndex, {\n                status: \"completed\",\n                result: actionResult\n              });\n            }\n          }\n          const actionMemory = {\n            id: actionId,\n            entityId: this.agentId,\n            roomId: message.roomId,\n            worldId: message.worldId,\n            content: {\n              text: actionResult?.text || `Executed action: ${action.name}`,\n              source: \"action\",\n              type: \"action_result\",\n              actionName: action.name,\n              actionStatus: actionResult?.success ? \"completed\" : \"failed\",\n              actionResult: isLegacyReturn ? { legacy: result } : actionResult,\n              runId,\n              ...actionPlan && {\n                planStep: `${actionPlan.currentStep}/${actionPlan.totalSteps}`,\n                planThought: actionPlan.thought\n              }\n            },\n            metadata: {\n              type: \"action_result\",\n              actionName: action.name,\n              runId,\n              actionId,\n              ...actionPlan && {\n                totalSteps: actionPlan.totalSteps,\n                currentStep: actionPlan.currentStep\n              }\n            }\n          };\n          await this.createMemory(actionMemory, \"messages\");\n          this.logger.debug(`Action ${action.name} completed`, {\n            isLegacyReturn,\n            result: isLegacyReturn ? result : void 0,\n            hasValues: actionResult ? !!actionResult.values : false,\n            hasData: actionResult ? !!actionResult.data : false,\n            hasText: actionResult ? !!actionResult.text : false\n          });\n          await this.adapter.log({\n            entityId: message.entityId,\n            roomId: message.roomId,\n            type: \"action\",\n            body: {\n              action: action.name,\n              actionId,\n              message: message.content.text,\n              messageId: message.id,\n              state: accumulatedState,\n              responses,\n              result: isLegacyReturn ? { legacy: result } : actionResult,\n              isLegacyReturn,\n              prompts: this.currentActionContext?.prompts || [],\n              promptCount: this.currentActionContext?.prompts.length || 0,\n              runId,\n              ...actionPlan && {\n                planStep: `${actionPlan.currentStep}/${actionPlan.totalSteps}`,\n                planThought: actionPlan.thought\n              }\n            }\n          });\n          this.currentActionContext = void 0;\n        } catch (error) {\n          const errorMessage = error instanceof Error ? error.message : String(error);\n          this.logger.error(error);\n          if (actionPlan && actionPlan.steps[actionIndex]) {\n            actionPlan = this.updateActionStep(actionPlan, actionIndex, {\n              status: \"failed\",\n              error: errorMessage\n            });\n          }\n          this.currentActionContext = void 0;\n          const errorResult = {\n            success: false,\n            // Required field\n            data: {\n              actionName: action.name,\n              error: errorMessage,\n              errorObject: error\n            }\n          };\n          actionResults.push(errorResult);\n          const actionMemory = {\n            id: uuidv4(),\n            content: {\n              thought: errorMessage,\n              source: \"auto\",\n              type: \"action_result\",\n              actionName: action.name,\n              actionStatus: \"failed\",\n              error: errorMessage,\n              runId,\n              ...actionPlan && {\n                planStep: `${actionPlan.currentStep}/${actionPlan.totalSteps}`,\n                planThought: actionPlan.thought\n              }\n            },\n            entityId: this.agentId,\n            roomId: message.roomId,\n            worldId: message.worldId,\n            metadata: {\n              type: \"action_result\",\n              actionName: action.name,\n              runId,\n              error: true,\n              ...actionPlan && {\n                totalSteps: actionPlan.totalSteps,\n                currentStep: actionPlan.currentStep\n              }\n            }\n          };\n          await this.createMemory(actionMemory, \"messages\");\n          if (error?.critical || error?.code === \"CRITICAL_ERROR\") {\n            throw error;\n          }\n        }\n        actionIndex++;\n      }\n      if (message.id) {\n        this.stateCache.set(`${message.id}_action_results`, {\n          values: { actionResults },\n          data: { actionResults, actionPlan },\n          text: JSON.stringify(actionResults)\n        });\n      }\n    }\n  }\n  async evaluate(message, state, didRespond, callback, responses) {\n    const evaluatorPromises = this.evaluators.map(async (evaluator) => {\n      if (!evaluator.handler) {\n        return null;\n      }\n      if (!didRespond && !evaluator.alwaysRun) {\n        return null;\n      }\n      const result = await evaluator.validate(this, message, state);\n      if (result) {\n        return evaluator;\n      }\n      return null;\n    });\n    const evaluators = (await Promise.all(evaluatorPromises)).filter(Boolean);\n    if (evaluators.length === 0) {\n      return [];\n    }\n    state = await this.composeState(message, [\"RECENT_MESSAGES\", \"EVALUATORS\"]);\n    await Promise.all(\n      evaluators.map(async (evaluator) => {\n        if (evaluator.handler) {\n          await evaluator.handler(this, message, state, {}, callback, responses);\n          this.adapter.log({\n            entityId: message.entityId,\n            roomId: message.roomId,\n            type: \"evaluator\",\n            body: {\n              evaluator: evaluator.name,\n              messageId: message.id,\n              message: message.content.text,\n              state\n            }\n          });\n        }\n      })\n    );\n    return evaluators;\n  }\n  // highly SQL optimized queries\n  async ensureConnections(entities, rooms, source, world) {\n    if (!entities) {\n      console.trace();\n      this.logger.error(\"ensureConnections - no entities\");\n      return;\n    }\n    if (!rooms || rooms.length === 0) {\n      console.trace();\n      this.logger.error(\"ensureConnections - no rooms\");\n      return;\n    }\n    await this.ensureWorldExists({ ...world, agentId: this.agentId });\n    const firstRoom = rooms[0];\n    const chunkArray = (arr, size) => arr.reduce((chunks, item, i) => {\n      if (i % size === 0) chunks.push([]);\n      chunks[chunks.length - 1].push(item);\n      return chunks;\n    }, []);\n    const roomIds = rooms.map((r2) => r2.id);\n    const roomExistsCheck = await this.getRoomsByIds(roomIds);\n    const roomsIdExists = roomExistsCheck.map((r2) => r2.id);\n    const roomsToCreate = roomIds.filter((id) => !roomsIdExists.includes(id));\n    const rf = {\n      worldId: world.id,\n      serverId: world.serverId,\n      source,\n      agentId: this.agentId\n    };\n    if (roomsToCreate.length) {\n      this.logger.debug(\n        \"runtime/ensureConnections - create\",\n        roomsToCreate.length.toLocaleString(),\n        \"rooms\"\n      );\n      const roomObjsToCreate = rooms.filter((r2) => roomsToCreate.includes(r2.id)).map((r2) => ({ ...r2, ...rf }));\n      await this.createRooms(roomObjsToCreate);\n    }\n    const entityIds = entities.map((e) => e.id);\n    const entityExistsCheck = await this.adapter.getEntitiesByIds(entityIds);\n    const entitiesToUpdate = entityExistsCheck.map((e) => e.id);\n    const entitiesToCreate = entities.filter((e) => !entitiesToUpdate.includes(e.id));\n    const r = {\n      roomId: firstRoom.id,\n      channelId: firstRoom.channelId,\n      type: firstRoom.type\n    };\n    const wf = {\n      worldId: world.id,\n      serverId: world.serverId\n    };\n    if (entitiesToCreate.length) {\n      this.logger.debug(\n        \"runtime/ensureConnections - creating\",\n        entitiesToCreate.length.toLocaleString(),\n        \"entities...\"\n      );\n      const ef = {\n        ...r,\n        ...wf,\n        source,\n        agentId: this.agentId\n      };\n      const entitiesToCreateWFields = entitiesToCreate.map((e) => ({ ...e, ...ef }));\n      const batches = chunkArray(entitiesToCreateWFields, 5e3);\n      for (const batch of batches) {\n        await this.createEntities(batch);\n      }\n    }\n    await this.ensureParticipantInRoom(this.agentId, firstRoom.id);\n    const entityIdsInFirstRoom = await this.getParticipantsForRoom(firstRoom.id);\n    const entityIdsInFirstRoomFiltered = entityIdsInFirstRoom.filter(Boolean);\n    const missingIdsInRoom = entityIds.filter((id) => !entityIdsInFirstRoomFiltered.includes(id));\n    if (missingIdsInRoom.length) {\n      this.logger.debug(\n        \"runtime/ensureConnections - Missing\",\n        missingIdsInRoom.length.toLocaleString(),\n        \"connections in\",\n        firstRoom.id\n      );\n      await this.addParticipantsRoom(missingIdsInRoom, firstRoom.id);\n    }\n    this.logger.success(`Success: Successfully connected world`);\n  }\n  async ensureConnection({\n    entityId,\n    roomId,\n    worldId,\n    worldName,\n    userName,\n    name,\n    source,\n    type,\n    channelId,\n    serverId,\n    userId,\n    metadata\n  }) {\n    if (!worldId && serverId) {\n      worldId = createUniqueUuid(this.agentId + serverId, serverId);\n    }\n    const names3 = [name, userName].filter(Boolean);\n    const entityMetadata = {\n      [source]: {\n        id: userId,\n        name,\n        userName\n      }\n    };\n    try {\n      const entity = await this.getEntityById(entityId);\n      if (!entity) {\n        try {\n          const success = await this.createEntity({\n            id: entityId,\n            names: names3,\n            metadata: entityMetadata,\n            agentId: this.agentId\n          });\n          if (success) {\n            this.logger.debug(\n              `Created new entity ${entityId} for user ${name || userName || \"unknown\"}`\n            );\n          } else {\n            throw new Error(`Failed to create entity ${entityId}`);\n          }\n        } catch (error) {\n          if (error.message?.includes(\"duplicate key\") || error.code === \"23505\") {\n            this.logger.debug(\n              `Entity ${entityId} exists in database but not for this agent. This is normal in multi-agent setups.`\n            );\n          } else {\n            throw error;\n          }\n        }\n      } else {\n        await this.adapter.updateEntity({\n          id: entityId,\n          names: [.../* @__PURE__ */ new Set([...entity.names || [], ...names3])].filter(Boolean),\n          metadata: {\n            ...entity.metadata,\n            [source]: {\n              ...entity.metadata?.[source],\n              id: userId,\n              name,\n              userName\n            }\n          },\n          agentId: this.agentId\n        });\n      }\n      await this.ensureWorldExists({\n        id: worldId,\n        name: worldName || serverId ? `World for server ${serverId}` : `World for room ${roomId}`,\n        agentId: this.agentId,\n        serverId: serverId || \"default\",\n        metadata\n      });\n      await this.ensureRoomExists({\n        id: roomId,\n        name,\n        source,\n        type,\n        channelId,\n        serverId,\n        worldId\n      });\n      try {\n        await this.ensureParticipantInRoom(entityId, roomId);\n      } catch (error) {\n        if (error.message?.includes(\"not found\")) {\n          const added = await this.addParticipant(entityId, roomId);\n          if (!added) {\n            throw new Error(`Failed to add participant ${entityId} to room ${roomId}`);\n          }\n          this.logger.debug(`Added participant ${entityId} to room ${roomId} directly`);\n        } else {\n          throw error;\n        }\n      }\n      await this.ensureParticipantInRoom(this.agentId, roomId);\n      this.logger.debug(`Success: Successfully connected entity ${entityId} in room ${roomId}`);\n    } catch (error) {\n      this.logger.error(\n        `Failed to ensure connection: ${error instanceof Error ? error.message : String(error)}`\n      );\n      throw error;\n    }\n  }\n  async ensureParticipantInRoom(entityId, roomId) {\n    const entity = await this.getEntityById(entityId);\n    if (!entity && entityId !== this.agentId) {\n      this.logger.warn(\n        `Entity ${entityId} not directly accessible to agent ${this.agentId}. Will attempt to add as participant anyway.`\n      );\n    } else if (!entity && entityId === this.agentId) {\n      throw new Error(`Agent entity ${entityId} not found, cannot add as participant.`);\n    } else if (!entity) {\n      throw new Error(`User entity ${entityId} not found, cannot add as participant.`);\n    }\n    const participants = await this.adapter.getParticipantsForRoom(roomId);\n    if (!participants.includes(entityId)) {\n      const added = await this.addParticipant(entityId, roomId);\n      if (!added) {\n        throw new Error(`Failed to add participant ${entityId} to room ${roomId}`);\n      }\n      if (entityId === this.agentId) {\n        this.logger.debug(`Agent ${this.character.name} linked to room ${roomId} successfully.`);\n      } else {\n        this.logger.debug(`User ${entityId} linked to room ${roomId} successfully.`);\n      }\n    }\n  }\n  async removeParticipant(entityId, roomId) {\n    return await this.adapter.removeParticipant(entityId, roomId);\n  }\n  async getParticipantsForEntity(entityId) {\n    return await this.adapter.getParticipantsForEntity(entityId);\n  }\n  async getParticipantsForRoom(roomId) {\n    return await this.adapter.getParticipantsForRoom(roomId);\n  }\n  async addParticipant(entityId, roomId) {\n    return await this.adapter.addParticipantsRoom([entityId], roomId);\n  }\n  async addParticipantsRoom(entityIds, roomId) {\n    return await this.adapter.addParticipantsRoom(entityIds, roomId);\n  }\n  /**\n   * Ensure the existence of a world.\n   */\n  async ensureWorldExists({ id, name, serverId, metadata }) {\n    const world = await this.getWorld(id);\n    if (!world) {\n      this.logger.debug(\"Creating world:\", {\n        id,\n        name,\n        serverId,\n        agentId: this.agentId\n      });\n      await this.adapter.createWorld({\n        id,\n        name,\n        agentId: this.agentId,\n        serverId: serverId || \"default\",\n        metadata\n      });\n      this.logger.debug(`World ${id} created successfully.`);\n    }\n  }\n  async ensureRoomExists({ id, name, source, type, channelId, serverId, worldId, metadata }) {\n    if (!worldId) throw new Error(\"worldId is required\");\n    const room = await this.getRoom(id);\n    if (!room) {\n      await this.createRoom({\n        id,\n        name,\n        agentId: this.agentId,\n        source,\n        type,\n        channelId,\n        serverId,\n        worldId,\n        metadata\n      });\n      this.logger.debug(`Room ${id} created successfully.`);\n    }\n  }\n  async composeState(message, includeList = null, onlyInclude = false, skipCache = false) {\n    const filterList = onlyInclude ? includeList : null;\n    const emptyObj = {\n      values: {},\n      data: {},\n      text: \"\"\n    };\n    const cachedState = skipCache ? emptyObj : await this.stateCache.get(message.id) || emptyObj;\n    const providerNames = /* @__PURE__ */ new Set();\n    if (filterList && filterList.length > 0) {\n      filterList.forEach((name) => providerNames.add(name));\n    } else {\n      this.providers.filter((p) => !p.private && !p.dynamic).forEach((p) => providerNames.add(p.name));\n    }\n    if (!filterList && includeList && includeList.length > 0) {\n      includeList.forEach((name) => providerNames.add(name));\n    }\n    const providersToGet = Array.from(\n      new Set(this.providers.filter((p) => providerNames.has(p.name)))\n    ).sort((a, b) => (a.position || 0) - (b.position || 0));\n    const providerData = await Promise.all(\n      providersToGet.map(async (provider) => {\n        const start = Date.now();\n        try {\n          const result = await provider.get(this, message, cachedState);\n          const duration = Date.now() - start;\n          this.logger.debug(`${provider.name} Provider took ${duration}ms to respond`);\n          return {\n            ...result,\n            providerName: provider.name\n          };\n        } catch (error) {\n          console.error(\"provider error\", provider.name, error);\n          return { values: {}, text: \"\", data: {}, providerName: provider.name };\n        }\n      })\n    );\n    const currentProviderResults = { ...cachedState.data?.providers || {} };\n    for (const freshResult of providerData) {\n      currentProviderResults[freshResult.providerName] = freshResult;\n    }\n    const orderedTexts = [];\n    for (const provider of providersToGet) {\n      const result = currentProviderResults[provider.name];\n      if (result && result.text && result.text.trim() !== \"\") {\n        orderedTexts.push(result.text);\n      }\n    }\n    const providersText = orderedTexts.join(\"\\n\");\n    const aggregatedStateValues = { ...cachedState.values || {} };\n    for (const provider of providersToGet) {\n      const providerResult = currentProviderResults[provider.name];\n      if (providerResult && providerResult.values && typeof providerResult.values === \"object\") {\n        Object.assign(aggregatedStateValues, providerResult.values);\n      }\n    }\n    for (const providerName in currentProviderResults) {\n      if (!providersToGet.some((p) => p.name === providerName)) {\n        const providerResult = currentProviderResults[providerName];\n        if (providerResult && providerResult.values && typeof providerResult.values === \"object\") {\n          Object.assign(aggregatedStateValues, providerResult.values);\n        }\n      }\n    }\n    const newState = {\n      values: {\n        ...aggregatedStateValues,\n        providers: providersText\n      },\n      data: {\n        ...cachedState.data || {},\n        providers: currentProviderResults\n      },\n      text: providersText\n    };\n    this.stateCache.set(message.id, newState);\n    return newState;\n  }\n  getService(serviceName) {\n    const serviceInstances = this.services.get(serviceName);\n    if (!serviceInstances || serviceInstances.length === 0) {\n      this.logger.debug(`Service ${serviceName} not found`);\n      return null;\n    }\n    return serviceInstances[0];\n  }\n  /**\n   * Type-safe service getter that ensures the correct service type is returned\n   * @template T - The expected service class type\n   * @param serviceName - The service type name\n   * @returns The service instance with proper typing, or null if not found\n   */\n  getTypedService(serviceName) {\n    return this.getService(serviceName);\n  }\n  /**\n   * Get all services of a specific type\n   * @template T - The expected service class type\n   * @param serviceName - The service type name\n   * @returns Array of service instances with proper typing\n   */\n  getServicesByType(serviceName) {\n    const serviceInstances = this.services.get(serviceName);\n    if (!serviceInstances || serviceInstances.length === 0) {\n      this.logger.debug(`No services found for type ${serviceName}`);\n      return [];\n    }\n    return serviceInstances;\n  }\n  /**\n   * Get all registered service types\n   * @returns Array of registered service type names\n   */\n  getRegisteredServiceTypes() {\n    return Array.from(this.services.keys());\n  }\n  /**\n   * Check if a service type is registered\n   * @param serviceType - The service type to check\n   * @returns true if the service is registered\n   */\n  hasService(serviceType) {\n    const serviceInstances = this.services.get(serviceType);\n    return serviceInstances !== void 0 && serviceInstances.length > 0;\n  }\n  async registerService(serviceDef) {\n    const serviceType = serviceDef.serviceType;\n    if (!serviceType) {\n      this.logger.warn(\n        `Service ${serviceDef.name} is missing serviceType. Please define a static serviceType property.`\n      );\n      return;\n    }\n    this.logger.debug(\n      `${this.character.name}(${this.agentId}) - Registering service:`,\n      serviceType\n    );\n    try {\n      const serviceInstance = await serviceDef.start(this);\n      if (!this.services.has(serviceType)) {\n        this.services.set(serviceType, []);\n      }\n      if (!this.serviceTypes.has(serviceType)) {\n        this.serviceTypes.set(serviceType, []);\n      }\n      this.services.get(serviceType).push(serviceInstance);\n      this.serviceTypes.get(serviceType).push(serviceDef);\n      if (typeof serviceDef.registerSendHandlers === \"function\") {\n        serviceDef.registerSendHandlers(this, serviceInstance);\n      }\n      this.logger.debug(\n        `${this.character.name}(${this.agentId}) - Service ${serviceType} registered successfully`\n      );\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : String(error);\n      this.logger.error(\n        `${this.character.name}(${this.agentId}) - Failed to register service ${serviceType}: ${errorMessage}`\n      );\n      throw error;\n    }\n  }\n  registerModel(modelType, handler, provider, priority) {\n    const modelKey = typeof modelType === \"string\" ? modelType : ModelType[modelType];\n    if (!this.models.has(modelKey)) {\n      this.models.set(modelKey, []);\n    }\n    const registrationOrder = Date.now();\n    this.models.get(modelKey)?.push({\n      handler,\n      provider,\n      priority: priority || 0,\n      registrationOrder\n    });\n    this.models.get(modelKey)?.sort((a, b) => {\n      if ((b.priority || 0) !== (a.priority || 0)) {\n        return (b.priority || 0) - (a.priority || 0);\n      }\n      return a.registrationOrder - b.registrationOrder;\n    });\n  }\n  getModel(modelType, provider) {\n    const modelKey = typeof modelType === \"string\" ? modelType : ModelType[modelType];\n    const models = this.models.get(modelKey);\n    if (!models?.length) {\n      return void 0;\n    }\n    if (provider) {\n      const modelWithProvider = models.find((m) => m.provider === provider);\n      if (modelWithProvider) {\n        this.logger.debug(\n          `[AgentRuntime][${this.character.name}] Using model ${modelKey} from provider ${provider}`\n        );\n        return modelWithProvider.handler;\n      } else {\n        this.logger.warn(\n          `[AgentRuntime][${this.character.name}] No model found for provider ${provider}`\n        );\n      }\n    }\n    this.logger.debug(\n      `[AgentRuntime][${this.character.name}] Using model ${modelKey} from provider ${models[0].provider}`\n    );\n    return models[0].handler;\n  }\n  /**\n   * Retrieves model configuration settings from character settings with support for\n   * model-specific overrides and default fallbacks.\n   *\n   * Precedence order (highest to lowest):\n   * 1. Model-specific settings (e.g., TEXT_SMALL_TEMPERATURE)\n   * 2. Default settings (e.g., DEFAULT_TEMPERATURE)\n   * 3. Legacy settings for backwards compatibility (e.g., MODEL_TEMPERATURE)\n   *\n   * @param modelType The specific model type to get settings for\n   * @returns Object containing model parameters if they exist, or null if no settings are configured\n   */\n  getModelSettings(modelType) {\n    const modelSettings = {};\n    const getSettingWithFallback = (param, legacyKey) => {\n      if (modelType) {\n        const modelSpecificKey = `${modelType}_${param}`;\n        const modelValue = this.getSetting(modelSpecificKey);\n        if (modelValue !== null && modelValue !== void 0) {\n          const numValue = Number(modelValue);\n          if (!isNaN(numValue)) {\n            return numValue;\n          }\n        }\n      }\n      const defaultKey = `DEFAULT_${param}`;\n      const defaultValue = this.getSetting(defaultKey);\n      if (defaultValue !== null && defaultValue !== void 0) {\n        const numValue = Number(defaultValue);\n        if (!isNaN(numValue)) {\n          return numValue;\n        }\n      }\n      const legacyValue = this.getSetting(legacyKey);\n      if (legacyValue !== null && legacyValue !== void 0) {\n        const numValue = Number(legacyValue);\n        if (!isNaN(numValue)) {\n          return numValue;\n        }\n      }\n      return null;\n    };\n    const maxTokens = getSettingWithFallback(\"MAX_TOKENS\", MODEL_SETTINGS.MODEL_MAX_TOKEN);\n    const temperature = getSettingWithFallback(\"TEMPERATURE\", MODEL_SETTINGS.MODEL_TEMPERATURE);\n    const frequencyPenalty = getSettingWithFallback(\n      \"FREQUENCY_PENALTY\",\n      MODEL_SETTINGS.MODEL_FREQ_PENALTY\n    );\n    const presencePenalty = getSettingWithFallback(\n      \"PRESENCE_PENALTY\",\n      MODEL_SETTINGS.MODEL_PRESENCE_PENALTY\n    );\n    if (maxTokens !== null) modelSettings.maxTokens = maxTokens;\n    if (temperature !== null) modelSettings.temperature = temperature;\n    if (frequencyPenalty !== null) modelSettings.frequencyPenalty = frequencyPenalty;\n    if (presencePenalty !== null) modelSettings.presencePenalty = presencePenalty;\n    return Object.keys(modelSettings).length > 0 ? modelSettings : null;\n  }\n  async useModel(modelType, params, provider) {\n    const modelKey = typeof modelType === \"string\" ? modelType : ModelType[modelType];\n    const promptContent = params?.prompt || params?.input || (Array.isArray(params?.messages) ? JSON.stringify(params.messages) : null);\n    const model = this.getModel(modelKey, provider);\n    if (!model) {\n      const errorMsg = `No handler found for delegate type: ${modelKey}`;\n      throw new Error(errorMsg);\n    }\n    this.logger.debug(\n      `[useModel] ${modelKey} input: ` + JSON.stringify(params, safeReplacer(), 2).replace(/\\\\n/g, \"\\n\")\n    );\n    let paramsWithRuntime;\n    if (params === null || params === void 0 || typeof params !== \"object\" || Array.isArray(params) || typeof Buffer !== \"undefined\" && Buffer.isBuffer(params)) {\n      paramsWithRuntime = params;\n    } else {\n      const modelSettings = this.getModelSettings(modelKey);\n      if (modelSettings) {\n        paramsWithRuntime = {\n          ...modelSettings,\n          // Apply model settings first (includes defaults and model-specific)\n          ...params,\n          // Then apply specific params (allowing overrides)\n          runtime: this\n        };\n      } else {\n        paramsWithRuntime = {\n          ...params,\n          runtime: this\n        };\n      }\n    }\n    const startTime = performance.now();\n    try {\n      const response = await model(this, paramsWithRuntime);\n      const elapsedTime = performance.now() - startTime;\n      this.logger.debug(\n        `[useModel] ${modelKey} output (took ${Number(elapsedTime.toFixed(2)).toLocaleString()}ms):`,\n        Array.isArray(response) ? `${JSON.stringify(response.slice(0, 5))}...${JSON.stringify(response.slice(-5))} (${response.length} items)` : JSON.stringify(response, safeReplacer(), 2).replace(/\\\\n/g, \"\\n\")\n      );\n      if (modelKey !== ModelType.TEXT_EMBEDDING && promptContent) {\n        if (this.currentActionContext) {\n          this.currentActionContext.prompts.push({\n            modelType: modelKey,\n            prompt: promptContent,\n            timestamp: Date.now()\n          });\n        }\n      }\n      this.adapter.log({\n        entityId: this.agentId,\n        roomId: this.agentId,\n        body: {\n          modelType,\n          modelKey,\n          params: {\n            ...typeof params === \"object\" && !Array.isArray(params) && params ? params : {},\n            prompt: promptContent\n          },\n          prompt: promptContent,\n          runId: this.getCurrentRunId(),\n          timestamp: Date.now(),\n          executionTime: elapsedTime,\n          provider: provider || this.models.get(modelKey)?.[0]?.provider || \"unknown\",\n          actionContext: this.currentActionContext ? {\n            actionName: this.currentActionContext.actionName,\n            actionId: this.currentActionContext.actionId\n          } : void 0,\n          response: Array.isArray(response) && response.every((x) => typeof x === \"number\") ? \"[array]\" : response\n        },\n        type: `useModel:${modelKey}`\n      });\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n  registerEvent(event, handler) {\n    if (!this.events.has(event)) {\n      this.events.set(event, []);\n    }\n    this.events.get(event)?.push(handler);\n  }\n  getEvent(event) {\n    return this.events.get(event);\n  }\n  async emitEvent(event, params) {\n    const events = Array.isArray(event) ? event : [event];\n    for (const eventName of events) {\n      const eventHandlers = this.events.get(eventName);\n      if (!eventHandlers) {\n        continue;\n      }\n      try {\n        await Promise.all(eventHandlers.map((handler) => handler(params)));\n      } catch (error) {\n        this.logger.error(`Error during emitEvent for ${eventName} (handler execution):`, error);\n      }\n    }\n  }\n  async ensureEmbeddingDimension() {\n    this.logger.debug(`[AgentRuntime][${this.character.name}] Starting ensureEmbeddingDimension`);\n    if (!this.adapter) {\n      throw new Error(\n        `[AgentRuntime][${this.character.name}] Database adapter not initialized before ensureEmbeddingDimension`\n      );\n    }\n    try {\n      const model = this.getModel(ModelType.TEXT_EMBEDDING);\n      if (!model) {\n        throw new Error(\n          `[AgentRuntime][${this.character.name}] No TEXT_EMBEDDING model registered`\n        );\n      }\n      this.logger.debug(`[AgentRuntime][${this.character.name}] Getting embedding dimensions`);\n      const embedding = await this.useModel(ModelType.TEXT_EMBEDDING, null);\n      if (!embedding || !embedding.length) {\n        throw new Error(`[AgentRuntime][${this.character.name}] Invalid embedding received`);\n      }\n      this.logger.debug(\n        `[AgentRuntime][${this.character.name}] Setting embedding dimension: ${embedding.length}`\n      );\n      await this.adapter.ensureEmbeddingDimension(embedding.length);\n      this.logger.debug(\n        `[AgentRuntime][${this.character.name}] Successfully set embedding dimension`\n      );\n    } catch (error) {\n      this.logger.debug(\n        `[AgentRuntime][${this.character.name}] Error in ensureEmbeddingDimension:`,\n        error\n      );\n      throw error;\n    }\n  }\n  registerTaskWorker(taskHandler) {\n    if (this.taskWorkers.has(taskHandler.name)) {\n      this.logger.warn(\n        `Task definition ${taskHandler.name} already registered. Will be overwritten.`\n      );\n    }\n    this.taskWorkers.set(taskHandler.name, taskHandler);\n  }\n  getTaskWorker(name) {\n    return this.taskWorkers.get(name);\n  }\n  get db() {\n    return this.adapter.db;\n  }\n  async init() {\n    await this.adapter.init();\n  }\n  async close() {\n    await this.adapter.close();\n  }\n  async getAgent(agentId) {\n    return await this.adapter.getAgent(agentId);\n  }\n  async getAgents() {\n    return await this.adapter.getAgents();\n  }\n  async createAgent(agent) {\n    return await this.adapter.createAgent(agent);\n  }\n  async updateAgent(agentId, agent) {\n    return await this.adapter.updateAgent(agentId, agent);\n  }\n  async deleteAgent(agentId) {\n    return await this.adapter.deleteAgent(agentId);\n  }\n  async ensureAgentExists(agent) {\n    if (!agent.name) {\n      throw new Error(\"Agent name is required\");\n    }\n    const agents = await this.adapter.getAgents();\n    const existingAgentId = agents.find((a) => a.name === agent.name)?.id;\n    if (existingAgentId) {\n      const updatedAgent = {\n        ...agent,\n        id: existingAgentId,\n        updatedAt: Date.now()\n      };\n      await this.adapter.updateAgent(existingAgentId, updatedAgent);\n      const existingAgent = await this.adapter.getAgent(existingAgentId);\n      if (!existingAgent) {\n        throw new Error(`Failed to retrieve agent after update: ${existingAgentId}`);\n      }\n      this.logger.debug(`Updated existing agent ${agent.name} on restart`);\n      return existingAgent;\n    }\n    const newAgent = {\n      ...agent,\n      id: stringToUuid(agent.name)\n    };\n    const created = await this.adapter.createAgent(newAgent);\n    if (!created) {\n      throw new Error(`Failed to create agent: ${agent.name}`);\n    }\n    this.logger.debug(`Created new agent ${agent.name}`);\n    return newAgent;\n  }\n  async getEntityById(entityId) {\n    const entities = await this.adapter.getEntitiesByIds([entityId]);\n    if (!entities?.length) return null;\n    return entities[0];\n  }\n  async getEntitiesByIds(entityIds) {\n    return await this.adapter.getEntitiesByIds(entityIds);\n  }\n  async getEntitiesForRoom(roomId, includeComponents) {\n    return await this.adapter.getEntitiesForRoom(roomId, includeComponents);\n  }\n  async createEntity(entity) {\n    if (!entity.agentId) {\n      entity.agentId = this.agentId;\n    }\n    return await this.createEntities([entity]);\n  }\n  async createEntities(entities) {\n    entities.forEach((e) => {\n      e.agentId = this.agentId;\n    });\n    return await this.adapter.createEntities(entities);\n  }\n  async updateEntity(entity) {\n    await this.adapter.updateEntity(entity);\n  }\n  async getComponent(entityId, type, worldId, sourceEntityId) {\n    return await this.adapter.getComponent(entityId, type, worldId, sourceEntityId);\n  }\n  async getComponents(entityId, worldId, sourceEntityId) {\n    return await this.adapter.getComponents(entityId, worldId, sourceEntityId);\n  }\n  async createComponent(component) {\n    return await this.adapter.createComponent(component);\n  }\n  async updateComponent(component) {\n    await this.adapter.updateComponent(component);\n  }\n  async deleteComponent(componentId) {\n    await this.adapter.deleteComponent(componentId);\n  }\n  async addEmbeddingToMemory(memory) {\n    if (memory.embedding) {\n      return memory;\n    }\n    const memoryText = memory.content.text;\n    if (!memoryText) {\n      throw new Error(\"Cannot generate embedding: Memory content is empty\");\n    }\n    try {\n      memory.embedding = await this.useModel(ModelType.TEXT_EMBEDDING, {\n        text: memoryText\n      });\n    } catch (error) {\n      this.logger.error(\"Failed to generate embedding:\", error);\n      memory.embedding = await this.useModel(ModelType.TEXT_EMBEDDING, null);\n    }\n    return memory;\n  }\n  async getMemories(params) {\n    return await this.adapter.getMemories(params);\n  }\n  async getAllMemories() {\n    const tables = [\"memories\", \"messages\", \"facts\", \"documents\"];\n    const allMemories = [];\n    for (const tableName of tables) {\n      try {\n        const memories = await this.adapter.getMemories({\n          agentId: this.agentId,\n          tableName,\n          count: 1e4\n          // Get a large number to fetch all\n        });\n        allMemories.push(...memories);\n      } catch (error) {\n        this.logger.debug(`Failed to get memories from table ${tableName}:`, error);\n      }\n    }\n    return allMemories;\n  }\n  async getMemoryById(id) {\n    return await this.adapter.getMemoryById(id);\n  }\n  async getMemoriesByIds(ids, tableName) {\n    return await this.adapter.getMemoriesByIds(ids, tableName);\n  }\n  async getMemoriesByRoomIds(params) {\n    return await this.adapter.getMemoriesByRoomIds(params);\n  }\n  async getCachedEmbeddings(params) {\n    return await this.adapter.getCachedEmbeddings(params);\n  }\n  async log(params) {\n    await this.adapter.log(params);\n  }\n  async searchMemories(params) {\n    const memories = await this.adapter.searchMemories(params);\n    if (params.query) {\n      const rerankedMemories = await this.rerankMemories(params.query, memories);\n      return rerankedMemories;\n    }\n    return memories;\n  }\n  async rerankMemories(query, memories) {\n    const docs = memories.map((memory) => ({\n      title: memory.id,\n      content: memory.content.text\n    }));\n    const bm25 = new BM25(docs);\n    const results = bm25.search(query, memories.length);\n    return results.map((result) => memories[result.index]);\n  }\n  async createMemory(memory, tableName, unique) {\n    return await this.adapter.createMemory(memory, tableName, unique);\n  }\n  async updateMemory(memory) {\n    return await this.adapter.updateMemory(memory);\n  }\n  async deleteMemory(memoryId) {\n    await this.adapter.deleteMemory(memoryId);\n  }\n  async deleteManyMemories(memoryIds) {\n    await this.adapter.deleteManyMemories(memoryIds);\n  }\n  async clearAllAgentMemories() {\n    this.logger.info(`Clearing all memories for agent ${this.character.name} (${this.agentId})`);\n    const allMemories = await this.getAllMemories();\n    const memoryIds = allMemories.map((memory) => memory.id);\n    if (memoryIds.length === 0) {\n      this.logger.info(\"No memories found to delete\");\n      return;\n    }\n    this.logger.info(`Found ${memoryIds.length} memories to delete`);\n    await this.adapter.deleteManyMemories(memoryIds);\n    this.logger.info(`Successfully cleared all ${memoryIds.length} memories for agent`);\n  }\n  async deleteAllMemories(roomId, tableName) {\n    await this.adapter.deleteAllMemories(roomId, tableName);\n  }\n  async countMemories(roomId, unique, tableName) {\n    return await this.adapter.countMemories(roomId, unique, tableName);\n  }\n  async getLogs(params) {\n    return await this.adapter.getLogs(params);\n  }\n  async deleteLog(logId) {\n    await this.adapter.deleteLog(logId);\n  }\n  async createWorld(world) {\n    return await this.adapter.createWorld(world);\n  }\n  async getWorld(id) {\n    return await this.adapter.getWorld(id);\n  }\n  async removeWorld(worldId) {\n    await this.adapter.removeWorld(worldId);\n  }\n  async getAllWorlds() {\n    return await this.adapter.getAllWorlds();\n  }\n  async updateWorld(world) {\n    await this.adapter.updateWorld(world);\n  }\n  async getRoom(roomId) {\n    const rooms = await this.adapter.getRoomsByIds([roomId]);\n    if (!rooms?.length) return null;\n    return rooms[0];\n  }\n  async getRoomsByIds(roomIds) {\n    return await this.adapter.getRoomsByIds(roomIds);\n  }\n  async createRoom({ id, name, source, type, channelId, serverId, worldId }) {\n    if (!worldId) throw new Error(\"worldId is required\");\n    const res = await this.adapter.createRooms([\n      {\n        id,\n        name,\n        source,\n        type,\n        channelId,\n        serverId,\n        worldId\n      }\n    ]);\n    if (!res.length) return null;\n    return res[0];\n  }\n  async createRooms(rooms) {\n    return await this.adapter.createRooms(rooms);\n  }\n  async deleteRoom(roomId) {\n    await this.adapter.deleteRoom(roomId);\n  }\n  async deleteRoomsByWorldId(worldId) {\n    await this.adapter.deleteRoomsByWorldId(worldId);\n  }\n  async updateRoom(room) {\n    await this.adapter.updateRoom(room);\n  }\n  async getRoomsForParticipant(entityId) {\n    return await this.adapter.getRoomsForParticipant(entityId);\n  }\n  async getRoomsForParticipants(userIds) {\n    return await this.adapter.getRoomsForParticipants(userIds);\n  }\n  // deprecate this one\n  async getRooms(worldId) {\n    return await this.adapter.getRoomsByWorld(worldId);\n  }\n  async getRoomsByWorld(worldId) {\n    return await this.adapter.getRoomsByWorld(worldId);\n  }\n  async getParticipantUserState(roomId, entityId) {\n    return await this.adapter.getParticipantUserState(roomId, entityId);\n  }\n  async setParticipantUserState(roomId, entityId, state) {\n    await this.adapter.setParticipantUserState(roomId, entityId, state);\n  }\n  async createRelationship(params) {\n    return await this.adapter.createRelationship(params);\n  }\n  async updateRelationship(relationship) {\n    await this.adapter.updateRelationship(relationship);\n  }\n  async getRelationship(params) {\n    return await this.adapter.getRelationship(params);\n  }\n  async getRelationships(params) {\n    return await this.adapter.getRelationships(params);\n  }\n  async getCache(key) {\n    return await this.adapter.getCache(key);\n  }\n  async setCache(key, value) {\n    return await this.adapter.setCache(key, value);\n  }\n  async deleteCache(key) {\n    return await this.adapter.deleteCache(key);\n  }\n  async createTask(task) {\n    return await this.adapter.createTask(task);\n  }\n  async getTasks(params) {\n    return await this.adapter.getTasks(params);\n  }\n  async getTask(id) {\n    return await this.adapter.getTask(id);\n  }\n  async getTasksByName(name) {\n    return await this.adapter.getTasksByName(name);\n  }\n  async updateTask(id, task) {\n    await this.adapter.updateTask(id, task);\n  }\n  async deleteTask(id) {\n    await this.adapter.deleteTask(id);\n  }\n  on(event, callback) {\n    if (!this.eventHandlers.has(event)) {\n      this.eventHandlers.set(event, []);\n    }\n    this.eventHandlers.get(event)?.push(callback);\n  }\n  off(event, callback) {\n    if (!this.eventHandlers.has(event)) {\n      return;\n    }\n    const handlers = this.eventHandlers.get(event);\n    const index = handlers.indexOf(callback);\n    if (index !== -1) {\n      handlers.splice(index, 1);\n    }\n  }\n  emit(event, data) {\n    if (!this.eventHandlers.has(event)) {\n      return;\n    }\n    for (const handler of this.eventHandlers.get(event)) {\n      handler(data);\n    }\n  }\n  async sendControlMessage(params) {\n    try {\n      const { roomId, action, target } = params;\n      const controlMessage = {\n        type: \"control\",\n        payload: {\n          action,\n          target\n        },\n        roomId\n      };\n      await this.emitEvent(\"CONTROL_MESSAGE\", {\n        runtime: this,\n        message: controlMessage,\n        source: \"agent\"\n      });\n      this.logger.debug(`Sent control message: ${action} to room ${roomId}`);\n    } catch (error) {\n      this.logger.error(`Error sending control message: ${error}`);\n    }\n  }\n  registerSendHandler(source, handler) {\n    if (this.sendHandlers.has(source)) {\n      this.logger.warn(`Send handler for source '${source}' already registered. Overwriting.`);\n    }\n    this.sendHandlers.set(source, handler);\n    this.logger.info(`Registered send handler for source: ${source}`);\n  }\n  async sendMessageToTarget(target, content) {\n    const handler = this.sendHandlers.get(target.source);\n    if (!handler) {\n      const errorMsg = `No send handler registered for source: ${target.source}`;\n      this.logger.error(errorMsg);\n      throw new Error(errorMsg);\n    }\n    try {\n      await handler(this, target, content);\n    } catch (error) {\n      this.logger.error(`Error executing send handler for source ${target.source}:`, error);\n      throw error;\n    }\n  }\n  async getMemoriesByWorldId(params) {\n    return await this.adapter.getMemoriesByWorldId(params);\n  }\n  async runMigrations(migrationsPaths) {\n    if (this.adapter && \"runMigrations\" in this.adapter) {\n      await this.adapter.runMigrations(migrationsPaths);\n    } else {\n      this.logger.warn(\"Database adapter does not support migrations.\");\n    }\n  }\n  async isReady() {\n    if (!this.adapter) {\n      throw new Error(\"Database adapter not registered\");\n    }\n    return await this.adapter.isReady();\n  }\n};\n\n// src/settings.ts\nimport crypto from \"crypto-browserify\";\nfunction createSettingFromConfig(configSetting) {\n  return {\n    name: configSetting.name,\n    description: configSetting.description,\n    usageDescription: configSetting.usageDescription || \"\",\n    value: null,\n    required: configSetting.required,\n    validation: configSetting.validation || null,\n    public: configSetting.public || false,\n    secret: configSetting.secret || false,\n    dependsOn: configSetting.dependsOn || [],\n    onSetAction: configSetting.onSetAction || null,\n    visibleIf: configSetting.visibleIf || null\n  };\n}\nfunction getSalt() {\n  const secretSalt = (typeof process !== \"undefined\" ? process.env.SECRET_SALT : import.meta.env.SECRET_SALT) || \"secretsalt\";\n  if (!secretSalt) {\n    logger.error(\"SECRET_SALT is not set\");\n  }\n  const salt = secretSalt;\n  logger.debug(`Generated salt with length: ${salt.length} (truncated for security)`);\n  return salt;\n}\nfunction encryptStringValue(value, salt) {\n  if (value === void 0 || value === null) {\n    logger.debug(\"Attempted to encrypt undefined or null value\");\n    return value;\n  }\n  if (typeof value === \"boolean\" || typeof value === \"number\") {\n    logger.debug(\"Value is a boolean or number, returning as is\");\n    return value;\n  }\n  if (typeof value !== \"string\") {\n    logger.debug(`Value is not a string (type: ${typeof value}), returning as is`);\n    return value;\n  }\n  const parts = value.split(\":\");\n  if (parts.length === 2) {\n    try {\n      const possibleIv = Buffer.from(parts[0], \"hex\");\n      if (possibleIv.length === 16) {\n        logger.debug(\"Value appears to be already encrypted, skipping re-encryption\");\n        return value;\n      }\n    } catch (e) {\n    }\n  }\n  const key = crypto.createHash(\"sha256\").update(salt).digest().slice(0, 32);\n  const iv = crypto.randomBytes(16);\n  const cipher = crypto.createCipheriv(\"aes-256-cbc\", key, iv);\n  let encrypted = cipher.update(value, \"utf8\", \"hex\");\n  encrypted += cipher.final(\"hex\");\n  return `${iv.toString(\"hex\")}:${encrypted}`;\n}\nfunction decryptStringValue(value, salt) {\n  try {\n    if (value === void 0 || value === null) {\n      return value;\n    }\n    if (typeof value === \"boolean\" || typeof value === \"number\") {\n      return value;\n    }\n    if (typeof value !== \"string\") {\n      logger.debug(`Value is not a string (type: ${typeof value}), returning as is`);\n      return value;\n    }\n    const parts = value.split(\":\");\n    if (parts.length !== 2) {\n      return value;\n    }\n    const iv = Buffer.from(parts[0], \"hex\");\n    const encrypted = parts[1];\n    if (iv.length !== 16) {\n      if (iv.length) {\n        logger.debug(`Invalid IV length (${iv.length}) - expected 16 bytes`);\n      }\n      return value;\n    }\n    const key = crypto.createHash(\"sha256\").update(salt).digest().slice(0, 32);\n    const decipher = crypto.createDecipheriv(\"aes-256-cbc\", key, iv);\n    let decrypted = decipher.update(encrypted, \"hex\", \"utf8\");\n    decrypted += decipher.final(\"utf8\");\n    return decrypted;\n  } catch (error) {\n    logger.error(`Error decrypting value: ${error}`);\n    return value;\n  }\n}\nfunction saltSettingValue(setting, salt) {\n  const settingCopy = { ...setting };\n  if (setting.secret === true && typeof setting.value === \"string\" && setting.value) {\n    settingCopy.value = encryptStringValue(setting.value, salt);\n  }\n  return settingCopy;\n}\nfunction unsaltSettingValue(setting, salt) {\n  const settingCopy = { ...setting };\n  if (setting.secret === true && typeof setting.value === \"string\" && setting.value) {\n    settingCopy.value = decryptStringValue(setting.value, salt);\n  }\n  return settingCopy;\n}\nfunction saltWorldSettings(worldSettings, salt) {\n  const saltedSettings = {};\n  for (const [key, setting] of Object.entries(worldSettings)) {\n    saltedSettings[key] = saltSettingValue(setting, salt);\n  }\n  return saltedSettings;\n}\nfunction unsaltWorldSettings(worldSettings, salt) {\n  const unsaltedSettings = {};\n  for (const [key, setting] of Object.entries(worldSettings)) {\n    unsaltedSettings[key] = unsaltSettingValue(setting, salt);\n  }\n  return unsaltedSettings;\n}\nasync function updateWorldSettings(runtime, serverId, worldSettings) {\n  const worldId = createUniqueUuid(runtime, serverId);\n  const world = await runtime.getWorld(worldId);\n  if (!world) {\n    logger.error(`No world found for server ${serverId}`);\n    return false;\n  }\n  if (!world.metadata) {\n    world.metadata = {};\n  }\n  const salt = getSalt();\n  const saltedSettings = saltWorldSettings(worldSettings, salt);\n  world.metadata.settings = saltedSettings;\n  await runtime.updateWorld(world);\n  return true;\n}\nasync function getWorldSettings(runtime, serverId) {\n  const worldId = createUniqueUuid(runtime, serverId);\n  const world = await runtime.getWorld(worldId);\n  if (!world || !world.metadata?.settings) {\n    return null;\n  }\n  const saltedSettings = world.metadata.settings;\n  const salt = getSalt();\n  return unsaltWorldSettings(saltedSettings, salt);\n}\nasync function initializeOnboarding(runtime, world, config) {\n  if (world.metadata?.settings) {\n    logger.info(`Onboarding state already exists for server ${world.serverId}`);\n    const saltedSettings = world.metadata.settings;\n    const salt = getSalt();\n    return unsaltWorldSettings(saltedSettings, salt);\n  }\n  const worldSettings = {};\n  if (config.settings) {\n    for (const [key, configSetting] of Object.entries(config.settings)) {\n      worldSettings[key] = createSettingFromConfig(configSetting);\n    }\n  }\n  if (!world.metadata) {\n    world.metadata = {};\n  }\n  world.metadata.settings = worldSettings;\n  await runtime.updateWorld(world);\n  logger.info(`Initialized settings config for server ${world.serverId}`);\n  return worldSettings;\n}\nfunction encryptedCharacter(character) {\n  const encryptedChar = JSON.parse(JSON.stringify(character));\n  const salt = getSalt();\n  if (encryptedChar.settings?.secrets) {\n    encryptedChar.settings.secrets = encryptObjectValues(encryptedChar.settings.secrets, salt);\n  }\n  if (encryptedChar.secrets) {\n    encryptedChar.secrets = encryptObjectValues(encryptedChar.secrets, salt);\n  }\n  return encryptedChar;\n}\nfunction decryptedCharacter(character, _runtime) {\n  const decryptedChar = JSON.parse(JSON.stringify(character));\n  const salt = getSalt();\n  if (decryptedChar.settings?.secrets) {\n    decryptedChar.settings.secrets = decryptObjectValues(decryptedChar.settings.secrets, salt);\n  }\n  if (decryptedChar.secrets) {\n    decryptedChar.secrets = decryptObjectValues(decryptedChar.secrets, salt);\n  }\n  return decryptedChar;\n}\nfunction encryptObjectValues(obj, salt) {\n  const result = {};\n  for (const [key, value] of Object.entries(obj)) {\n    if (typeof value === \"string\" && value) {\n      result[key] = encryptStringValue(value, salt);\n    } else {\n      result[key] = value;\n    }\n  }\n  return result;\n}\nfunction decryptObjectValues(obj, salt) {\n  const result = {};\n  for (const [key, value] of Object.entries(obj)) {\n    if (typeof value === \"string\" && value) {\n      result[key] = decryptStringValue(value, salt);\n    } else {\n      result[key] = value;\n    }\n  }\n  return result;\n}\n\n// src/services.ts\nvar ServiceBuilder = class {\n  constructor(serviceType) {\n    this.serviceType = serviceType;\n    this.description = \"\";\n  }\n  /**\n   * Set the service description\n   */\n  withDescription(description) {\n    this.description = description;\n    return this;\n  }\n  /**\n   * Set the start function for the service\n   */\n  withStart(startFn) {\n    this.startFn = startFn;\n    return this;\n  }\n  /**\n   * Set the stop function for the service\n   */\n  withStop(stopFn) {\n    this.stopFn = stopFn;\n    return this;\n  }\n  /**\n   * Build the service class with all configured properties\n   */\n  build() {\n    const serviceType = this.serviceType;\n    const description = this.description;\n    const startFn = this.startFn;\n    const stopFn = this.stopFn;\n    return class extends Service {\n      constructor() {\n        super(...arguments);\n        this.capabilityDescription = description;\n      }\n      static {\n        this.serviceType = serviceType;\n      }\n      static async start(runtime) {\n        if (!startFn) {\n          throw new Error(`Start function not defined for service ${serviceType}`);\n        }\n        return startFn(runtime);\n      }\n      async stop() {\n        if (stopFn) {\n          await stopFn();\n        }\n      }\n    };\n  }\n};\nfunction createService(serviceType) {\n  return new ServiceBuilder(serviceType);\n}\nfunction defineService(definition) {\n  return createService(definition.serviceType).withDescription(definition.description).withStart(definition.start).withStop(definition.stop || (() => Promise.resolve())).build();\n}\nexport {\n  AgentRuntime,\n  AgentStatus,\n  CacheKeyPrefix,\n  ChannelType,\n  ContentType,\n  DatabaseAdapter,\n  EventType,\n  IBrowserService,\n  IEmailService,\n  ILpService,\n  IMessageService,\n  IPdfService,\n  IPostService,\n  ITokenDataService,\n  ITranscriptionService,\n  IVideoService,\n  IWalletService,\n  IWebSearchService,\n  KnowledgeScope,\n  MODEL_SETTINGS,\n  MemoryType,\n  ModelType,\n  PlatformPrefix,\n  Role,\n  SOCKET_MESSAGE_TYPE,\n  Semaphore,\n  Sentry,\n  Service,\n  ServiceBuilder,\n  ServiceType,\n  TEEMode,\n  TeeType,\n  VECTOR_DIMS,\n  addHeader,\n  asUUID,\n  booleanFooter,\n  characterSchema,\n  composeActionExamples,\n  composePrompt,\n  composePromptFromState,\n  createActionResult,\n  createLogger,\n  createMessageMemory,\n  createService,\n  createServiceError,\n  createSettingFromConfig,\n  createUniqueUuid,\n  decryptObjectValues,\n  decryptStringValue as decryptSecret,\n  decryptStringValue,\n  decryptedCharacter,\n  defineService,\n  elizaLogger,\n  encryptObjectValues,\n  encryptStringValue,\n  encryptedCharacter,\n  findEntityByName,\n  findWorldsForOwner,\n  formatActionNames,\n  formatActions,\n  formatEntities,\n  formatMessages,\n  formatPosts,\n  formatTimestamp,\n  getContentTypeFromMimeType,\n  getEntityDetails,\n  getLocalServerUrl,\n  getMemoryText,\n  getModelSpecificSettingKey,\n  getSalt,\n  getTypedService,\n  getUserServerRole,\n  getWorldSettings,\n  imageDescriptionTemplate,\n  initializeOnboarding,\n  isCustomMetadata,\n  isDescriptionMetadata,\n  isDocumentMemory,\n  isDocumentMetadata,\n  isFragmentMemory,\n  isFragmentMetadata,\n  isMessageMetadata,\n  isValidCharacter,\n  logger,\n  messageHandlerTemplate,\n  normalizeJsonString,\n  parseAndValidateCharacter,\n  parseBooleanFromText2 as parseBooleanFromText,\n  parseJSONObjectFromText,\n  parseKeyValueXml,\n  postCreationTemplate,\n  safeReplacer,\n  saltSettingValue,\n  saltWorldSettings,\n  shouldRespondTemplate,\n  splitChunks,\n  stringToUuid,\n  trimTokens,\n  truncateToCompleteSentence,\n  unsaltSettingValue,\n  unsaltWorldSettings,\n  updateWorldSettings,\n  validateCharacter,\n  validateUuid\n};\n","import { z } from \"zod/v3\";\nimport pRetry from \"p-retry\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { isTraceableFunction, } from \"langsmith/singletons/traceable\";\nimport { LogStreamCallbackHandler, RunLog, RunLogPatch, isLogStreamHandler, } from \"../tracers/log_stream.js\";\nimport { EventStreamCallbackHandler, isStreamEventsHandler, } from \"../tracers/event_stream.js\";\nimport { Serializable } from \"../load/serializable.js\";\nimport { IterableReadableStream, concat, atee, pipeGeneratorWithSetup, AsyncGeneratorWithSetup, } from \"../utils/stream.js\";\nimport { raceWithSignal } from \"../utils/signal.js\";\nimport { DEFAULT_RECURSION_LIMIT, ensureConfig, getCallbackManagerForConfig, mergeConfigs, patchConfig, pickRunnableConfigKeys, } from \"./config.js\";\nimport { AsyncCaller } from \"../utils/async_caller.js\";\nimport { RootListenersTracer } from \"../tracers/root_listener.js\";\nimport { _RootEventFilter, isRunnableInterface } from \"./utils.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport { Graph } from \"./graph.js\";\nimport { convertToHttpEventStream } from \"./wrappers.js\";\nimport { consumeAsyncIterableInContext, consumeIteratorInContext, isAsyncIterable, isIterableIterator, isIterator, } from \"./iter.js\";\nimport { _isToolCall, ToolInputParsingException } from \"../tools/utils.js\";\nimport { getSchemaDescription, interopParseAsync, isSimpleStringZodSchema, } from \"../utils/types/zod.js\";\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _coerceToDict(value, defaultKey) {\n    return value &&\n        !Array.isArray(value) &&\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        !(value instanceof Date) &&\n        typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\n/**\n * A Runnable is a generic unit of work that can be invoked, batched, streamed, and/or\n * transformed.\n */\nexport class Runnable extends Serializable {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    getName(suffix) {\n        const name = \n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.name ?? this.constructor.lc_name() ?? this.constructor.name;\n        return suffix ? `${name}${suffix}` : name;\n    }\n    /**\n     * Bind arguments to a Runnable, returning a new Runnable.\n     * @param kwargs\n     * @returns A new RunnableBinding that, when invoked, will apply the bound args.\n     *\n     * @deprecated Use {@link withConfig} instead. This will be removed in the next breaking release.\n     */\n    bind(kwargs) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({ bound: this, kwargs, config: {} });\n    }\n    /**\n     * Return a new Runnable that maps a list of inputs to a list of outputs,\n     * by calling invoke() with each input.\n     *\n     * @deprecated This will be removed in the next breaking release.\n     */\n    map() {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableEach({ bound: this });\n    }\n    /**\n     * Add retry logic to an existing runnable.\n     * @param fields.stopAfterAttempt The number of attempts to retry.\n     * @param fields.onFailedAttempt A function that is called when a retry fails.\n     * @returns A new RunnableRetry that, when invoked, will retry according to the parameters.\n     */\n    withRetry(fields) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableRetry({\n            bound: this,\n            kwargs: {},\n            config: {},\n            maxAttemptNumber: fields?.stopAfterAttempt,\n            ...fields,\n        });\n    }\n    /**\n     * Bind config to a Runnable, returning a new Runnable.\n     * @param config New configuration parameters to attach to the new runnable.\n     * @returns A new RunnableBinding with a config matching what's passed.\n     */\n    withConfig(config) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({\n            bound: this,\n            config,\n            kwargs: {},\n        });\n    }\n    /**\n     * Create a new runnable from the current one that will try invoking\n     * other passed fallback runnables if the initial invocation fails.\n     * @param fields.fallbacks Other runnables to call if the runnable errors.\n     * @returns A new RunnableWithFallbacks.\n     */\n    withFallbacks(fields) {\n        const fallbacks = Array.isArray(fields) ? fields : fields.fallbacks;\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableWithFallbacks({\n            runnable: this,\n            fallbacks,\n        });\n    }\n    _getOptionsList(options, length = 0) {\n        if (Array.isArray(options) && options.length !== length) {\n            throw new Error(`Passed \"options\" must be an array with the same length as the inputs, but got ${options.length} options for ${length} inputs`);\n        }\n        if (Array.isArray(options)) {\n            return options.map(ensureConfig);\n        }\n        if (length > 1 && !Array.isArray(options) && options.runId) {\n            console.warn(\"Provided runId will be used only for the first element of the batch.\");\n            const subsequent = Object.fromEntries(Object.entries(options).filter(([key]) => key !== \"runId\"));\n            return Array.from({ length }, (_, i) => ensureConfig(i === 0 ? options : subsequent));\n        }\n        return Array.from({ length }, () => ensureConfig(options));\n    }\n    async batch(inputs, options, batchOptions) {\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const maxConcurrency = configList[0]?.maxConcurrency ?? batchOptions?.maxConcurrency;\n        const caller = new AsyncCaller({\n            maxConcurrency,\n            onFailedAttempt: (e) => {\n                throw e;\n            },\n        });\n        const batchCalls = inputs.map((input, i) => caller.call(async () => {\n            try {\n                const result = await this.invoke(input, configList[i]);\n                return result;\n            }\n            catch (e) {\n                if (batchOptions?.returnExceptions) {\n                    return e;\n                }\n                throw e;\n            }\n        }));\n        return Promise.all(batchCalls);\n    }\n    /**\n     * Default streaming implementation.\n     * Subclasses should override this method if they support streaming output.\n     * @param input\n     * @param options\n     */\n    async *_streamIterator(input, options) {\n        yield this.invoke(input, options);\n    }\n    /**\n     * Stream output in chunks.\n     * @param input\n     * @param options\n     * @returns A readable stream that is also an iterable.\n     */\n    async stream(input, options) {\n        // Buffer the first streamed chunk to allow for initial errors\n        // to surface immediately.\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this._streamIterator(input, config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n    _separateRunnableConfigFromCallOptions(options) {\n        let runnableConfig;\n        if (options === undefined) {\n            runnableConfig = ensureConfig(options);\n        }\n        else {\n            runnableConfig = ensureConfig({\n                callbacks: options.callbacks,\n                tags: options.tags,\n                metadata: options.metadata,\n                runName: options.runName,\n                configurable: options.configurable,\n                recursionLimit: options.recursionLimit,\n                maxConcurrency: options.maxConcurrency,\n                runId: options.runId,\n                timeout: options.timeout,\n                signal: options.signal,\n            });\n        }\n        const callOptions = { ...options };\n        delete callOptions.callbacks;\n        delete callOptions.tags;\n        delete callOptions.metadata;\n        delete callOptions.runName;\n        delete callOptions.configurable;\n        delete callOptions.recursionLimit;\n        delete callOptions.maxConcurrency;\n        delete callOptions.runId;\n        delete callOptions.timeout;\n        delete callOptions.signal;\n        return [runnableConfig, callOptions];\n    }\n    async _callWithConfig(func, input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), config.runId, config?.runType, undefined, undefined, config?.runName ?? this.getName());\n        delete config.runId;\n        let output;\n        try {\n            const promise = func.call(this, input, config, runManager);\n            output = await raceWithSignal(promise, options?.signal);\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n        return output;\n    }\n    /**\n     * Internal method that handles batching and configuration for a runnable\n     * It takes a function, input values, and optional configuration, and\n     * returns a promise that resolves to the output values.\n     * @param func The function to be executed for each input value.\n     * @param input The input values to be processed.\n     * @param config Optional configuration for the function execution.\n     * @returns A promise that resolves to the output values.\n     */\n    async _batchWithConfig(func, inputs, options, batchOptions) {\n        const optionsList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(optionsList.map(getCallbackManagerForConfig));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), optionsList[i].runId, optionsList[i].runType, undefined, undefined, optionsList[i].runName ?? this.getName());\n            delete optionsList[i].runId;\n            return handleStartRes;\n        }));\n        let outputs;\n        try {\n            const promise = func.call(this, inputs, optionsList, runManagers, batchOptions);\n            outputs = await raceWithSignal(promise, optionsList?.[0]?.signal);\n        }\n        catch (e) {\n            await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(e)));\n            throw e;\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainEnd(_coerceToDict(outputs, \"output\"))));\n        return outputs;\n    }\n    /**\n     * Helper method to transform an Iterator of Input values into an Iterator of\n     * Output values, with callbacks.\n     * Use this to implement `stream()` or `transform()` in Runnable subclasses.\n     */\n    async *_transformStreamWithConfig(inputGenerator, transformer, options) {\n        let finalInput;\n        let finalInputSupported = true;\n        let finalOutput;\n        let finalOutputSupported = true;\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        async function* wrapInputForTracing() {\n            for await (const chunk of inputGenerator) {\n                if (finalInputSupported) {\n                    if (finalInput === undefined) {\n                        finalInput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalInput = concat(finalInput, chunk);\n                        }\n                        catch {\n                            finalInput = undefined;\n                            finalInputSupported = false;\n                        }\n                    }\n                }\n                yield chunk;\n            }\n        }\n        let runManager;\n        try {\n            const pipe = await pipeGeneratorWithSetup(transformer.bind(this), wrapInputForTracing(), async () => callbackManager_?.handleChainStart(this.toJSON(), { input: \"\" }, config.runId, config.runType, undefined, undefined, config.runName ?? this.getName()), options?.signal, config);\n            delete config.runId;\n            runManager = pipe.setup;\n            const streamEventsHandler = runManager?.handlers.find(isStreamEventsHandler);\n            let iterator = pipe.output;\n            if (streamEventsHandler !== undefined && runManager !== undefined) {\n                iterator = streamEventsHandler.tapOutputIterable(runManager.runId, iterator);\n            }\n            const streamLogHandler = runManager?.handlers.find(isLogStreamHandler);\n            if (streamLogHandler !== undefined && runManager !== undefined) {\n                iterator = streamLogHandler.tapOutputIterable(runManager.runId, iterator);\n            }\n            for await (const chunk of iterator) {\n                yield chunk;\n                if (finalOutputSupported) {\n                    if (finalOutput === undefined) {\n                        finalOutput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalOutput = concat(finalOutput, chunk);\n                        }\n                        catch {\n                            finalOutput = undefined;\n                            finalOutputSupported = false;\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e, undefined, undefined, undefined, {\n                inputs: _coerceToDict(finalInput, \"input\"),\n            });\n            throw e;\n        }\n        await runManager?.handleChainEnd(finalOutput ?? {}, undefined, undefined, undefined, { inputs: _coerceToDict(finalInput, \"input\") });\n    }\n    getGraph(_) {\n        const graph = new Graph();\n        // TODO: Add input schema for runnables\n        const inputNode = graph.addNode({\n            name: `${this.getName()}Input`,\n            schema: z.any(),\n        });\n        const runnableNode = graph.addNode(this);\n        // TODO: Add output schemas for runnables\n        const outputNode = graph.addNode({\n            name: `${this.getName()}Output`,\n            schema: z.any(),\n        });\n        graph.addEdge(inputNode, runnableNode);\n        graph.addEdge(runnableNode, outputNode);\n        return graph;\n    }\n    /**\n     * Create a new runnable sequence that runs each individual runnable in series,\n     * piping the output of one runnable into another runnable or runnable-like.\n     * @param coerceable A runnable, function, or object whose values are functions or runnables.\n     * @returns A new runnable sequence.\n     */\n    pipe(coerceable) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableSequence({\n            first: this,\n            last: _coerceToRunnable(coerceable),\n        });\n    }\n    /**\n     * Pick keys from the dict output of this runnable. Returns a new runnable.\n     */\n    pick(keys) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return this.pipe(new RunnablePick(keys));\n    }\n    /**\n     * Assigns new fields to the dict output of this runnable. Returns a new runnable.\n     */\n    assign(mapping) {\n        return this.pipe(\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        new RunnableAssign(\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        new RunnableMap({ steps: mapping })));\n    }\n    /**\n     * Default implementation of transform, which buffers input and then calls stream.\n     * Subclasses should override this method if they can start producing output while\n     * input is still being generated.\n     * @param generator\n     * @param options\n     */\n    async *transform(generator, options) {\n        let finalChunk;\n        for await (const chunk of generator) {\n            if (finalChunk === undefined) {\n                finalChunk = chunk;\n            }\n            else {\n                // Make a best effort to gather, for any type that supports concat.\n                // This method should throw an error if gathering fails.\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                finalChunk = concat(finalChunk, chunk);\n            }\n        }\n        yield* this._streamIterator(finalChunk, ensureConfig(options));\n    }\n    /**\n     * Stream all output from a runnable, as reported to the callback system.\n     * This includes all inner runs of LLMs, Retrievers, Tools, etc.\n     * Output is streamed as Log objects, which include a list of\n     * jsonpatch ops that describe how the state of the run has changed in each\n     * step, and the final state of the run.\n     * The jsonpatch ops can be applied in order to construct state.\n     * @param input\n     * @param options\n     * @param streamOptions\n     */\n    async *streamLog(input, options, streamOptions) {\n        const logStreamCallbackHandler = new LogStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n            _schemaFormat: \"original\",\n        });\n        const config = ensureConfig(options);\n        yield* this._streamLog(input, logStreamCallbackHandler, config);\n    }\n    async *_streamLog(input, logStreamCallbackHandler, config) {\n        const { callbacks } = config;\n        if (callbacks === undefined) {\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = [logStreamCallbackHandler];\n        }\n        else if (Array.isArray(callbacks)) {\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = callbacks.concat([logStreamCallbackHandler]);\n        }\n        else {\n            const copiedCallbacks = callbacks.copy();\n            copiedCallbacks.addHandler(logStreamCallbackHandler, true);\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = copiedCallbacks;\n        }\n        const runnableStreamPromise = this.stream(input, config);\n        async function consumeRunnableStream() {\n            try {\n                const runnableStream = await runnableStreamPromise;\n                for await (const chunk of runnableStream) {\n                    const patch = new RunLogPatch({\n                        ops: [\n                            {\n                                op: \"add\",\n                                path: \"/streamed_output/-\",\n                                value: chunk,\n                            },\n                        ],\n                    });\n                    await logStreamCallbackHandler.writer.write(patch);\n                }\n            }\n            finally {\n                await logStreamCallbackHandler.writer.close();\n            }\n        }\n        const runnableStreamConsumePromise = consumeRunnableStream();\n        try {\n            for await (const log of logStreamCallbackHandler) {\n                yield log;\n            }\n        }\n        finally {\n            await runnableStreamConsumePromise;\n        }\n    }\n    streamEvents(input, options, streamOptions) {\n        let stream;\n        if (options.version === \"v1\") {\n            stream = this._streamEventsV1(input, options, streamOptions);\n        }\n        else if (options.version === \"v2\") {\n            stream = this._streamEventsV2(input, options, streamOptions);\n        }\n        else {\n            throw new Error(`Only versions \"v1\" and \"v2\" of the schema are currently supported.`);\n        }\n        if (options.encoding === \"text/event-stream\") {\n            return convertToHttpEventStream(stream);\n        }\n        else {\n            return IterableReadableStream.fromAsyncGenerator(stream);\n        }\n    }\n    async *_streamEventsV2(input, options, streamOptions) {\n        const eventStreamer = new EventStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n        });\n        const config = ensureConfig(options);\n        const runId = config.runId ?? uuidv4();\n        config.runId = runId;\n        const callbacks = config.callbacks;\n        if (callbacks === undefined) {\n            config.callbacks = [eventStreamer];\n        }\n        else if (Array.isArray(callbacks)) {\n            config.callbacks = callbacks.concat(eventStreamer);\n        }\n        else {\n            const copiedCallbacks = callbacks.copy();\n            copiedCallbacks.addHandler(eventStreamer, true);\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = copiedCallbacks;\n        }\n        const abortController = new AbortController();\n        // Call the runnable in streaming mode,\n        // add each chunk to the output stream\n        const outerThis = this;\n        async function consumeRunnableStream() {\n            try {\n                let signal;\n                if (options?.signal) {\n                    if (\"any\" in AbortSignal) {\n                        // Use native AbortSignal.any() if available (Node 19+)\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        signal = AbortSignal.any([\n                            abortController.signal,\n                            options.signal,\n                        ]);\n                    }\n                    else {\n                        // Fallback for Node 18 and below - just use the provided signal\n                        signal = options.signal;\n                        // Ensure we still abort our controller when the parent signal aborts\n                        options.signal.addEventListener(\"abort\", () => {\n                            abortController.abort();\n                        }, { once: true });\n                    }\n                }\n                else {\n                    signal = abortController.signal;\n                }\n                const runnableStream = await outerThis.stream(input, {\n                    ...config,\n                    signal,\n                });\n                const tappedStream = eventStreamer.tapOutputIterable(runId, runnableStream);\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                for await (const _ of tappedStream) {\n                    // Just iterate so that the callback handler picks up events\n                    if (abortController.signal.aborted)\n                        break;\n                }\n            }\n            finally {\n                await eventStreamer.finish();\n            }\n        }\n        const runnableStreamConsumePromise = consumeRunnableStream();\n        let firstEventSent = false;\n        let firstEventRunId;\n        try {\n            for await (const event of eventStreamer) {\n                // This is a work-around an issue where the inputs into the\n                // chain are not available until the entire input is consumed.\n                // As a temporary solution, we'll modify the input to be the input\n                // that was passed into the chain.\n                if (!firstEventSent) {\n                    event.data.input = input;\n                    firstEventSent = true;\n                    firstEventRunId = event.run_id;\n                    yield event;\n                    continue;\n                }\n                if (event.run_id === firstEventRunId && event.event.endsWith(\"_end\")) {\n                    // If it's the end event corresponding to the root runnable\n                    // we dont include the input in the event since it's guaranteed\n                    // to be included in the first event.\n                    if (event.data?.input) {\n                        delete event.data.input;\n                    }\n                }\n                yield event;\n            }\n        }\n        finally {\n            abortController.abort();\n            await runnableStreamConsumePromise;\n        }\n    }\n    async *_streamEventsV1(input, options, streamOptions) {\n        let runLog;\n        let hasEncounteredStartEvent = false;\n        const config = ensureConfig(options);\n        const rootTags = config.tags ?? [];\n        const rootMetadata = config.metadata ?? {};\n        const rootName = config.runName ?? this.getName();\n        const logStreamCallbackHandler = new LogStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n            _schemaFormat: \"streaming_events\",\n        });\n        const rootEventFilter = new _RootEventFilter({\n            ...streamOptions,\n        });\n        const logStream = this._streamLog(input, logStreamCallbackHandler, config);\n        for await (const log of logStream) {\n            if (!runLog) {\n                runLog = RunLog.fromRunLogPatch(log);\n            }\n            else {\n                runLog = runLog.concat(log);\n            }\n            if (runLog.state === undefined) {\n                throw new Error(`Internal error: \"streamEvents\" state is missing. Please open a bug report.`);\n            }\n            // Yield the start event for the root runnable if it hasn't been seen.\n            // The root run is never filtered out\n            if (!hasEncounteredStartEvent) {\n                hasEncounteredStartEvent = true;\n                const state = { ...runLog.state };\n                const event = {\n                    run_id: state.id,\n                    event: `on_${state.type}_start`,\n                    name: rootName,\n                    tags: rootTags,\n                    metadata: rootMetadata,\n                    data: {\n                        input,\n                    },\n                };\n                if (rootEventFilter.includeEvent(event, state.type)) {\n                    yield event;\n                }\n            }\n            const paths = log.ops\n                .filter((op) => op.path.startsWith(\"/logs/\"))\n                .map((op) => op.path.split(\"/\")[2]);\n            const dedupedPaths = [...new Set(paths)];\n            for (const path of dedupedPaths) {\n                let eventType;\n                let data = {};\n                const logEntry = runLog.state.logs[path];\n                if (logEntry.end_time === undefined) {\n                    if (logEntry.streamed_output.length > 0) {\n                        eventType = \"stream\";\n                    }\n                    else {\n                        eventType = \"start\";\n                    }\n                }\n                else {\n                    eventType = \"end\";\n                }\n                if (eventType === \"start\") {\n                    // Include the inputs with the start event if they are available.\n                    // Usually they will NOT be available for components that operate\n                    // on streams, since those components stream the input and\n                    // don't know its final value until the end of the stream.\n                    if (logEntry.inputs !== undefined) {\n                        data.input = logEntry.inputs;\n                    }\n                }\n                else if (eventType === \"end\") {\n                    if (logEntry.inputs !== undefined) {\n                        data.input = logEntry.inputs;\n                    }\n                    data.output = logEntry.final_output;\n                }\n                else if (eventType === \"stream\") {\n                    const chunkCount = logEntry.streamed_output.length;\n                    if (chunkCount !== 1) {\n                        throw new Error(`Expected exactly one chunk of streamed output, got ${chunkCount} instead. Encountered in: \"${logEntry.name}\"`);\n                    }\n                    data = { chunk: logEntry.streamed_output[0] };\n                    // Clean up the stream, we don't need it anymore.\n                    // And this avoids duplicates as well!\n                    logEntry.streamed_output = [];\n                }\n                yield {\n                    event: `on_${logEntry.type}_${eventType}`,\n                    name: logEntry.name,\n                    run_id: logEntry.id,\n                    tags: logEntry.tags,\n                    metadata: logEntry.metadata,\n                    data,\n                };\n            }\n            // Finally, we take care of the streaming output from the root chain\n            // if there is any.\n            const { state } = runLog;\n            if (state.streamed_output.length > 0) {\n                const chunkCount = state.streamed_output.length;\n                if (chunkCount !== 1) {\n                    throw new Error(`Expected exactly one chunk of streamed output, got ${chunkCount} instead. Encountered in: \"${state.name}\"`);\n                }\n                const data = { chunk: state.streamed_output[0] };\n                // Clean up the stream, we don't need it anymore.\n                state.streamed_output = [];\n                const event = {\n                    event: `on_${state.type}_stream`,\n                    run_id: state.id,\n                    tags: rootTags,\n                    metadata: rootMetadata,\n                    name: rootName,\n                    data,\n                };\n                if (rootEventFilter.includeEvent(event, state.type)) {\n                    yield event;\n                }\n            }\n        }\n        const state = runLog?.state;\n        if (state !== undefined) {\n            // Finally, yield the end event for the root runnable.\n            const event = {\n                event: `on_${state.type}_end`,\n                name: rootName,\n                run_id: state.id,\n                tags: rootTags,\n                metadata: rootMetadata,\n                data: {\n                    output: state.final_output,\n                },\n            };\n            if (rootEventFilter.includeEvent(event, state.type))\n                yield event;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static isRunnable(thing) {\n        return isRunnableInterface(thing);\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({\n            bound: this,\n            config: {},\n            configFactories: [\n                (config) => ({\n                    callbacks: [\n                        new RootListenersTracer({\n                            config,\n                            onStart,\n                            onEnd,\n                            onError,\n                        }),\n                    ],\n                }),\n            ],\n        });\n    }\n    /**\n     * Convert a runnable to a tool. Return a new instance of `RunnableToolLike`\n     * which contains the runnable, name, description and schema.\n     *\n     * @template {T extends RunInput = RunInput} RunInput - The input type of the runnable. Should be the same as the `RunInput` type of the runnable.\n     *\n     * @param fields\n     * @param {string | undefined} [fields.name] The name of the tool. If not provided, it will default to the name of the runnable.\n     * @param {string | undefined} [fields.description] The description of the tool. Falls back to the description on the Zod schema if not provided, or undefined if neither are provided.\n     * @param {z.ZodType<T>} [fields.schema] The Zod schema for the input of the tool. Infers the Zod type from the input type of the runnable.\n     * @returns {RunnableToolLike<z.ZodType<T>, RunOutput>} An instance of `RunnableToolLike` which is a runnable that can be used as a tool.\n     */\n    asTool(fields) {\n        return convertRunnableToTool(this, fields);\n    }\n}\n/**\n * Wraps a runnable and applies partial config upon invocation.\n *\n * @example\n * ```typescript\n * import {\n *   type RunnableConfig,\n *   RunnableLambda,\n * } from \"@langchain/core/runnables\";\n *\n * const enhanceProfile = (\n *   profile: Record<string, any>,\n *   config?: RunnableConfig\n * ) => {\n *   if (config?.configurable?.role) {\n *     return { ...profile, role: config.configurable.role };\n *   }\n *   return profile;\n * };\n *\n * const runnable = RunnableLambda.from(enhanceProfile);\n *\n * // Bind configuration to the runnable to set the user's role dynamically\n * const adminRunnable = runnable.bind({ configurable: { role: \"Admin\" } });\n * const userRunnable = runnable.bind({ configurable: { role: \"User\" } });\n *\n * const result1 = await adminRunnable.invoke({\n *   name: \"Alice\",\n *   email: \"alice@example.com\"\n * });\n *\n * // { name: \"Alice\", email: \"alice@example.com\", role: \"Admin\" }\n *\n * const result2 = await userRunnable.invoke({\n *   name: \"Bob\",\n *   email: \"bob@example.com\"\n * });\n *\n * // { name: \"Bob\", email: \"bob@example.com\", role: \"User\" }\n * ```\n */\nexport class RunnableBinding extends Runnable {\n    static lc_name() {\n        return \"RunnableBinding\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"bound\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"configFactories\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.bound = fields.bound;\n        this.kwargs = fields.kwargs;\n        this.config = fields.config;\n        this.configFactories = fields.configFactories;\n    }\n    getName(suffix) {\n        return this.bound.getName(suffix);\n    }\n    async _mergeConfig(...options) {\n        const config = mergeConfigs(this.config, ...options);\n        return mergeConfigs(config, ...(this.configFactories\n            ? await Promise.all(this.configFactories.map(async (configFactory) => await configFactory(config)))\n            : []));\n    }\n    /**\n     * Binds the runnable with the specified arguments.\n     * @param kwargs The arguments to bind the runnable with.\n     * @returns A new instance of the `RunnableBinding` class that is bound with the specified arguments.\n     *\n     * @deprecated Use {@link withConfig} instead. This will be removed in the next breaking release.\n     */\n    bind(kwargs) {\n        return new this.constructor({\n            bound: this.bound,\n            kwargs: { ...this.kwargs, ...kwargs },\n            config: this.config,\n        });\n    }\n    withConfig(config) {\n        return new this.constructor({\n            bound: this.bound,\n            kwargs: this.kwargs,\n            config: { ...this.config, ...config },\n        });\n    }\n    withRetry(fields) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableRetry({\n            bound: this.bound,\n            kwargs: this.kwargs,\n            config: this.config,\n            maxAttemptNumber: fields?.stopAfterAttempt,\n            ...fields,\n        });\n    }\n    async invoke(input, options) {\n        return this.bound.invoke(input, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    async batch(inputs, options, batchOptions) {\n        const mergedOptions = Array.isArray(options)\n            ? await Promise.all(options.map(async (individualOption) => this._mergeConfig(ensureConfig(individualOption), this.kwargs)))\n            : await this._mergeConfig(ensureConfig(options), this.kwargs);\n        return this.bound.batch(inputs, mergedOptions, batchOptions);\n    }\n    async *_streamIterator(input, options) {\n        yield* this.bound._streamIterator(input, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    async stream(input, options) {\n        return this.bound.stream(input, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    async *transform(generator, options) {\n        yield* this.bound.transform(generator, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    streamEvents(input, options, streamOptions) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const outerThis = this;\n        const generator = async function* () {\n            yield* outerThis.bound.streamEvents(input, {\n                ...(await outerThis._mergeConfig(ensureConfig(options), outerThis.kwargs)),\n                version: options.version,\n            }, streamOptions);\n        };\n        return IterableReadableStream.fromAsyncGenerator(generator());\n    }\n    static isRunnableBinding(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    thing\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n        return thing.bound && Runnable.isRunnable(thing.bound);\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        return new RunnableBinding({\n            bound: this.bound,\n            kwargs: this.kwargs,\n            config: this.config,\n            configFactories: [\n                (config) => ({\n                    callbacks: [\n                        new RootListenersTracer({\n                            config,\n                            onStart,\n                            onEnd,\n                            onError,\n                        }),\n                    ],\n                }),\n            ],\n        });\n    }\n}\n/**\n * A runnable that delegates calls to another runnable\n * with each element of the input sequence.\n * @example\n * ```typescript\n * import { RunnableEach, RunnableLambda } from \"@langchain/core/runnables\";\n *\n * const toUpperCase = (input: string): string => input.toUpperCase();\n * const addGreeting = (input: string): string => `Hello, ${input}!`;\n *\n * const upperCaseLambda = RunnableLambda.from(toUpperCase);\n * const greetingLambda = RunnableLambda.from(addGreeting);\n *\n * const chain = new RunnableEach({\n *   bound: upperCaseLambda.pipe(greetingLambda),\n * });\n *\n * const result = await chain.invoke([\"alice\", \"bob\", \"carol\"])\n *\n * // [\"Hello, ALICE!\", \"Hello, BOB!\", \"Hello, CAROL!\"]\n * ```\n *\n * @deprecated This will be removed in the next breaking release.\n */\nexport class RunnableEach extends Runnable {\n    static lc_name() {\n        return \"RunnableEach\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"bound\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.bound = fields.bound;\n    }\n    /**\n     * Binds the runnable with the specified arguments.\n     * @param kwargs The arguments to bind the runnable with.\n     * @returns A new instance of the `RunnableEach` class that is bound with the specified arguments.\n     *\n     * @deprecated Use {@link withConfig} instead. This will be removed in the next breaking release.\n     */\n    bind(kwargs) {\n        return new RunnableEach({\n            bound: this.bound.bind(kwargs),\n        });\n    }\n    /**\n     * Invokes the runnable with the specified input and configuration.\n     * @param input The input to invoke the runnable with.\n     * @param config The configuration to invoke the runnable with.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async invoke(inputs, config) {\n        return this._callWithConfig(this._invoke.bind(this), inputs, config);\n    }\n    /**\n     * A helper method that is used to invoke the runnable with the specified input and configuration.\n     * @param input The input to invoke the runnable with.\n     * @param config The configuration to invoke the runnable with.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async _invoke(inputs, config, runManager) {\n        return this.bound.batch(inputs, patchConfig(config, { callbacks: runManager?.getChild() }));\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        return new RunnableEach({\n            bound: this.bound.withListeners({ onStart, onEnd, onError }),\n        });\n    }\n}\n/**\n * Base class for runnables that can be retried a\n * specified number of times.\n * @example\n * ```typescript\n * import {\n *   RunnableLambda,\n *   RunnableRetry,\n * } from \"@langchain/core/runnables\";\n *\n * // Simulate an API call that fails\n * const simulateApiCall = (input: string): string => {\n *   console.log(`Attempting API call with input: ${input}`);\n *   throw new Error(\"API call failed due to network issue\");\n * };\n *\n * const apiCallLambda = RunnableLambda.from(simulateApiCall);\n *\n * // Apply retry logic using the .withRetry() method\n * const apiCallWithRetry = apiCallLambda.withRetry({ stopAfterAttempt: 3 });\n *\n * // Alternatively, create a RunnableRetry instance manually\n * const manualRetry = new RunnableRetry({\n *   bound: apiCallLambda,\n *   maxAttemptNumber: 3,\n *   config: {},\n * });\n *\n * // Example invocation using the .withRetry() method\n * const res = await apiCallWithRetry\n *   .invoke(\"Request 1\")\n *   .catch((error) => {\n *     console.error(\"Failed after multiple retries:\", error.message);\n *   });\n *\n * // Example invocation using the manual retry instance\n * const res2 = await manualRetry\n *   .invoke(\"Request 2\")\n *   .catch((error) => {\n *     console.error(\"Failed after multiple retries:\", error.message);\n *   });\n * ```\n */\nexport class RunnableRetry extends RunnableBinding {\n    static lc_name() {\n        return \"RunnableRetry\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"maxAttemptNumber\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"onFailedAttempt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: () => { }\n        });\n        this.maxAttemptNumber = fields.maxAttemptNumber ?? this.maxAttemptNumber;\n        this.onFailedAttempt = fields.onFailedAttempt ?? this.onFailedAttempt;\n    }\n    _patchConfigForRetry(attempt, config, runManager) {\n        const tag = attempt > 1 ? `retry:attempt:${attempt}` : undefined;\n        return patchConfig(config, { callbacks: runManager?.getChild(tag) });\n    }\n    async _invoke(input, config, runManager) {\n        return pRetry((attemptNumber) => super.invoke(input, this._patchConfigForRetry(attemptNumber, config, runManager)), {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onFailedAttempt: (error) => this.onFailedAttempt(error, input),\n            retries: Math.max(this.maxAttemptNumber - 1, 0),\n            randomize: true,\n        });\n    }\n    /**\n     * Method that invokes the runnable with the specified input, run manager,\n     * and config. It handles the retry logic by catching any errors and\n     * recursively invoking itself with the updated config for the next retry\n     * attempt.\n     * @param input The input for the runnable.\n     * @param runManager The run manager for the runnable.\n     * @param config The config for the runnable.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async invoke(input, config) {\n        return this._callWithConfig(this._invoke.bind(this), input, config);\n    }\n    async _batch(inputs, configs, runManagers, batchOptions) {\n        const resultsMap = {};\n        try {\n            await pRetry(async (attemptNumber) => {\n                const remainingIndexes = inputs\n                    .map((_, i) => i)\n                    .filter((i) => resultsMap[i.toString()] === undefined ||\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                    resultsMap[i.toString()] instanceof Error);\n                const remainingInputs = remainingIndexes.map((i) => inputs[i]);\n                const patchedConfigs = remainingIndexes.map((i) => this._patchConfigForRetry(attemptNumber, configs?.[i], runManagers?.[i]));\n                const results = await super.batch(remainingInputs, patchedConfigs, {\n                    ...batchOptions,\n                    returnExceptions: true,\n                });\n                let firstException;\n                for (let i = 0; i < results.length; i += 1) {\n                    const result = results[i];\n                    const resultMapIndex = remainingIndexes[i];\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                    if (result instanceof Error) {\n                        if (firstException === undefined) {\n                            firstException = result;\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            firstException.input = remainingInputs[i];\n                        }\n                    }\n                    resultsMap[resultMapIndex.toString()] = result;\n                }\n                if (firstException) {\n                    throw firstException;\n                }\n                return results;\n            }, {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                onFailedAttempt: (error) => this.onFailedAttempt(error, error.input),\n                retries: Math.max(this.maxAttemptNumber - 1, 0),\n                randomize: true,\n            });\n        }\n        catch (e) {\n            if (batchOptions?.returnExceptions !== true) {\n                throw e;\n            }\n        }\n        return Object.keys(resultsMap)\n            .sort((a, b) => parseInt(a, 10) - parseInt(b, 10))\n            .map((key) => resultsMap[parseInt(key, 10)]);\n    }\n    async batch(inputs, options, batchOptions) {\n        return this._batchWithConfig(this._batch.bind(this), inputs, options, batchOptions);\n    }\n}\n/**\n * A sequence of runnables, where the output of each is the input of the next.\n * @example\n * ```typescript\n * const promptTemplate = PromptTemplate.fromTemplate(\n *   \"Tell me a joke about {topic}\",\n * );\n * const chain = RunnableSequence.from([promptTemplate, new ChatOpenAI({})]);\n * const result = await chain.invoke({ topic: \"bears\" });\n * ```\n */\nexport class RunnableSequence extends Runnable {\n    static lc_name() {\n        return \"RunnableSequence\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"first\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"middle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"last\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"omitSequenceTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        this.first = fields.first;\n        this.middle = fields.middle ?? this.middle;\n        this.last = fields.last;\n        this.name = fields.name;\n        this.omitSequenceTags = fields.omitSequenceTags ?? this.omitSequenceTags;\n    }\n    get steps() {\n        return [this.first, ...this.middle, this.last];\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), config.runId, undefined, undefined, undefined, config?.runName);\n        delete config.runId;\n        let nextStepInput = input;\n        let finalOutput;\n        try {\n            const initialSteps = [this.first, ...this.middle];\n            for (let i = 0; i < initialSteps.length; i += 1) {\n                const step = initialSteps[i];\n                const promise = step.invoke(nextStepInput, patchConfig(config, {\n                    callbacks: runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:${i + 1}`),\n                }));\n                nextStepInput = await raceWithSignal(promise, options?.signal);\n            }\n            // TypeScript can't detect that the last output of the sequence returns RunOutput, so call it out of the loop here\n            if (options?.signal?.aborted) {\n                throw new Error(\"Aborted\");\n            }\n            finalOutput = await this.last.invoke(nextStepInput, patchConfig(config, {\n                callbacks: runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:${this.steps.length}`),\n            }));\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(finalOutput, \"output\"));\n        return finalOutput;\n    }\n    async batch(inputs, options, batchOptions) {\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(configList.map(getCallbackManagerForConfig));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), configList[i].runId, undefined, undefined, undefined, configList[i].runName);\n            delete configList[i].runId;\n            return handleStartRes;\n        }));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let nextStepInputs = inputs;\n        try {\n            for (let i = 0; i < this.steps.length; i += 1) {\n                const step = this.steps[i];\n                const promise = step.batch(nextStepInputs, runManagers.map((runManager, j) => {\n                    const childRunManager = runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:${i + 1}`);\n                    return patchConfig(configList[j], { callbacks: childRunManager });\n                }), batchOptions);\n                nextStepInputs = await raceWithSignal(promise, configList[0]?.signal);\n            }\n        }\n        catch (e) {\n            await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(e)));\n            throw e;\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainEnd(_coerceToDict(nextStepInputs, \"output\"))));\n        return nextStepInputs;\n    }\n    async *_streamIterator(input, options) {\n        const callbackManager_ = await getCallbackManagerForConfig(options);\n        const { runId, ...otherOptions } = options ?? {};\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), runId, undefined, undefined, undefined, otherOptions?.runName);\n        const steps = [this.first, ...this.middle, this.last];\n        let concatSupported = true;\n        let finalOutput;\n        async function* inputGenerator() {\n            yield input;\n        }\n        try {\n            let finalGenerator = steps[0].transform(inputGenerator(), patchConfig(otherOptions, {\n                callbacks: runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:1`),\n            }));\n            for (let i = 1; i < steps.length; i += 1) {\n                const step = steps[i];\n                finalGenerator = await step.transform(finalGenerator, patchConfig(otherOptions, {\n                    callbacks: runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:${i + 1}`),\n                }));\n            }\n            for await (const chunk of finalGenerator) {\n                options?.signal?.throwIfAborted();\n                yield chunk;\n                if (concatSupported) {\n                    if (finalOutput === undefined) {\n                        finalOutput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalOutput = concat(finalOutput, chunk);\n                        }\n                        catch (e) {\n                            finalOutput = undefined;\n                            concatSupported = false;\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(finalOutput, \"output\"));\n    }\n    getGraph(config) {\n        const graph = new Graph();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let currentLastNode = null;\n        this.steps.forEach((step, index) => {\n            const stepGraph = step.getGraph(config);\n            if (index !== 0) {\n                stepGraph.trimFirstNode();\n            }\n            if (index !== this.steps.length - 1) {\n                stepGraph.trimLastNode();\n            }\n            graph.extend(stepGraph);\n            const stepFirstNode = stepGraph.firstNode();\n            if (!stepFirstNode) {\n                throw new Error(`Runnable ${step} has no first node`);\n            }\n            if (currentLastNode) {\n                graph.addEdge(currentLastNode, stepFirstNode);\n            }\n            currentLastNode = stepGraph.lastNode();\n        });\n        return graph;\n    }\n    pipe(coerceable) {\n        if (RunnableSequence.isRunnableSequence(coerceable)) {\n            return new RunnableSequence({\n                first: this.first,\n                middle: this.middle.concat([\n                    this.last,\n                    coerceable.first,\n                    ...coerceable.middle,\n                ]),\n                last: coerceable.last,\n                name: this.name ?? coerceable.name,\n            });\n        }\n        else {\n            return new RunnableSequence({\n                first: this.first,\n                middle: [...this.middle, this.last],\n                last: _coerceToRunnable(coerceable),\n                name: this.name,\n            });\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static isRunnableSequence(thing) {\n        return Array.isArray(thing.middle) && Runnable.isRunnable(thing);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static from([first, ...runnables], nameOrFields) {\n        let extra = {};\n        if (typeof nameOrFields === \"string\") {\n            extra.name = nameOrFields;\n        }\n        else if (nameOrFields !== undefined) {\n            extra = nameOrFields;\n        }\n        return new RunnableSequence({\n            ...extra,\n            first: _coerceToRunnable(first),\n            middle: runnables.slice(0, -1).map(_coerceToRunnable),\n            last: _coerceToRunnable(runnables[runnables.length - 1]),\n        });\n    }\n}\n/**\n * A runnable that runs a mapping of runnables in parallel,\n * and returns a mapping of their outputs.\n * @example\n * ```typescript\n * const mapChain = RunnableMap.from({\n *   joke: PromptTemplate.fromTemplate(\"Tell me a joke about {topic}\").pipe(\n *     new ChatAnthropic({}),\n *   ),\n *   poem: PromptTemplate.fromTemplate(\"write a 2-line poem about {topic}\").pipe(\n *     new ChatAnthropic({}),\n *   ),\n * });\n * const result = await mapChain.invoke({ topic: \"bear\" });\n * ```\n */\nexport class RunnableMap extends Runnable {\n    static lc_name() {\n        return \"RunnableMap\";\n    }\n    getStepsKeys() {\n        return Object.keys(this.steps);\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"steps\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.steps = {};\n        for (const [key, value] of Object.entries(fields.steps)) {\n            this.steps[key] = _coerceToRunnable(value);\n        }\n    }\n    static from(steps) {\n        return new RunnableMap({ steps });\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), {\n            input,\n        }, config.runId, undefined, undefined, undefined, config?.runName);\n        delete config.runId;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const output = {};\n        try {\n            const promises = Object.entries(this.steps).map(async ([key, runnable]) => {\n                output[key] = await runnable.invoke(input, patchConfig(config, {\n                    callbacks: runManager?.getChild(`map:key:${key}`),\n                }));\n            });\n            await raceWithSignal(Promise.all(promises), options?.signal);\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(output);\n        return output;\n    }\n    async *_transform(generator, runManager, options) {\n        // shallow copy steps to ignore changes while iterating\n        const steps = { ...this.steps };\n        // each step gets a copy of the input iterator\n        const inputCopies = atee(generator, Object.keys(steps).length);\n        // start the first iteration of each output iterator\n        const tasks = new Map(Object.entries(steps).map(([key, runnable], i) => {\n            const gen = runnable.transform(inputCopies[i], patchConfig(options, {\n                callbacks: runManager?.getChild(`map:key:${key}`),\n            }));\n            return [key, gen.next().then((result) => ({ key, gen, result }))];\n        }));\n        // yield chunks as they become available,\n        // starting new iterations as needed,\n        // until all iterators are done\n        while (tasks.size) {\n            const promise = Promise.race(tasks.values());\n            const { key, result, gen } = await raceWithSignal(promise, options?.signal);\n            tasks.delete(key);\n            if (!result.done) {\n                yield { [key]: result.value };\n                tasks.set(key, gen.next().then((result) => ({ key, gen, result })));\n            }\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\n/**\n * A runnable that wraps a traced LangSmith function.\n */\nexport class RunnableTraceable extends Runnable {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (!isTraceableFunction(fields.func)) {\n            throw new Error(\"RunnableTraceable requires a function that is wrapped in traceable higher-order function\");\n        }\n        this.func = fields.func;\n    }\n    async invoke(input, options) {\n        const [config] = this._getOptionsList(options ?? {}, 1);\n        const callbacks = await getCallbackManagerForConfig(config);\n        const promise = this.func(patchConfig(config, { callbacks }), input);\n        return raceWithSignal(promise, config?.signal);\n    }\n    async *_streamIterator(input, options) {\n        const [config] = this._getOptionsList(options ?? {}, 1);\n        const result = await this.invoke(input, options);\n        if (isAsyncIterable(result)) {\n            for await (const item of result) {\n                config?.signal?.throwIfAborted();\n                yield item;\n            }\n            return;\n        }\n        if (isIterator(result)) {\n            while (true) {\n                config?.signal?.throwIfAborted();\n                const state = result.next();\n                if (state.done)\n                    break;\n                yield state.value;\n            }\n            return;\n        }\n        yield result;\n    }\n    static from(func) {\n        return new RunnableTraceable({ func });\n    }\n}\nfunction assertNonTraceableFunction(func) {\n    if (isTraceableFunction(func)) {\n        throw new Error(\"RunnableLambda requires a function that is not wrapped in traceable higher-order function. This shouldn't happen.\");\n    }\n}\n/**\n * A runnable that wraps an arbitrary function that takes a single argument.\n * @example\n * ```typescript\n * import { RunnableLambda } from \"@langchain/core/runnables\";\n *\n * const add = (input: { x: number; y: number }) => input.x + input.y;\n *\n * const multiply = (input: { value: number; multiplier: number }) =>\n *   input.value * input.multiplier;\n *\n * // Create runnables for the functions\n * const addLambda = RunnableLambda.from(add);\n * const multiplyLambda = RunnableLambda.from(multiply);\n *\n * // Chain the lambdas for a mathematical operation\n * const chainedLambda = addLambda.pipe((result) =>\n *   multiplyLambda.invoke({ value: result, multiplier: 2 })\n * );\n *\n * // Example invocation of the chainedLambda\n * const result = await chainedLambda.invoke({ x: 2, y: 3 });\n *\n * // Will log \"10\" (since (2 + 3) * 2 = 10)\n * ```\n */\nexport class RunnableLambda extends Runnable {\n    static lc_name() {\n        return \"RunnableLambda\";\n    }\n    constructor(fields) {\n        if (isTraceableFunction(fields.func)) {\n            // eslint-disable-next-line no-constructor-return\n            return RunnableTraceable.from(fields.func);\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        assertNonTraceableFunction(fields.func);\n        this.func = fields.func;\n    }\n    static from(func) {\n        return new RunnableLambda({\n            func,\n        });\n    }\n    async _invoke(input, config, runManager) {\n        return new Promise((resolve, reject) => {\n            const childConfig = patchConfig(config, {\n                callbacks: runManager?.getChild(),\n                recursionLimit: (config?.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n            });\n            void AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(childConfig), async () => {\n                try {\n                    let output = await this.func(input, {\n                        ...childConfig,\n                    });\n                    if (output && Runnable.isRunnable(output)) {\n                        if (config?.recursionLimit === 0) {\n                            throw new Error(\"Recursion limit reached.\");\n                        }\n                        output = await output.invoke(input, {\n                            ...childConfig,\n                            recursionLimit: (childConfig.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n                        });\n                    }\n                    else if (isAsyncIterable(output)) {\n                        let finalOutput;\n                        for await (const chunk of consumeAsyncIterableInContext(childConfig, output)) {\n                            config?.signal?.throwIfAborted();\n                            if (finalOutput === undefined) {\n                                finalOutput = chunk;\n                            }\n                            else {\n                                // Make a best effort to gather, for any type that supports concat.\n                                try {\n                                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                    finalOutput = concat(finalOutput, chunk);\n                                }\n                                catch (e) {\n                                    finalOutput = chunk;\n                                }\n                            }\n                        }\n                        output = finalOutput;\n                    }\n                    else if (isIterableIterator(output)) {\n                        let finalOutput;\n                        for (const chunk of consumeIteratorInContext(childConfig, output)) {\n                            config?.signal?.throwIfAborted();\n                            if (finalOutput === undefined) {\n                                finalOutput = chunk;\n                            }\n                            else {\n                                // Make a best effort to gather, for any type that supports concat.\n                                try {\n                                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                    finalOutput = concat(finalOutput, chunk);\n                                }\n                                catch (e) {\n                                    finalOutput = chunk;\n                                }\n                            }\n                        }\n                        output = finalOutput;\n                    }\n                    resolve(output);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n    async invoke(input, options) {\n        return this._callWithConfig(this._invoke.bind(this), input, options);\n    }\n    async *_transform(generator, runManager, config) {\n        let finalChunk;\n        for await (const chunk of generator) {\n            if (finalChunk === undefined) {\n                finalChunk = chunk;\n            }\n            else {\n                // Make a best effort to gather, for any type that supports concat.\n                try {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    finalChunk = concat(finalChunk, chunk);\n                }\n                catch (e) {\n                    finalChunk = chunk;\n                }\n            }\n        }\n        const childConfig = patchConfig(config, {\n            callbacks: runManager?.getChild(),\n            recursionLimit: (config?.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n        });\n        const output = await new Promise((resolve, reject) => {\n            void AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(childConfig), async () => {\n                try {\n                    const res = await this.func(finalChunk, {\n                        ...childConfig,\n                        config: childConfig,\n                    });\n                    resolve(res);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n        if (output && Runnable.isRunnable(output)) {\n            if (config?.recursionLimit === 0) {\n                throw new Error(\"Recursion limit reached.\");\n            }\n            const stream = await output.stream(finalChunk, childConfig);\n            for await (const chunk of stream) {\n                yield chunk;\n            }\n        }\n        else if (isAsyncIterable(output)) {\n            for await (const chunk of consumeAsyncIterableInContext(childConfig, output)) {\n                config?.signal?.throwIfAborted();\n                yield chunk;\n            }\n        }\n        else if (isIterableIterator(output)) {\n            for (const chunk of consumeIteratorInContext(childConfig, output)) {\n                config?.signal?.throwIfAborted();\n                yield chunk;\n            }\n        }\n        else {\n            yield output;\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\n/**\n * A runnable that runs a mapping of runnables in parallel,\n * and returns a mapping of their outputs.\n * @example\n * ```typescript\n * import {\n *   RunnableLambda,\n *   RunnableParallel,\n * } from \"@langchain/core/runnables\";\n *\n * const addYears = (age: number): number => age + 5;\n * const yearsToFifty = (age: number): number => 50 - age;\n * const yearsToHundred = (age: number): number => 100 - age;\n *\n * const addYearsLambda = RunnableLambda.from(addYears);\n * const milestoneFiftyLambda = RunnableLambda.from(yearsToFifty);\n * const milestoneHundredLambda = RunnableLambda.from(yearsToHundred);\n *\n * // Pipe will coerce objects into RunnableParallel by default, but we\n * // explicitly instantiate one here to demonstrate\n * const sequence = addYearsLambda.pipe(\n *   RunnableParallel.from({\n *     years_to_fifty: milestoneFiftyLambda,\n *     years_to_hundred: milestoneHundredLambda,\n *   })\n * );\n *\n * // Invoke the sequence with a single age input\n * const res = sequence.invoke(25);\n *\n * // { years_to_fifty: 25, years_to_hundred: 75 }\n * ```\n */\nexport class RunnableParallel extends RunnableMap {\n}\n/**\n * A Runnable that can fallback to other Runnables if it fails.\n * External APIs (e.g., APIs for a language model) may at times experience\n * degraded performance or even downtime.\n *\n * In these cases, it can be useful to have a fallback Runnable that can be\n * used in place of the original Runnable (e.g., fallback to another LLM provider).\n *\n * Fallbacks can be defined at the level of a single Runnable, or at the level\n * of a chain of Runnables. Fallbacks are tried in order until one succeeds or\n * all fail.\n *\n * While you can instantiate a `RunnableWithFallbacks` directly, it is usually\n * more convenient to use the `withFallbacks` method on an existing Runnable.\n *\n * When streaming, fallbacks will only be called on failures during the initial\n * stream creation. Errors that occur after a stream starts will not fallback\n * to the next Runnable.\n *\n * @example\n * ```typescript\n * import {\n *   RunnableLambda,\n *   RunnableWithFallbacks,\n * } from \"@langchain/core/runnables\";\n *\n * const primaryOperation = (input: string): string => {\n *   if (input !== \"safe\") {\n *     throw new Error(\"Primary operation failed due to unsafe input\");\n *   }\n *   return `Processed: ${input}`;\n * };\n *\n * // Define a fallback operation that processes the input differently\n * const fallbackOperation = (input: string): string =>\n *   `Fallback processed: ${input}`;\n *\n * const primaryRunnable = RunnableLambda.from(primaryOperation);\n * const fallbackRunnable = RunnableLambda.from(fallbackOperation);\n *\n * // Apply the fallback logic using the .withFallbacks() method\n * const runnableWithFallback = primaryRunnable.withFallbacks([fallbackRunnable]);\n *\n * // Alternatively, create a RunnableWithFallbacks instance manually\n * const manualFallbackChain = new RunnableWithFallbacks({\n *   runnable: primaryRunnable,\n *   fallbacks: [fallbackRunnable],\n * });\n *\n * // Example invocation using .withFallbacks()\n * const res = await runnableWithFallback\n *   .invoke(\"unsafe input\")\n *   .catch((error) => {\n *     console.error(\"Failed after all attempts:\", error.message);\n *   });\n *\n * // \"Fallback processed: unsafe input\"\n *\n * // Example invocation using manual instantiation\n * const res = await manualFallbackChain\n *   .invoke(\"safe\")\n *   .catch((error) => {\n *     console.error(\"Failed after all attempts:\", error.message);\n *   });\n *\n * // \"Processed: safe\"\n * ```\n */\nexport class RunnableWithFallbacks extends Runnable {\n    static lc_name() {\n        return \"RunnableWithFallbacks\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fallbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.runnable = fields.runnable;\n        this.fallbacks = fields.fallbacks;\n    }\n    *runnables() {\n        yield this.runnable;\n        for (const fallback of this.fallbacks) {\n            yield fallback;\n        }\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const { runId, ...otherConfigFields } = config;\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), runId, undefined, undefined, undefined, otherConfigFields?.runName);\n        const childConfig = patchConfig(otherConfigFields, {\n            callbacks: runManager?.getChild(),\n        });\n        const res = await AsyncLocalStorageProviderSingleton.runWithConfig(childConfig, async () => {\n            let firstError;\n            for (const runnable of this.runnables()) {\n                config?.signal?.throwIfAborted();\n                try {\n                    const output = await runnable.invoke(input, childConfig);\n                    await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n                    return output;\n                }\n                catch (e) {\n                    if (firstError === undefined) {\n                        firstError = e;\n                    }\n                }\n            }\n            if (firstError === undefined) {\n                throw new Error(\"No error stored at end of fallback.\");\n            }\n            await runManager?.handleChainError(firstError);\n            throw firstError;\n        });\n        return res;\n    }\n    async *_streamIterator(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const { runId, ...otherConfigFields } = config;\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), runId, undefined, undefined, undefined, otherConfigFields?.runName);\n        let firstError;\n        let stream;\n        for (const runnable of this.runnables()) {\n            config?.signal?.throwIfAborted();\n            const childConfig = patchConfig(otherConfigFields, {\n                callbacks: runManager?.getChild(),\n            });\n            try {\n                const originalStream = await runnable.stream(input, childConfig);\n                stream = consumeAsyncIterableInContext(childConfig, originalStream);\n                break;\n            }\n            catch (e) {\n                if (firstError === undefined) {\n                    firstError = e;\n                }\n            }\n        }\n        if (stream === undefined) {\n            const error = firstError ?? new Error(\"No error stored at end of fallback.\");\n            await runManager?.handleChainError(error);\n            throw error;\n        }\n        let output;\n        try {\n            for await (const chunk of stream) {\n                yield chunk;\n                try {\n                    output = output === undefined ? output : concat(output, chunk);\n                }\n                catch (e) {\n                    output = undefined;\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n    }\n    async batch(inputs, options, batchOptions) {\n        if (batchOptions?.returnExceptions) {\n            throw new Error(\"Not implemented.\");\n        }\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(configList.map((config) => getCallbackManagerForConfig(config)));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), configList[i].runId, undefined, undefined, undefined, configList[i].runName);\n            delete configList[i].runId;\n            return handleStartRes;\n        }));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let firstError;\n        for (const runnable of this.runnables()) {\n            configList[0].signal?.throwIfAborted();\n            try {\n                const outputs = await runnable.batch(inputs, runManagers.map((runManager, j) => patchConfig(configList[j], {\n                    callbacks: runManager?.getChild(),\n                })), batchOptions);\n                await Promise.all(runManagers.map((runManager, i) => runManager?.handleChainEnd(_coerceToDict(outputs[i], \"output\"))));\n                return outputs;\n            }\n            catch (e) {\n                if (firstError === undefined) {\n                    firstError = e;\n                }\n            }\n        }\n        if (!firstError) {\n            throw new Error(\"No error stored at end of fallbacks.\");\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(firstError)));\n        throw firstError;\n    }\n}\n// TODO: Figure out why the compiler needs help eliminating Error as a RunOutput type\nexport function _coerceToRunnable(coerceable) {\n    if (typeof coerceable === \"function\") {\n        return new RunnableLambda({ func: coerceable });\n    }\n    else if (Runnable.isRunnable(coerceable)) {\n        return coerceable;\n    }\n    else if (!Array.isArray(coerceable) && typeof coerceable === \"object\") {\n        const runnables = {};\n        for (const [key, value] of Object.entries(coerceable)) {\n            runnables[key] = _coerceToRunnable(value);\n        }\n        return new RunnableMap({\n            steps: runnables,\n        });\n    }\n    else {\n        throw new Error(`Expected a Runnable, function or object.\\nInstead got an unsupported type.`);\n    }\n}\n/**\n * A runnable that assigns key-value pairs to inputs of type `Record<string, unknown>`.\n * @example\n * ```typescript\n * import {\n *   RunnableAssign,\n *   RunnableLambda,\n *   RunnableParallel,\n * } from \"@langchain/core/runnables\";\n *\n * const calculateAge = (x: { birthYear: number }): { age: number } => {\n *   const currentYear = new Date().getFullYear();\n *   return { age: currentYear - x.birthYear };\n * };\n *\n * const createGreeting = (x: { name: string }): { greeting: string } => {\n *   return { greeting: `Hello, ${x.name}!` };\n * };\n *\n * const mapper = RunnableParallel.from({\n *   age_step: RunnableLambda.from(calculateAge),\n *   greeting_step: RunnableLambda.from(createGreeting),\n * });\n *\n * const runnableAssign = new RunnableAssign({ mapper });\n *\n * const res = await runnableAssign.invoke({ name: \"Alice\", birthYear: 1990 });\n *\n * // { name: \"Alice\", birthYear: 1990, age_step: { age: 34 }, greeting_step: { greeting: \"Hello, Alice!\" } }\n * ```\n */\nexport class RunnableAssign extends Runnable {\n    static lc_name() {\n        return \"RunnableAssign\";\n    }\n    constructor(fields) {\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        if (fields instanceof RunnableMap) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { mapper: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"mapper\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.mapper = fields.mapper;\n    }\n    async invoke(input, options) {\n        const mapperResult = await this.mapper.invoke(input, options);\n        return {\n            ...input,\n            ...mapperResult,\n        };\n    }\n    async *_transform(generator, runManager, options) {\n        // collect mapper keys\n        const mapperKeys = this.mapper.getStepsKeys();\n        // create two input gens, one for the mapper, one for the input\n        const [forPassthrough, forMapper] = atee(generator);\n        // create mapper output gen\n        const mapperOutput = this.mapper.transform(forMapper, patchConfig(options, { callbacks: runManager?.getChild() }));\n        // start the mapper\n        const firstMapperChunkPromise = mapperOutput.next();\n        // yield the passthrough\n        for await (const chunk of forPassthrough) {\n            if (typeof chunk !== \"object\" || Array.isArray(chunk)) {\n                throw new Error(`RunnableAssign can only be used with objects as input, got ${typeof chunk}`);\n            }\n            const filtered = Object.fromEntries(Object.entries(chunk).filter(([key]) => !mapperKeys.includes(key)));\n            if (Object.keys(filtered).length > 0) {\n                yield filtered;\n            }\n        }\n        // yield the mapper output\n        yield (await firstMapperChunkPromise).value;\n        for await (const chunk of mapperOutput) {\n            yield chunk;\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\n/**\n * A runnable that assigns key-value pairs to inputs of type `Record<string, unknown>`.\n * Useful for streaming, can be automatically created and chained by calling `runnable.pick();`.\n * @example\n * ```typescript\n * import { RunnablePick } from \"@langchain/core/runnables\";\n *\n * const inputData = {\n *   name: \"John\",\n *   age: 30,\n *   city: \"New York\",\n *   country: \"USA\",\n *   email: \"john.doe@example.com\",\n *   phone: \"+1234567890\",\n * };\n *\n * const basicInfoRunnable = new RunnablePick([\"name\", \"city\"]);\n *\n * // Example invocation\n * const res = await basicInfoRunnable.invoke(inputData);\n *\n * // { name: 'John', city: 'New York' }\n * ```\n */\nexport class RunnablePick extends Runnable {\n    static lc_name() {\n        return \"RunnablePick\";\n    }\n    constructor(fields) {\n        if (typeof fields === \"string\" || Array.isArray(fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { keys: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"keys\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.keys = fields.keys;\n    }\n    async _pick(input) {\n        if (typeof this.keys === \"string\") {\n            return input[this.keys];\n        }\n        else {\n            const picked = this.keys\n                .map((key) => [key, input[key]])\n                .filter((v) => v[1] !== undefined);\n            return picked.length === 0\n                ? undefined\n                : Object.fromEntries(picked);\n        }\n    }\n    async invoke(input, options) {\n        return this._callWithConfig(this._pick.bind(this), input, options);\n    }\n    async *_transform(generator) {\n        for await (const chunk of generator) {\n            const picked = await this._pick(chunk);\n            if (picked !== undefined) {\n                yield picked;\n            }\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\nexport class RunnableToolLike extends RunnableBinding {\n    constructor(fields) {\n        const sequence = RunnableSequence.from([\n            RunnableLambda.from(async (input) => {\n                let toolInput;\n                if (_isToolCall(input)) {\n                    try {\n                        toolInput = await interopParseAsync(this.schema, input.args);\n                    }\n                    catch (e) {\n                        throw new ToolInputParsingException(`Received tool input did not match expected schema`, JSON.stringify(input.args));\n                    }\n                }\n                else {\n                    toolInput = input;\n                }\n                return toolInput;\n            }).withConfig({ runName: `${fields.name}:parse_input` }),\n            fields.bound,\n        ]).withConfig({ runName: fields.name });\n        super({\n            bound: sequence,\n            config: fields.config ?? {},\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.description = fields.description;\n        this.schema = fields.schema;\n    }\n    static lc_name() {\n        return \"RunnableToolLike\";\n    }\n}\n/**\n * Given a runnable and a Zod schema, convert the runnable to a tool.\n *\n * @template RunInput The input type for the runnable.\n * @template RunOutput The output type for the runnable.\n *\n * @param {Runnable<RunInput, RunOutput>} runnable The runnable to convert to a tool.\n * @param fields\n * @param {string | undefined} [fields.name] The name of the tool. If not provided, it will default to the name of the runnable.\n * @param {string | undefined} [fields.description] The description of the tool. Falls back to the description on the Zod schema if not provided, or undefined if neither are provided.\n * @param {InteropZodType<RunInput>} [fields.schema] The Zod schema for the input of the tool. Infers the Zod type from the input type of the runnable.\n * @returns {RunnableToolLike<InteropZodType<RunInput>, RunOutput>} An instance of `RunnableToolLike` which is a runnable that can be used as a tool.\n */\nexport function convertRunnableToTool(runnable, fields) {\n    const name = fields.name ?? runnable.getName();\n    const description = fields.description ?? getSchemaDescription(fields.schema);\n    if (isSimpleStringZodSchema(fields.schema)) {\n        return new RunnableToolLike({\n            name,\n            description,\n            schema: z\n                .object({ input: z.string() })\n                .transform((input) => input.input),\n            bound: runnable,\n        });\n    }\n    return new RunnableToolLike({\n        name,\n        description,\n        schema: fields.schema,\n        bound: runnable,\n    });\n}\n","import * as uuid from \"uuid\";\nimport { Client } from \"./client.js\";\nimport { isTracingEnabled } from \"./env.js\";\nimport { _LC_CONTEXT_VARIABLES_KEY } from \"./singletons/constants.js\";\nimport { getEnvironmentVariable, getRuntimeEnvironment, } from \"./utils/env.js\";\nimport { getDefaultProjectName } from \"./utils/project.js\";\nimport { warnOnce } from \"./utils/warn.js\";\nfunction stripNonAlphanumeric(input) {\n    return input.replace(/[-:.]/g, \"\");\n}\nexport function convertToDottedOrderFormat(epoch, runId, executionOrder = 1) {\n    // Date only has millisecond precision, so we use the microseconds to break\n    // possible ties, avoiding incorrect run order\n    const paddedOrder = executionOrder.toFixed(0).slice(0, 3).padStart(3, \"0\");\n    return (stripNonAlphanumeric(`${new Date(epoch).toISOString().slice(0, -1)}${paddedOrder}Z`) + runId);\n}\n/**\n * Baggage header information\n */\nclass Baggage {\n    constructor(metadata, tags, project_name, replicas) {\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"project_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"replicas\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.metadata = metadata;\n        this.tags = tags;\n        this.project_name = project_name;\n        this.replicas = replicas;\n    }\n    static fromHeader(value) {\n        const items = value.split(\",\");\n        let metadata = {};\n        let tags = [];\n        let project_name;\n        let replicas;\n        for (const item of items) {\n            const [key, uriValue] = item.split(\"=\");\n            const value = decodeURIComponent(uriValue);\n            if (key === \"langsmith-metadata\") {\n                metadata = JSON.parse(value);\n            }\n            else if (key === \"langsmith-tags\") {\n                tags = value.split(\",\");\n            }\n            else if (key === \"langsmith-project\") {\n                project_name = value;\n            }\n            else if (key === \"langsmith-replicas\") {\n                replicas = JSON.parse(value);\n            }\n        }\n        return new Baggage(metadata, tags, project_name, replicas);\n    }\n    toHeader() {\n        const items = [];\n        if (this.metadata && Object.keys(this.metadata).length > 0) {\n            items.push(`langsmith-metadata=${encodeURIComponent(JSON.stringify(this.metadata))}`);\n        }\n        if (this.tags && this.tags.length > 0) {\n            items.push(`langsmith-tags=${encodeURIComponent(this.tags.join(\",\"))}`);\n        }\n        if (this.project_name) {\n            items.push(`langsmith-project=${encodeURIComponent(this.project_name)}`);\n        }\n        return items.join(\",\");\n    }\n}\nexport class RunTree {\n    constructor(originalConfig) {\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"run_type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"project_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"parent_run\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"child_runs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"start_time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"end_time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"extra\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"error\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"serialized\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"reference_example_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"events\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"trace_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"dotted_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tracingEnabled\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"execution_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"child_execution_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Attachments associated with the run.\n         * Each entry is a tuple of [mime_type, bytes]\n         */\n        Object.defineProperty(this, \"attachments\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Projects to replicate this run to with optional updates.\n         */\n        Object.defineProperty(this, \"replicas\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // If you pass in a run tree directly, return a shallow clone\n        if (isRunTree(originalConfig)) {\n            Object.assign(this, { ...originalConfig });\n            return;\n        }\n        const defaultConfig = RunTree.getDefaultConfig();\n        const { metadata, ...config } = originalConfig;\n        const client = config.client ?? RunTree.getSharedClient();\n        const dedupedMetadata = {\n            ...metadata,\n            ...config?.extra?.metadata,\n        };\n        config.extra = { ...config.extra, metadata: dedupedMetadata };\n        Object.assign(this, { ...defaultConfig, ...config, client });\n        if (!this.trace_id) {\n            if (this.parent_run) {\n                this.trace_id = this.parent_run.trace_id ?? this.id;\n            }\n            else {\n                this.trace_id = this.id;\n            }\n        }\n        this.execution_order ??= 1;\n        this.child_execution_order ??= 1;\n        if (!this.dotted_order) {\n            const currentDottedOrder = convertToDottedOrderFormat(this.start_time, this.id, this.execution_order);\n            if (this.parent_run) {\n                this.dotted_order =\n                    this.parent_run.dotted_order + \".\" + currentDottedOrder;\n            }\n            else {\n                this.dotted_order = currentDottedOrder;\n            }\n        }\n    }\n    set metadata(metadata) {\n        this.extra = {\n            ...this.extra,\n            metadata: {\n                ...this.extra?.metadata,\n                ...metadata,\n            },\n        };\n    }\n    get metadata() {\n        return this.extra?.metadata;\n    }\n    static getDefaultConfig() {\n        return {\n            id: uuid.v4(),\n            run_type: \"chain\",\n            project_name: getDefaultProjectName(),\n            child_runs: [],\n            api_url: getEnvironmentVariable(\"LANGCHAIN_ENDPOINT\") ?? \"http://localhost:1984\",\n            api_key: getEnvironmentVariable(\"LANGCHAIN_API_KEY\"),\n            caller_options: {},\n            start_time: Date.now(),\n            serialized: {},\n            inputs: {},\n            extra: {},\n        };\n    }\n    static getSharedClient() {\n        if (!RunTree.sharedClient) {\n            RunTree.sharedClient = new Client();\n        }\n        return RunTree.sharedClient;\n    }\n    createChild(config) {\n        const child_execution_order = this.child_execution_order + 1;\n        const child = new RunTree({\n            ...config,\n            parent_run: this,\n            project_name: this.project_name,\n            replicas: this.replicas,\n            client: this.client,\n            tracingEnabled: this.tracingEnabled,\n            execution_order: child_execution_order,\n            child_execution_order: child_execution_order,\n        });\n        // Copy context vars over into the new run tree.\n        if (_LC_CONTEXT_VARIABLES_KEY in this) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            child[_LC_CONTEXT_VARIABLES_KEY] =\n                this[_LC_CONTEXT_VARIABLES_KEY];\n        }\n        const LC_CHILD = Symbol.for(\"lc:child_config\");\n        const presentConfig = config.extra?.[LC_CHILD] ??\n            this.extra[LC_CHILD];\n        // tracing for LangChain is defined by the _parentRunId and runMap of the tracer\n        if (isRunnableConfigLike(presentConfig)) {\n            const newConfig = { ...presentConfig };\n            const callbacks = isCallbackManagerLike(newConfig.callbacks)\n                ? newConfig.callbacks.copy?.()\n                : undefined;\n            if (callbacks) {\n                // update the parent run id\n                Object.assign(callbacks, { _parentRunId: child.id });\n                // only populate if we're in a newer LC.JS version\n                callbacks.handlers\n                    ?.find(isLangChainTracerLike)\n                    ?.updateFromRunTree?.(child);\n                newConfig.callbacks = callbacks;\n            }\n            child.extra[LC_CHILD] = newConfig;\n        }\n        // propagate child_execution_order upwards\n        const visited = new Set();\n        let current = this;\n        while (current != null && !visited.has(current.id)) {\n            visited.add(current.id);\n            current.child_execution_order = Math.max(current.child_execution_order, child_execution_order);\n            current = current.parent_run;\n        }\n        this.child_runs.push(child);\n        return child;\n    }\n    async end(outputs, error, endTime = Date.now(), metadata) {\n        this.outputs = this.outputs ?? outputs;\n        this.error = this.error ?? error;\n        this.end_time = this.end_time ?? endTime;\n        if (metadata && Object.keys(metadata).length > 0) {\n            this.extra = this.extra\n                ? { ...this.extra, metadata: { ...this.extra.metadata, ...metadata } }\n                : { metadata };\n        }\n    }\n    _convertToCreate(run, runtimeEnv, excludeChildRuns = true) {\n        const runExtra = run.extra ?? {};\n        // Avoid overwriting the runtime environment if it's already set\n        if (runExtra?.runtime?.library === undefined) {\n            if (!runExtra.runtime) {\n                runExtra.runtime = {};\n            }\n            if (runtimeEnv) {\n                for (const [k, v] of Object.entries(runtimeEnv)) {\n                    if (!runExtra.runtime[k]) {\n                        runExtra.runtime[k] = v;\n                    }\n                }\n            }\n        }\n        let child_runs;\n        let parent_run_id;\n        if (!excludeChildRuns) {\n            child_runs = run.child_runs.map((child_run) => this._convertToCreate(child_run, runtimeEnv, excludeChildRuns));\n            parent_run_id = undefined;\n        }\n        else {\n            parent_run_id = run.parent_run?.id;\n            child_runs = [];\n        }\n        return {\n            id: run.id,\n            name: run.name,\n            start_time: run.start_time,\n            end_time: run.end_time,\n            run_type: run.run_type,\n            reference_example_id: run.reference_example_id,\n            extra: runExtra,\n            serialized: run.serialized,\n            error: run.error,\n            inputs: run.inputs,\n            outputs: run.outputs,\n            session_name: run.project_name,\n            child_runs: child_runs,\n            parent_run_id: parent_run_id,\n            trace_id: run.trace_id,\n            dotted_order: run.dotted_order,\n            tags: run.tags,\n            attachments: run.attachments,\n            events: run.events,\n        };\n    }\n    _remapForProject(projectName, runtimeEnv, excludeChildRuns = true) {\n        const baseRun = this._convertToCreate(this, runtimeEnv, excludeChildRuns);\n        if (projectName === this.project_name) {\n            return baseRun;\n        }\n        // Create a deterministic UUID mapping for this project\n        const createRemappedId = (originalId) => {\n            return uuid.v5(`${originalId}:${projectName}`, uuid.v5.DNS);\n        };\n        // Remap the current run's ID\n        const newId = createRemappedId(baseRun.id);\n        const newTraceId = baseRun.trace_id\n            ? createRemappedId(baseRun.trace_id)\n            : undefined;\n        const newParentRunId = baseRun.parent_run_id\n            ? createRemappedId(baseRun.parent_run_id)\n            : undefined;\n        let newDottedOrder;\n        if (baseRun.dotted_order) {\n            const segments = _parseDottedOrder(baseRun.dotted_order);\n            const rebuilt = [];\n            // Process all segments except the last one\n            for (let i = 0; i < segments.length - 1; i++) {\n                const [timestamp, segmentId] = segments[i];\n                const remappedId = createRemappedId(segmentId);\n                rebuilt.push(timestamp.toISOString().replace(/[-:]/g, \"\").replace(\".\", \"\") +\n                    remappedId);\n            }\n            // Process the last segment with the new run ID\n            const [lastTimestamp] = segments[segments.length - 1];\n            rebuilt.push(lastTimestamp.toISOString().replace(/[-:]/g, \"\").replace(\".\", \"\") +\n                newId);\n            newDottedOrder = rebuilt.join(\".\");\n        }\n        else {\n            newDottedOrder = undefined;\n        }\n        const remappedRun = {\n            ...baseRun,\n            id: newId,\n            trace_id: newTraceId,\n            parent_run_id: newParentRunId,\n            dotted_order: newDottedOrder,\n            session_name: projectName,\n        };\n        return remappedRun;\n    }\n    async postRun(excludeChildRuns = true) {\n        try {\n            const runtimeEnv = getRuntimeEnvironment();\n            if (this.replicas && this.replicas.length > 0) {\n                for (const [projectName] of this.replicas) {\n                    const runCreate = this._remapForProject(projectName, runtimeEnv, true);\n                    await this.client.createRun(runCreate);\n                }\n            }\n            else {\n                const runCreate = this._convertToCreate(this, runtimeEnv, excludeChildRuns);\n                await this.client.createRun(runCreate);\n            }\n            if (!excludeChildRuns) {\n                warnOnce(\"Posting with excludeChildRuns=false is deprecated and will be removed in a future version.\");\n                for (const childRun of this.child_runs) {\n                    await childRun.postRun(false);\n                }\n            }\n        }\n        catch (error) {\n            console.error(`Error in postRun for run ${this.id}:`, error);\n        }\n    }\n    async patchRun() {\n        if (this.replicas && this.replicas.length > 0) {\n            for (const [projectName, updates] of this.replicas) {\n                const runData = this._remapForProject(projectName);\n                await this.client.updateRun(runData.id, {\n                    inputs: runData.inputs,\n                    outputs: runData.outputs,\n                    error: runData.error,\n                    parent_run_id: runData.parent_run_id,\n                    session_name: runData.session_name,\n                    reference_example_id: runData.reference_example_id,\n                    end_time: runData.end_time,\n                    dotted_order: runData.dotted_order,\n                    trace_id: runData.trace_id,\n                    events: runData.events,\n                    tags: runData.tags,\n                    extra: runData.extra,\n                    attachments: this.attachments,\n                    ...updates,\n                });\n            }\n        }\n        else {\n            try {\n                const runUpdate = {\n                    end_time: this.end_time,\n                    error: this.error,\n                    inputs: this.inputs,\n                    outputs: this.outputs,\n                    parent_run_id: this.parent_run?.id,\n                    reference_example_id: this.reference_example_id,\n                    extra: this.extra,\n                    events: this.events,\n                    dotted_order: this.dotted_order,\n                    trace_id: this.trace_id,\n                    tags: this.tags,\n                    attachments: this.attachments,\n                    session_name: this.project_name,\n                };\n                await this.client.updateRun(this.id, runUpdate);\n            }\n            catch (error) {\n                console.error(`Error in patchRun for run ${this.id}`, error);\n            }\n        }\n    }\n    toJSON() {\n        return this._convertToCreate(this, undefined, false);\n    }\n    /**\n     * Add an event to the run tree.\n     * @param event - A single event or string to add\n     */\n    addEvent(event) {\n        if (!this.events) {\n            this.events = [];\n        }\n        if (typeof event === \"string\") {\n            this.events.push({\n                name: \"event\",\n                time: new Date().toISOString(),\n                message: event,\n            });\n        }\n        else {\n            this.events.push({\n                ...event,\n                time: event.time ?? new Date().toISOString(),\n            });\n        }\n    }\n    static fromRunnableConfig(parentConfig, props) {\n        // We only handle the callback manager case for now\n        const callbackManager = parentConfig?.callbacks;\n        let parentRun;\n        let projectName;\n        let client;\n        let tracingEnabled = isTracingEnabled();\n        if (callbackManager) {\n            const parentRunId = callbackManager?.getParentRunId?.() ?? \"\";\n            const langChainTracer = callbackManager?.handlers?.find((handler) => handler?.name == \"langchain_tracer\");\n            parentRun = langChainTracer?.getRun?.(parentRunId);\n            projectName = langChainTracer?.projectName;\n            client = langChainTracer?.client;\n            tracingEnabled = tracingEnabled || !!langChainTracer;\n        }\n        if (!parentRun) {\n            return new RunTree({\n                ...props,\n                client,\n                tracingEnabled,\n                project_name: projectName,\n            });\n        }\n        const parentRunTree = new RunTree({\n            name: parentRun.name,\n            id: parentRun.id,\n            trace_id: parentRun.trace_id,\n            dotted_order: parentRun.dotted_order,\n            client,\n            tracingEnabled,\n            project_name: projectName,\n            tags: [\n                ...new Set((parentRun?.tags ?? []).concat(parentConfig?.tags ?? [])),\n            ],\n            extra: {\n                metadata: {\n                    ...parentRun?.extra?.metadata,\n                    ...parentConfig?.metadata,\n                },\n            },\n        });\n        return parentRunTree.createChild(props);\n    }\n    static fromDottedOrder(dottedOrder) {\n        return this.fromHeaders({ \"langsmith-trace\": dottedOrder });\n    }\n    static fromHeaders(headers, inheritArgs) {\n        const rawHeaders = \"get\" in headers && typeof headers.get === \"function\"\n            ? {\n                \"langsmith-trace\": headers.get(\"langsmith-trace\"),\n                baggage: headers.get(\"baggage\"),\n            }\n            : headers;\n        const headerTrace = rawHeaders[\"langsmith-trace\"];\n        if (!headerTrace || typeof headerTrace !== \"string\")\n            return undefined;\n        const parentDottedOrder = headerTrace.trim();\n        const parsedDottedOrder = parentDottedOrder.split(\".\").map((part) => {\n            const [strTime, uuid] = part.split(\"Z\");\n            return { strTime, time: Date.parse(strTime + \"Z\"), uuid };\n        });\n        const traceId = parsedDottedOrder[0].uuid;\n        const config = {\n            ...inheritArgs,\n            name: inheritArgs?.[\"name\"] ?? \"parent\",\n            run_type: inheritArgs?.[\"run_type\"] ?? \"chain\",\n            start_time: inheritArgs?.[\"start_time\"] ?? Date.now(),\n            id: parsedDottedOrder.at(-1)?.uuid,\n            trace_id: traceId,\n            dotted_order: parentDottedOrder,\n        };\n        if (rawHeaders[\"baggage\"] && typeof rawHeaders[\"baggage\"] === \"string\") {\n            const baggage = Baggage.fromHeader(rawHeaders[\"baggage\"]);\n            config.metadata = baggage.metadata;\n            config.tags = baggage.tags;\n            config.project_name = baggage.project_name;\n            config.replicas = baggage.replicas;\n        }\n        return new RunTree(config);\n    }\n    toHeaders(headers) {\n        const result = {\n            \"langsmith-trace\": this.dotted_order,\n            baggage: new Baggage(this.extra?.metadata, this.tags, this.project_name, this.replicas).toHeader(),\n        };\n        if (headers) {\n            for (const [key, value] of Object.entries(result)) {\n                headers.set(key, value);\n            }\n        }\n        return result;\n    }\n}\nObject.defineProperty(RunTree, \"sharedClient\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: null\n});\nexport function isRunTree(x) {\n    return (x !== undefined &&\n        typeof x.createChild === \"function\" &&\n        typeof x.postRun === \"function\");\n}\nfunction isLangChainTracerLike(x) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        typeof x.name === \"string\" &&\n        x.name === \"langchain_tracer\");\n}\nfunction containsLangChainTracerLike(x) {\n    return (Array.isArray(x) && x.some((callback) => isLangChainTracerLike(callback)));\n}\nfunction isCallbackManagerLike(x) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        Array.isArray(x.handlers));\n}\nexport function isRunnableConfigLike(x) {\n    // Check that it's an object with a callbacks arg\n    // that has either a CallbackManagerLike object with a langchain tracer within it\n    // or an array with a LangChainTracerLike object within it\n    return (x !== undefined &&\n        typeof x.callbacks === \"object\" &&\n        // Callback manager with a langchain tracer\n        (containsLangChainTracerLike(x.callbacks?.handlers) ||\n            // Or it's an array with a LangChainTracerLike object within it\n            containsLangChainTracerLike(x.callbacks)));\n}\nfunction _parseDottedOrder(dottedOrder) {\n    const parts = dottedOrder.split(\".\");\n    return parts.map((part) => {\n        const timestampStr = part.slice(0, -36);\n        const uuidStr = part.slice(-36);\n        // Parse timestamp: \"%Y%m%dT%H%M%S%fZ\" format\n        // Example: \"20231215T143045123456Z\"\n        const year = parseInt(timestampStr.slice(0, 4));\n        const month = parseInt(timestampStr.slice(4, 6)) - 1; // JS months are 0-indexed\n        const day = parseInt(timestampStr.slice(6, 8));\n        const hour = parseInt(timestampStr.slice(9, 11));\n        const minute = parseInt(timestampStr.slice(11, 13));\n        const second = parseInt(timestampStr.slice(13, 15));\n        const microsecond = parseInt(timestampStr.slice(15, 21));\n        const timestamp = new Date(year, month, day, hour, minute, second, microsecond / 1000);\n        return [timestamp, uuidStr];\n    });\n}\n","import * as uuid from \"uuid\";\nimport { AsyncCaller } from \"./utils/async_caller.js\";\nimport { convertLangChainMessageToExample, isLangChainMessage, } from \"./utils/messages.js\";\nimport { getEnvironmentVariable, getLangChainEnvVarsMetadata, getLangSmithEnvironmentVariable, getRuntimeEnvironment, } from \"./utils/env.js\";\nimport { __version__ } from \"./index.js\";\nimport { assertUuid } from \"./utils/_uuid.js\";\nimport { warnOnce } from \"./utils/warn.js\";\nimport { parsePromptIdentifier } from \"./utils/prompts.js\";\nimport { raiseForStatus } from \"./utils/error.js\";\nimport { _globalFetchImplementationIsNodeFetch, _getFetchImplementation, } from \"./singletons/fetch.js\";\nimport { serialize as serializePayloadForTracing } from \"./utils/fast-safe-stringify/index.js\";\nexport function mergeRuntimeEnvIntoRunCreate(run) {\n    const runtimeEnv = getRuntimeEnvironment();\n    const envVars = getLangChainEnvVarsMetadata();\n    const extra = run.extra ?? {};\n    const metadata = extra.metadata;\n    run.extra = {\n        ...extra,\n        runtime: {\n            ...runtimeEnv,\n            ...extra?.runtime,\n        },\n        metadata: {\n            ...envVars,\n            ...(envVars.revision_id || run.revision_id\n                ? { revision_id: run.revision_id ?? envVars.revision_id }\n                : {}),\n            ...metadata,\n        },\n    };\n    return run;\n}\nconst getTracingSamplingRate = (configRate) => {\n    const samplingRateStr = configRate?.toString() ??\n        getLangSmithEnvironmentVariable(\"TRACING_SAMPLING_RATE\");\n    if (samplingRateStr === undefined) {\n        return undefined;\n    }\n    const samplingRate = parseFloat(samplingRateStr);\n    if (samplingRate < 0 || samplingRate > 1) {\n        throw new Error(`LANGSMITH_TRACING_SAMPLING_RATE must be between 0 and 1 if set. Got: ${samplingRate}`);\n    }\n    return samplingRate;\n};\n// utility functions\nconst isLocalhost = (url) => {\n    const strippedUrl = url.replace(\"http://\", \"\").replace(\"https://\", \"\");\n    const hostname = strippedUrl.split(\"/\")[0].split(\":\")[0];\n    return (hostname === \"localhost\" || hostname === \"127.0.0.1\" || hostname === \"::1\");\n};\nasync function toArray(iterable) {\n    const result = [];\n    for await (const item of iterable) {\n        result.push(item);\n    }\n    return result;\n}\nfunction trimQuotes(str) {\n    if (str === undefined) {\n        return undefined;\n    }\n    return str\n        .trim()\n        .replace(/^\"(.*)\"$/, \"$1\")\n        .replace(/^'(.*)'$/, \"$1\");\n}\nconst handle429 = async (response) => {\n    if (response?.status === 429) {\n        const retryAfter = parseInt(response.headers.get(\"retry-after\") ?? \"30\", 10) * 1000;\n        if (retryAfter > 0) {\n            await new Promise((resolve) => setTimeout(resolve, retryAfter));\n            // Return directly after calling this check\n            return true;\n        }\n    }\n    // Fall back to existing status checks\n    return false;\n};\nfunction _formatFeedbackScore(score) {\n    if (typeof score === \"number\") {\n        // Truncate at 4 decimal places\n        return Number(score.toFixed(4));\n    }\n    return score;\n}\nexport class AutoBatchQueue {\n    constructor() {\n        Object.defineProperty(this, \"items\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"sizeBytes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n    }\n    peek() {\n        return this.items[0];\n    }\n    push(item) {\n        let itemPromiseResolve;\n        const itemPromise = new Promise((resolve) => {\n            // Setting itemPromiseResolve is synchronous with promise creation:\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/Promise\n            itemPromiseResolve = resolve;\n        });\n        const size = serializePayloadForTracing(item.item, `Serializing run with id: ${item.item.id}`).length;\n        this.items.push({\n            action: item.action,\n            payload: item.item,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            itemPromiseResolve: itemPromiseResolve,\n            itemPromise,\n            size,\n        });\n        this.sizeBytes += size;\n        return itemPromise;\n    }\n    pop(upToSizeBytes) {\n        if (upToSizeBytes < 1) {\n            throw new Error(\"Number of bytes to pop off may not be less than 1.\");\n        }\n        const popped = [];\n        let poppedSizeBytes = 0;\n        // Pop items until we reach or exceed the size limit\n        while (poppedSizeBytes + (this.peek()?.size ?? 0) < upToSizeBytes &&\n            this.items.length > 0) {\n            const item = this.items.shift();\n            if (item) {\n                popped.push(item);\n                poppedSizeBytes += item.size;\n                this.sizeBytes -= item.size;\n            }\n        }\n        // If there is an item on the queue we were unable to pop,\n        // just return it as a single batch.\n        if (popped.length === 0 && this.items.length > 0) {\n            const item = this.items.shift();\n            popped.push(item);\n            poppedSizeBytes += item.size;\n            this.sizeBytes -= item.size;\n        }\n        return [\n            popped.map((it) => ({ action: it.action, item: it.payload })),\n            () => popped.forEach((it) => it.itemPromiseResolve()),\n        ];\n    }\n}\n// 20 MB\nexport const DEFAULT_BATCH_SIZE_LIMIT_BYTES = 20_971_520;\nconst SERVER_INFO_REQUEST_TIMEOUT = 2500;\nexport class Client {\n    constructor(config = {}) {\n        Object.defineProperty(this, \"apiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"webUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"batchIngestCaller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"timeout_ms\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_tenantId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: null\n        });\n        Object.defineProperty(this, \"hideInputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"hideOutputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tracingSampleRate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"filteredPostUuids\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Set()\n        });\n        Object.defineProperty(this, \"autoBatchTracing\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"autoBatchQueue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new AutoBatchQueue()\n        });\n        Object.defineProperty(this, \"autoBatchTimeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"autoBatchAggregationDelayMs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 250\n        });\n        Object.defineProperty(this, \"batchSizeBytesLimit\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fetchOptions\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"settings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"blockOnRootRunFinalization\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getEnvironmentVariable(\"LANGSMITH_TRACING_BACKGROUND\") === \"false\"\n        });\n        Object.defineProperty(this, \"traceBatchConcurrency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 5\n        });\n        Object.defineProperty(this, \"_serverInfo\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"_getServerInfoPromise\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"manualFlushMode\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"debug\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getEnvironmentVariable(\"LANGSMITH_DEBUG\") === \"true\"\n        });\n        const defaultConfig = Client.getDefaultClientConfig();\n        this.tracingSampleRate = getTracingSamplingRate(config.tracingSamplingRate);\n        this.apiUrl = trimQuotes(config.apiUrl ?? defaultConfig.apiUrl) ?? \"\";\n        if (this.apiUrl.endsWith(\"/\")) {\n            this.apiUrl = this.apiUrl.slice(0, -1);\n        }\n        this.apiKey = trimQuotes(config.apiKey ?? defaultConfig.apiKey);\n        this.webUrl = trimQuotes(config.webUrl ?? defaultConfig.webUrl);\n        if (this.webUrl?.endsWith(\"/\")) {\n            this.webUrl = this.webUrl.slice(0, -1);\n        }\n        this.timeout_ms = config.timeout_ms ?? 90_000;\n        this.caller = new AsyncCaller({\n            ...(config.callerOptions ?? {}),\n            debug: config.debug ?? this.debug,\n        });\n        this.traceBatchConcurrency =\n            config.traceBatchConcurrency ?? this.traceBatchConcurrency;\n        if (this.traceBatchConcurrency < 1) {\n            throw new Error(\"Trace batch concurrency must be positive.\");\n        }\n        this.debug = config.debug ?? this.debug;\n        this.batchIngestCaller = new AsyncCaller({\n            maxRetries: 2,\n            maxConcurrency: this.traceBatchConcurrency,\n            ...(config.callerOptions ?? {}),\n            onFailedResponseHook: handle429,\n            debug: config.debug ?? this.debug,\n        });\n        this.hideInputs =\n            config.hideInputs ?? config.anonymizer ?? defaultConfig.hideInputs;\n        this.hideOutputs =\n            config.hideOutputs ?? config.anonymizer ?? defaultConfig.hideOutputs;\n        this.autoBatchTracing = config.autoBatchTracing ?? this.autoBatchTracing;\n        this.blockOnRootRunFinalization =\n            config.blockOnRootRunFinalization ?? this.blockOnRootRunFinalization;\n        this.batchSizeBytesLimit = config.batchSizeBytesLimit;\n        this.fetchOptions = config.fetchOptions || {};\n        this.manualFlushMode = config.manualFlushMode ?? this.manualFlushMode;\n    }\n    static getDefaultClientConfig() {\n        const apiKey = getLangSmithEnvironmentVariable(\"API_KEY\");\n        const apiUrl = getLangSmithEnvironmentVariable(\"ENDPOINT\") ??\n            \"https://api.smith.langchain.com\";\n        const hideInputs = getLangSmithEnvironmentVariable(\"HIDE_INPUTS\") === \"true\";\n        const hideOutputs = getLangSmithEnvironmentVariable(\"HIDE_OUTPUTS\") === \"true\";\n        return {\n            apiUrl: apiUrl,\n            apiKey: apiKey,\n            webUrl: undefined,\n            hideInputs: hideInputs,\n            hideOutputs: hideOutputs,\n        };\n    }\n    getHostUrl() {\n        if (this.webUrl) {\n            return this.webUrl;\n        }\n        else if (isLocalhost(this.apiUrl)) {\n            this.webUrl = \"http://localhost:3000\";\n            return this.webUrl;\n        }\n        else if (this.apiUrl.endsWith(\"/api/v1\")) {\n            this.webUrl = this.apiUrl.replace(\"/api/v1\", \"\");\n            return this.webUrl;\n        }\n        else if (this.apiUrl.includes(\"/api\") &&\n            !this.apiUrl.split(\".\", 1)[0].endsWith(\"api\")) {\n            this.webUrl = this.apiUrl.replace(\"/api\", \"\");\n            return this.webUrl;\n        }\n        else if (this.apiUrl.split(\".\", 1)[0].includes(\"dev\")) {\n            this.webUrl = \"https://dev.smith.langchain.com\";\n            return this.webUrl;\n        }\n        else if (this.apiUrl.split(\".\", 1)[0].includes(\"eu\")) {\n            this.webUrl = \"https://eu.smith.langchain.com\";\n            return this.webUrl;\n        }\n        else if (this.apiUrl.split(\".\", 1)[0].includes(\"beta\")) {\n            this.webUrl = \"https://beta.smith.langchain.com\";\n            return this.webUrl;\n        }\n        else {\n            this.webUrl = \"https://smith.langchain.com\";\n            return this.webUrl;\n        }\n    }\n    get headers() {\n        const headers = {\n            \"User-Agent\": `langsmith-js/${__version__}`,\n        };\n        if (this.apiKey) {\n            headers[\"x-api-key\"] = `${this.apiKey}`;\n        }\n        return headers;\n    }\n    async processInputs(inputs) {\n        if (this.hideInputs === false) {\n            return inputs;\n        }\n        if (this.hideInputs === true) {\n            return {};\n        }\n        if (typeof this.hideInputs === \"function\") {\n            return this.hideInputs(inputs);\n        }\n        return inputs;\n    }\n    async processOutputs(outputs) {\n        if (this.hideOutputs === false) {\n            return outputs;\n        }\n        if (this.hideOutputs === true) {\n            return {};\n        }\n        if (typeof this.hideOutputs === \"function\") {\n            return this.hideOutputs(outputs);\n        }\n        return outputs;\n    }\n    async prepareRunCreateOrUpdateInputs(run) {\n        const runParams = { ...run };\n        if (runParams.inputs !== undefined) {\n            runParams.inputs = await this.processInputs(runParams.inputs);\n        }\n        if (runParams.outputs !== undefined) {\n            runParams.outputs = await this.processOutputs(runParams.outputs);\n        }\n        return runParams;\n    }\n    async _getResponse(path, queryParams) {\n        const paramsString = queryParams?.toString() ?? \"\";\n        const url = `${this.apiUrl}${path}?${paramsString}`;\n        const response = await this.caller.call(_getFetchImplementation(this.debug), url, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `Failed to fetch ${path}`);\n        return response;\n    }\n    async _get(path, queryParams) {\n        const response = await this._getResponse(path, queryParams);\n        return response.json();\n    }\n    async *_getPaginated(path, queryParams = new URLSearchParams(), transform) {\n        let offset = Number(queryParams.get(\"offset\")) || 0;\n        const limit = Number(queryParams.get(\"limit\")) || 100;\n        while (true) {\n            queryParams.set(\"offset\", String(offset));\n            queryParams.set(\"limit\", String(limit));\n            const url = `${this.apiUrl}${path}?${queryParams}`;\n            const response = await this.caller.call(_getFetchImplementation(this.debug), url, {\n                method: \"GET\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(response, `Failed to fetch ${path}`);\n            const items = transform\n                ? transform(await response.json())\n                : await response.json();\n            if (items.length === 0) {\n                break;\n            }\n            yield items;\n            if (items.length < limit) {\n                break;\n            }\n            offset += items.length;\n        }\n    }\n    async *_getCursorPaginatedList(path, body = null, requestMethod = \"POST\", dataKey = \"runs\") {\n        const bodyParams = body ? { ...body } : {};\n        while (true) {\n            const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}${path}`, {\n                method: requestMethod,\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body: JSON.stringify(bodyParams),\n            });\n            const responseBody = await response.json();\n            if (!responseBody) {\n                break;\n            }\n            if (!responseBody[dataKey]) {\n                break;\n            }\n            yield responseBody[dataKey];\n            const cursors = responseBody.cursors;\n            if (!cursors) {\n                break;\n            }\n            if (!cursors.next) {\n                break;\n            }\n            bodyParams.cursor = cursors.next;\n        }\n    }\n    // Allows mocking for tests\n    _shouldSample() {\n        if (this.tracingSampleRate === undefined) {\n            return true;\n        }\n        return Math.random() < this.tracingSampleRate;\n    }\n    _filterForSampling(runs, patch = false) {\n        if (this.tracingSampleRate === undefined) {\n            return runs;\n        }\n        if (patch) {\n            const sampled = [];\n            for (const run of runs) {\n                if (!this.filteredPostUuids.has(run.id)) {\n                    sampled.push(run);\n                }\n                else {\n                    this.filteredPostUuids.delete(run.id);\n                }\n            }\n            return sampled;\n        }\n        else {\n            // For new runs, sample at trace level to maintain consistency\n            const sampled = [];\n            for (const run of runs) {\n                const traceId = run.trace_id ?? run.id;\n                // If we've already made a decision about this trace, follow it\n                if (this.filteredPostUuids.has(traceId)) {\n                    continue;\n                }\n                // For new traces, apply sampling\n                if (run.id === traceId) {\n                    if (this._shouldSample()) {\n                        sampled.push(run);\n                    }\n                    else {\n                        this.filteredPostUuids.add(traceId);\n                    }\n                }\n                else {\n                    // Child runs follow their trace's sampling decision\n                    sampled.push(run);\n                }\n            }\n            return sampled;\n        }\n    }\n    async _getBatchSizeLimitBytes() {\n        const serverInfo = await this._ensureServerInfo();\n        return (this.batchSizeBytesLimit ??\n            serverInfo.batch_ingest_config?.size_limit_bytes ??\n            DEFAULT_BATCH_SIZE_LIMIT_BYTES);\n    }\n    async _getMultiPartSupport() {\n        const serverInfo = await this._ensureServerInfo();\n        return (serverInfo.instance_flags?.dataset_examples_multipart_enabled ?? false);\n    }\n    drainAutoBatchQueue(batchSizeLimit) {\n        const promises = [];\n        while (this.autoBatchQueue.items.length > 0) {\n            const [batch, done] = this.autoBatchQueue.pop(batchSizeLimit);\n            if (!batch.length) {\n                done();\n                break;\n            }\n            const batchPromise = this._processBatch(batch, done).catch(console.error);\n            promises.push(batchPromise);\n        }\n        return Promise.all(promises);\n    }\n    async _processBatch(batch, done) {\n        if (!batch.length) {\n            done();\n            return;\n        }\n        try {\n            const ingestParams = {\n                runCreates: batch\n                    .filter((item) => item.action === \"create\")\n                    .map((item) => item.item),\n                runUpdates: batch\n                    .filter((item) => item.action === \"update\")\n                    .map((item) => item.item),\n            };\n            const serverInfo = await this._ensureServerInfo();\n            if (serverInfo?.batch_ingest_config?.use_multipart_endpoint) {\n                await this.multipartIngestRuns(ingestParams);\n            }\n            else {\n                await this.batchIngestRuns(ingestParams);\n            }\n        }\n        finally {\n            done();\n        }\n    }\n    async processRunOperation(item) {\n        clearTimeout(this.autoBatchTimeout);\n        this.autoBatchTimeout = undefined;\n        if (item.action === \"create\") {\n            item.item = mergeRuntimeEnvIntoRunCreate(item.item);\n        }\n        const itemPromise = this.autoBatchQueue.push(item);\n        if (this.manualFlushMode) {\n            // Rely on manual flushing in serverless environments\n            return itemPromise;\n        }\n        const sizeLimitBytes = await this._getBatchSizeLimitBytes();\n        if (this.autoBatchQueue.sizeBytes > sizeLimitBytes) {\n            void this.drainAutoBatchQueue(sizeLimitBytes);\n        }\n        if (this.autoBatchQueue.items.length > 0) {\n            this.autoBatchTimeout = setTimeout(() => {\n                this.autoBatchTimeout = undefined;\n                void this.drainAutoBatchQueue(sizeLimitBytes);\n            }, this.autoBatchAggregationDelayMs);\n        }\n        return itemPromise;\n    }\n    async _getServerInfo() {\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/info`, {\n            method: \"GET\",\n            headers: { Accept: \"application/json\" },\n            signal: AbortSignal.timeout(SERVER_INFO_REQUEST_TIMEOUT),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"get server info\");\n        const json = await response.json();\n        if (this.debug) {\n            console.log(\"\\n=== LangSmith Server Configuration ===\\n\" +\n                JSON.stringify(json, null, 2) +\n                \"\\n\");\n        }\n        return json;\n    }\n    async _ensureServerInfo() {\n        if (this._getServerInfoPromise === undefined) {\n            this._getServerInfoPromise = (async () => {\n                if (this._serverInfo === undefined) {\n                    try {\n                        this._serverInfo = await this._getServerInfo();\n                    }\n                    catch (e) {\n                        console.warn(`[WARNING]: LangSmith failed to fetch info on supported operations with status code ${e.status}. Falling back to batch operations and default limits.`);\n                    }\n                }\n                return this._serverInfo ?? {};\n            })();\n        }\n        return this._getServerInfoPromise.then((serverInfo) => {\n            if (this._serverInfo === undefined) {\n                this._getServerInfoPromise = undefined;\n            }\n            return serverInfo;\n        });\n    }\n    async _getSettings() {\n        if (!this.settings) {\n            this.settings = this._get(\"/settings\");\n        }\n        return await this.settings;\n    }\n    /**\n     * Flushes current queued traces.\n     */\n    async flush() {\n        const sizeLimitBytes = await this._getBatchSizeLimitBytes();\n        await this.drainAutoBatchQueue(sizeLimitBytes);\n    }\n    async createRun(run) {\n        if (!this._filterForSampling([run]).length) {\n            return;\n        }\n        const headers = { ...this.headers, \"Content-Type\": \"application/json\" };\n        const session_name = run.project_name;\n        delete run.project_name;\n        const runCreate = await this.prepareRunCreateOrUpdateInputs({\n            session_name,\n            ...run,\n            start_time: run.start_time ?? Date.now(),\n        });\n        if (this.autoBatchTracing &&\n            runCreate.trace_id !== undefined &&\n            runCreate.dotted_order !== undefined) {\n            void this.processRunOperation({\n                action: \"create\",\n                item: runCreate,\n            }).catch(console.error);\n            return;\n        }\n        const mergedRunCreateParam = mergeRuntimeEnvIntoRunCreate(runCreate);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/runs`, {\n            method: \"POST\",\n            headers,\n            body: serializePayloadForTracing(mergedRunCreateParam, `Creating run with id: ${mergedRunCreateParam.id}`),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create run\", true);\n    }\n    /**\n     * Batch ingest/upsert multiple runs in the Langsmith system.\n     * @param runs\n     */\n    async batchIngestRuns({ runCreates, runUpdates, }) {\n        if (runCreates === undefined && runUpdates === undefined) {\n            return;\n        }\n        let preparedCreateParams = await Promise.all(runCreates?.map((create) => this.prepareRunCreateOrUpdateInputs(create)) ?? []);\n        let preparedUpdateParams = await Promise.all(runUpdates?.map((update) => this.prepareRunCreateOrUpdateInputs(update)) ?? []);\n        if (preparedCreateParams.length > 0 && preparedUpdateParams.length > 0) {\n            const createById = preparedCreateParams.reduce((params, run) => {\n                if (!run.id) {\n                    return params;\n                }\n                params[run.id] = run;\n                return params;\n            }, {});\n            const standaloneUpdates = [];\n            for (const updateParam of preparedUpdateParams) {\n                if (updateParam.id !== undefined && createById[updateParam.id]) {\n                    createById[updateParam.id] = {\n                        ...createById[updateParam.id],\n                        ...updateParam,\n                    };\n                }\n                else {\n                    standaloneUpdates.push(updateParam);\n                }\n            }\n            preparedCreateParams = Object.values(createById);\n            preparedUpdateParams = standaloneUpdates;\n        }\n        const rawBatch = {\n            post: preparedCreateParams,\n            patch: preparedUpdateParams,\n        };\n        if (!rawBatch.post.length && !rawBatch.patch.length) {\n            return;\n        }\n        const batchChunks = {\n            post: [],\n            patch: [],\n        };\n        for (const k of [\"post\", \"patch\"]) {\n            const key = k;\n            const batchItems = rawBatch[key].reverse();\n            let batchItem = batchItems.pop();\n            while (batchItem !== undefined) {\n                // Type is wrong but this is a deprecated code path anyway\n                batchChunks[key].push(batchItem);\n                batchItem = batchItems.pop();\n            }\n        }\n        if (batchChunks.post.length > 0 || batchChunks.patch.length > 0) {\n            const runIds = batchChunks.post\n                .map((item) => item.id)\n                .concat(batchChunks.patch.map((item) => item.id))\n                .join(\",\");\n            await this._postBatchIngestRuns(serializePayloadForTracing(batchChunks, `Ingesting runs with ids: ${runIds}`));\n        }\n    }\n    async _postBatchIngestRuns(body) {\n        const headers = {\n            ...this.headers,\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n        };\n        const response = await this.batchIngestCaller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/runs/batch`, {\n            method: \"POST\",\n            headers,\n            body: body,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"batch create run\", true);\n    }\n    /**\n     * Batch ingest/upsert multiple runs in the Langsmith system.\n     * @param runs\n     */\n    async multipartIngestRuns({ runCreates, runUpdates, }) {\n        if (runCreates === undefined && runUpdates === undefined) {\n            return;\n        }\n        // transform and convert to dicts\n        const allAttachments = {};\n        let preparedCreateParams = [];\n        for (const create of runCreates ?? []) {\n            const preparedCreate = await this.prepareRunCreateOrUpdateInputs(create);\n            if (preparedCreate.id !== undefined &&\n                preparedCreate.attachments !== undefined) {\n                allAttachments[preparedCreate.id] = preparedCreate.attachments;\n            }\n            delete preparedCreate.attachments;\n            preparedCreateParams.push(preparedCreate);\n        }\n        let preparedUpdateParams = [];\n        for (const update of runUpdates ?? []) {\n            preparedUpdateParams.push(await this.prepareRunCreateOrUpdateInputs(update));\n        }\n        // require trace_id and dotted_order\n        const invalidRunCreate = preparedCreateParams.find((runCreate) => {\n            return (runCreate.trace_id === undefined || runCreate.dotted_order === undefined);\n        });\n        if (invalidRunCreate !== undefined) {\n            throw new Error(`Multipart ingest requires \"trace_id\" and \"dotted_order\" to be set when creating a run`);\n        }\n        const invalidRunUpdate = preparedUpdateParams.find((runUpdate) => {\n            return (runUpdate.trace_id === undefined || runUpdate.dotted_order === undefined);\n        });\n        if (invalidRunUpdate !== undefined) {\n            throw new Error(`Multipart ingest requires \"trace_id\" and \"dotted_order\" to be set when updating a run`);\n        }\n        // combine post and patch dicts where possible\n        if (preparedCreateParams.length > 0 && preparedUpdateParams.length > 0) {\n            const createById = preparedCreateParams.reduce((params, run) => {\n                if (!run.id) {\n                    return params;\n                }\n                params[run.id] = run;\n                return params;\n            }, {});\n            const standaloneUpdates = [];\n            for (const updateParam of preparedUpdateParams) {\n                if (updateParam.id !== undefined && createById[updateParam.id]) {\n                    createById[updateParam.id] = {\n                        ...createById[updateParam.id],\n                        ...updateParam,\n                    };\n                }\n                else {\n                    standaloneUpdates.push(updateParam);\n                }\n            }\n            preparedCreateParams = Object.values(createById);\n            preparedUpdateParams = standaloneUpdates;\n        }\n        if (preparedCreateParams.length === 0 &&\n            preparedUpdateParams.length === 0) {\n            return;\n        }\n        // send the runs in multipart requests\n        const accumulatedContext = [];\n        const accumulatedParts = [];\n        for (const [method, payloads] of [\n            [\"post\", preparedCreateParams],\n            [\"patch\", preparedUpdateParams],\n        ]) {\n            for (const originalPayload of payloads) {\n                // collect fields to be sent as separate parts\n                const { inputs, outputs, events, attachments, ...payload } = originalPayload;\n                const fields = { inputs, outputs, events };\n                // encode the main run payload\n                const stringifiedPayload = serializePayloadForTracing(payload, `Serializing for multipart ingestion of run with id: ${payload.id}`);\n                accumulatedParts.push({\n                    name: `${method}.${payload.id}`,\n                    payload: new Blob([stringifiedPayload], {\n                        type: `application/json; length=${stringifiedPayload.length}`, // encoding=gzip\n                    }),\n                });\n                // encode the fields we collected\n                for (const [key, value] of Object.entries(fields)) {\n                    if (value === undefined) {\n                        continue;\n                    }\n                    const stringifiedValue = serializePayloadForTracing(value, `Serializing ${key} for multipart ingestion of run with id: ${payload.id}`);\n                    accumulatedParts.push({\n                        name: `${method}.${payload.id}.${key}`,\n                        payload: new Blob([stringifiedValue], {\n                            type: `application/json; length=${stringifiedValue.length}`,\n                        }),\n                    });\n                }\n                // encode the attachments\n                if (payload.id !== undefined) {\n                    const attachments = allAttachments[payload.id];\n                    if (attachments) {\n                        delete allAttachments[payload.id];\n                        for (const [name, attachment] of Object.entries(attachments)) {\n                            let contentType;\n                            let content;\n                            if (Array.isArray(attachment)) {\n                                [contentType, content] = attachment;\n                            }\n                            else {\n                                contentType = attachment.mimeType;\n                                content = attachment.data;\n                            }\n                            // Validate that the attachment name doesn't contain a '.'\n                            if (name.includes(\".\")) {\n                                console.warn(`Skipping attachment '${name}' for run ${payload.id}: Invalid attachment name. ` +\n                                    `Attachment names must not contain periods ('.'). Please rename the attachment and try again.`);\n                                continue;\n                            }\n                            accumulatedParts.push({\n                                name: `attachment.${payload.id}.${name}`,\n                                payload: new Blob([content], {\n                                    type: `${contentType}; length=${content.byteLength}`,\n                                }),\n                            });\n                        }\n                    }\n                }\n                // compute context\n                accumulatedContext.push(`trace=${payload.trace_id},id=${payload.id}`);\n            }\n        }\n        await this._sendMultipartRequest(accumulatedParts, accumulatedContext.join(\"; \"));\n    }\n    async _createNodeFetchBody(parts, boundary) {\n        // Create multipart form data manually using Blobs\n        const chunks = [];\n        for (const part of parts) {\n            // Add field boundary\n            chunks.push(new Blob([`--${boundary}\\r\\n`]));\n            chunks.push(new Blob([\n                `Content-Disposition: form-data; name=\"${part.name}\"\\r\\n`,\n                `Content-Type: ${part.payload.type}\\r\\n\\r\\n`,\n            ]));\n            chunks.push(part.payload);\n            chunks.push(new Blob([\"\\r\\n\"]));\n        }\n        // Add final boundary\n        chunks.push(new Blob([`--${boundary}--\\r\\n`]));\n        // Combine all chunks into a single Blob\n        const body = new Blob(chunks);\n        // Convert Blob to ArrayBuffer for compatibility\n        const arrayBuffer = await body.arrayBuffer();\n        return arrayBuffer;\n    }\n    async _createMultipartStream(parts, boundary) {\n        const encoder = new TextEncoder();\n        // Create a ReadableStream for streaming the multipart data\n        // Only do special handling if we're using node-fetch\n        const stream = new ReadableStream({\n            async start(controller) {\n                // Helper function to write a chunk to the stream\n                const writeChunk = async (chunk) => {\n                    if (typeof chunk === \"string\") {\n                        controller.enqueue(encoder.encode(chunk));\n                    }\n                    else {\n                        controller.enqueue(chunk);\n                    }\n                };\n                // Write each part to the stream\n                for (const part of parts) {\n                    // Write boundary and headers\n                    await writeChunk(`--${boundary}\\r\\n`);\n                    await writeChunk(`Content-Disposition: form-data; name=\"${part.name}\"\\r\\n`);\n                    await writeChunk(`Content-Type: ${part.payload.type}\\r\\n\\r\\n`);\n                    // Write the payload\n                    const payloadStream = part.payload.stream();\n                    const reader = payloadStream.getReader();\n                    try {\n                        let result;\n                        while (!(result = await reader.read()).done) {\n                            controller.enqueue(result.value);\n                        }\n                    }\n                    finally {\n                        reader.releaseLock();\n                    }\n                    await writeChunk(\"\\r\\n\");\n                }\n                // Write final boundary\n                await writeChunk(`--${boundary}--\\r\\n`);\n                controller.close();\n            },\n        });\n        return stream;\n    }\n    async _sendMultipartRequest(parts, context) {\n        try {\n            // Create multipart form data boundary\n            const boundary = \"----LangSmithFormBoundary\" + Math.random().toString(36).slice(2);\n            const body = await (_globalFetchImplementationIsNodeFetch()\n                ? this._createNodeFetchBody(parts, boundary)\n                : this._createMultipartStream(parts, boundary));\n            const res = await this.batchIngestCaller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/runs/multipart`, {\n                method: \"POST\",\n                headers: {\n                    ...this.headers,\n                    \"Content-Type\": `multipart/form-data; boundary=${boundary}`,\n                },\n                body,\n                duplex: \"half\",\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"ingest multipart runs\", true);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (e) {\n            console.warn(`${e.message.trim()}\\n\\nContext: ${context}`);\n        }\n    }\n    async updateRun(runId, run) {\n        assertUuid(runId);\n        if (run.inputs) {\n            run.inputs = await this.processInputs(run.inputs);\n        }\n        if (run.outputs) {\n            run.outputs = await this.processOutputs(run.outputs);\n        }\n        // TODO: Untangle types\n        const data = { ...run, id: runId };\n        if (!this._filterForSampling([data], true).length) {\n            return;\n        }\n        if (this.autoBatchTracing &&\n            data.trace_id !== undefined &&\n            data.dotted_order !== undefined) {\n            if (run.end_time !== undefined &&\n                data.parent_run_id === undefined &&\n                this.blockOnRootRunFinalization &&\n                !this.manualFlushMode) {\n                // Trigger batches as soon as a root trace ends and wait to ensure trace finishes\n                // in serverless environments.\n                await this.processRunOperation({ action: \"update\", item: data }).catch(console.error);\n                return;\n            }\n            else {\n                void this.processRunOperation({ action: \"update\", item: data }).catch(console.error);\n            }\n            return;\n        }\n        const headers = { ...this.headers, \"Content-Type\": \"application/json\" };\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/runs/${runId}`, {\n            method: \"PATCH\",\n            headers,\n            body: serializePayloadForTracing(run, `Serializing payload to update run with id: ${runId}`),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update run\", true);\n    }\n    async readRun(runId, { loadChildRuns } = { loadChildRuns: false }) {\n        assertUuid(runId);\n        let run = await this._get(`/runs/${runId}`);\n        if (loadChildRuns) {\n            run = await this._loadChildRuns(run);\n        }\n        return run;\n    }\n    async getRunUrl({ runId, run, projectOpts, }) {\n        if (run !== undefined) {\n            let sessionId;\n            if (run.session_id) {\n                sessionId = run.session_id;\n            }\n            else if (projectOpts?.projectName) {\n                sessionId = (await this.readProject({ projectName: projectOpts?.projectName })).id;\n            }\n            else if (projectOpts?.projectId) {\n                sessionId = projectOpts?.projectId;\n            }\n            else {\n                const project = await this.readProject({\n                    projectName: getLangSmithEnvironmentVariable(\"PROJECT\") || \"default\",\n                });\n                sessionId = project.id;\n            }\n            const tenantId = await this._getTenantId();\n            return `${this.getHostUrl()}/o/${tenantId}/projects/p/${sessionId}/r/${run.id}?poll=true`;\n        }\n        else if (runId !== undefined) {\n            const run_ = await this.readRun(runId);\n            if (!run_.app_path) {\n                throw new Error(`Run ${runId} has no app_path`);\n            }\n            const baseUrl = this.getHostUrl();\n            return `${baseUrl}${run_.app_path}`;\n        }\n        else {\n            throw new Error(\"Must provide either runId or run\");\n        }\n    }\n    async _loadChildRuns(run) {\n        const childRuns = await toArray(this.listRuns({\n            isRoot: false,\n            projectId: run.session_id,\n            traceId: run.trace_id,\n        }));\n        const treemap = {};\n        const runs = {};\n        // TODO: make dotted order required when the migration finishes\n        childRuns.sort((a, b) => (a?.dotted_order ?? \"\").localeCompare(b?.dotted_order ?? \"\"));\n        for (const childRun of childRuns) {\n            if (childRun.parent_run_id === null ||\n                childRun.parent_run_id === undefined) {\n                throw new Error(`Child run ${childRun.id} has no parent`);\n            }\n            if (childRun.dotted_order?.startsWith(run.dotted_order ?? \"\") &&\n                childRun.id !== run.id) {\n                if (!(childRun.parent_run_id in treemap)) {\n                    treemap[childRun.parent_run_id] = [];\n                }\n                treemap[childRun.parent_run_id].push(childRun);\n                runs[childRun.id] = childRun;\n            }\n        }\n        run.child_runs = treemap[run.id] || [];\n        for (const runId in treemap) {\n            if (runId !== run.id) {\n                runs[runId].child_runs = treemap[runId];\n            }\n        }\n        return run;\n    }\n    /**\n     * List runs from the LangSmith server.\n     * @param projectId - The ID of the project to filter by.\n     * @param projectName - The name of the project to filter by.\n     * @param parentRunId - The ID of the parent run to filter by.\n     * @param traceId - The ID of the trace to filter by.\n     * @param referenceExampleId - The ID of the reference example to filter by.\n     * @param startTime - The start time to filter by.\n     * @param isRoot - Indicates whether to only return root runs.\n     * @param runType - The run type to filter by.\n     * @param error - Indicates whether to filter by error runs.\n     * @param id - The ID of the run to filter by.\n     * @param query - The query string to filter by.\n     * @param filter - The filter string to apply to the run spans.\n     * @param traceFilter - The filter string to apply on the root run of the trace.\n     * @param treeFilter - The filter string to apply on other runs in the trace.\n     * @param limit - The maximum number of runs to retrieve.\n     * @returns {AsyncIterable<Run>} - The runs.\n     *\n     * @example\n     * // List all runs in a project\n     * const projectRuns = client.listRuns({ projectName: \"<your_project>\" });\n     *\n     * @example\n     * // List LLM and Chat runs in the last 24 hours\n     * const todaysLLMRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   start_time: new Date(Date.now() - 24 * 60 * 60 * 1000),\n     *   run_type: \"llm\",\n     * });\n     *\n     * @example\n     * // List traces in a project\n     * const rootRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   execution_order: 1,\n     * });\n     *\n     * @example\n     * // List runs without errors\n     * const correctRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   error: false,\n     * });\n     *\n     * @example\n     * // List runs by run ID\n     * const runIds = [\n     *   \"a36092d2-4ad5-4fb4-9c0d-0dba9a2ed836\",\n     *   \"9398e6be-964f-4aa4-8ae9-ad78cd4b7074\",\n     * ];\n     * const selectedRuns = client.listRuns({ run_ids: runIds });\n     *\n     * @example\n     * // List all \"chain\" type runs that took more than 10 seconds and had `total_tokens` greater than 5000\n     * const chainRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   filter: 'and(eq(run_type, \"chain\"), gt(latency, 10), gt(total_tokens, 5000))',\n     * });\n     *\n     * @example\n     * // List all runs called \"extractor\" whose root of the trace was assigned feedback \"user_score\" score of 1\n     * const goodExtractorRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   filter: 'eq(name, \"extractor\")',\n     *   traceFilter: 'and(eq(feedback_key, \"user_score\"), eq(feedback_score, 1))',\n     * });\n     *\n     * @example\n     * // List all runs that started after a specific timestamp and either have \"error\" not equal to null or a \"Correctness\" feedback score equal to 0\n     * const complexRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   filter: 'and(gt(start_time, \"2023-07-15T12:34:56Z\"), or(neq(error, null), and(eq(feedback_key, \"Correctness\"), eq(feedback_score, 0.0))))',\n     * });\n     *\n     * @example\n     * // List all runs where `tags` include \"experimental\" or \"beta\" and `latency` is greater than 2 seconds\n     * const taggedRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   filter: 'and(or(has(tags, \"experimental\"), has(tags, \"beta\")), gt(latency, 2))',\n     * });\n     */\n    async *listRuns(props) {\n        const { projectId, projectName, parentRunId, traceId, referenceExampleId, startTime, executionOrder, isRoot, runType, error, id, query, filter, traceFilter, treeFilter, limit, select, order, } = props;\n        let projectIds = [];\n        if (projectId) {\n            projectIds = Array.isArray(projectId) ? projectId : [projectId];\n        }\n        if (projectName) {\n            const projectNames = Array.isArray(projectName)\n                ? projectName\n                : [projectName];\n            const projectIds_ = await Promise.all(projectNames.map((name) => this.readProject({ projectName: name }).then((project) => project.id)));\n            projectIds.push(...projectIds_);\n        }\n        const default_select = [\n            \"app_path\",\n            \"completion_cost\",\n            \"completion_tokens\",\n            \"dotted_order\",\n            \"end_time\",\n            \"error\",\n            \"events\",\n            \"extra\",\n            \"feedback_stats\",\n            \"first_token_time\",\n            \"id\",\n            \"inputs\",\n            \"name\",\n            \"outputs\",\n            \"parent_run_id\",\n            \"parent_run_ids\",\n            \"prompt_cost\",\n            \"prompt_tokens\",\n            \"reference_example_id\",\n            \"run_type\",\n            \"session_id\",\n            \"start_time\",\n            \"status\",\n            \"tags\",\n            \"total_cost\",\n            \"total_tokens\",\n            \"trace_id\",\n        ];\n        const body = {\n            session: projectIds.length ? projectIds : null,\n            run_type: runType,\n            reference_example: referenceExampleId,\n            query,\n            filter,\n            trace_filter: traceFilter,\n            tree_filter: treeFilter,\n            execution_order: executionOrder,\n            parent_run: parentRunId,\n            start_time: startTime ? startTime.toISOString() : null,\n            error,\n            id,\n            limit,\n            trace: traceId,\n            select: select ? select : default_select,\n            is_root: isRoot,\n            order,\n        };\n        let runsYielded = 0;\n        for await (const runs of this._getCursorPaginatedList(\"/runs/query\", body)) {\n            if (limit) {\n                if (runsYielded >= limit) {\n                    break;\n                }\n                if (runs.length + runsYielded > limit) {\n                    const newRuns = runs.slice(0, limit - runsYielded);\n                    yield* newRuns;\n                    break;\n                }\n                runsYielded += runs.length;\n                yield* runs;\n            }\n            else {\n                yield* runs;\n            }\n        }\n    }\n    async *listGroupRuns(props) {\n        const { projectId, projectName, groupBy, filter, startTime, endTime, limit, offset, } = props;\n        const sessionId = projectId || (await this.readProject({ projectName })).id;\n        const baseBody = {\n            session_id: sessionId,\n            group_by: groupBy,\n            filter,\n            start_time: startTime ? startTime.toISOString() : null,\n            end_time: endTime ? endTime.toISOString() : null,\n            limit: Number(limit) || 100,\n        };\n        let currentOffset = Number(offset) || 0;\n        const path = \"/runs/group\";\n        const url = `${this.apiUrl}${path}`;\n        while (true) {\n            const currentBody = {\n                ...baseBody,\n                offset: currentOffset,\n            };\n            // Remove undefined values from the payload\n            const filteredPayload = Object.fromEntries(Object.entries(currentBody).filter(([_, value]) => value !== undefined));\n            const response = await this.caller.call(_getFetchImplementation(), url, {\n                method: \"POST\",\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(filteredPayload),\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(response, `Failed to fetch ${path}`);\n            const items = await response.json();\n            const { groups, total } = items;\n            if (groups.length === 0) {\n                break;\n            }\n            for (const thread of groups) {\n                yield thread;\n            }\n            currentOffset += groups.length;\n            if (currentOffset >= total) {\n                break;\n            }\n        }\n    }\n    async getRunStats({ id, trace, parentRun, runType, projectNames, projectIds, referenceExampleIds, startTime, endTime, error, query, filter, traceFilter, treeFilter, isRoot, dataSourceType, }) {\n        let projectIds_ = projectIds || [];\n        if (projectNames) {\n            projectIds_ = [\n                ...(projectIds || []),\n                ...(await Promise.all(projectNames.map((name) => this.readProject({ projectName: name }).then((project) => project.id)))),\n            ];\n        }\n        const payload = {\n            id,\n            trace,\n            parent_run: parentRun,\n            run_type: runType,\n            session: projectIds_,\n            reference_example: referenceExampleIds,\n            start_time: startTime,\n            end_time: endTime,\n            error,\n            query,\n            filter,\n            trace_filter: traceFilter,\n            tree_filter: treeFilter,\n            is_root: isRoot,\n            data_source_type: dataSourceType,\n        };\n        // Remove undefined values from the payload\n        const filteredPayload = Object.fromEntries(Object.entries(payload).filter(([_, value]) => value !== undefined));\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/runs/stats`, {\n            method: \"POST\",\n            headers: this.headers,\n            body: JSON.stringify(filteredPayload),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const result = await response.json();\n        return result;\n    }\n    async shareRun(runId, { shareId } = {}) {\n        const data = {\n            run_id: runId,\n            share_token: shareId || uuid.v4(),\n        };\n        assertUuid(runId);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/runs/${runId}/share`, {\n            method: \"PUT\",\n            headers: this.headers,\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const result = await response.json();\n        if (result === null || !(\"share_token\" in result)) {\n            throw new Error(\"Invalid response from server\");\n        }\n        return `${this.getHostUrl()}/public/${result[\"share_token\"]}/r`;\n    }\n    async unshareRun(runId) {\n        assertUuid(runId);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/runs/${runId}/share`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"unshare run\", true);\n    }\n    async readRunSharedLink(runId) {\n        assertUuid(runId);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/runs/${runId}/share`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const result = await response.json();\n        if (result === null || !(\"share_token\" in result)) {\n            return undefined;\n        }\n        return `${this.getHostUrl()}/public/${result[\"share_token\"]}/r`;\n    }\n    async listSharedRuns(shareToken, { runIds, } = {}) {\n        const queryParams = new URLSearchParams({\n            share_token: shareToken,\n        });\n        if (runIds !== undefined) {\n            for (const runId of runIds) {\n                queryParams.append(\"id\", runId);\n            }\n        }\n        assertUuid(shareToken);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/public/${shareToken}/runs${queryParams}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const runs = await response.json();\n        return runs;\n    }\n    async readDatasetSharedSchema(datasetId, datasetName) {\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Either datasetId or datasetName must be given\");\n        }\n        if (!datasetId) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId = dataset.id;\n        }\n        assertUuid(datasetId);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets/${datasetId}/share`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const shareSchema = await response.json();\n        shareSchema.url = `${this.getHostUrl()}/public/${shareSchema.share_token}/d`;\n        return shareSchema;\n    }\n    async shareDataset(datasetId, datasetName) {\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Either datasetId or datasetName must be given\");\n        }\n        if (!datasetId) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId = dataset.id;\n        }\n        const data = {\n            dataset_id: datasetId,\n        };\n        assertUuid(datasetId);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets/${datasetId}/share`, {\n            method: \"PUT\",\n            headers: this.headers,\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const shareSchema = await response.json();\n        shareSchema.url = `${this.getHostUrl()}/public/${shareSchema.share_token}/d`;\n        return shareSchema;\n    }\n    async unshareDataset(datasetId) {\n        assertUuid(datasetId);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets/${datasetId}/share`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"unshare dataset\", true);\n    }\n    async readSharedDataset(shareToken) {\n        assertUuid(shareToken);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/public/${shareToken}/datasets`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const dataset = await response.json();\n        return dataset;\n    }\n    /**\n     * Get shared examples.\n     *\n     * @param {string} shareToken The share token to get examples for. A share token is the UUID (or LangSmith URL, including UUID) generated when explicitly marking an example as public.\n     * @param {Object} [options] Additional options for listing the examples.\n     * @param {string[] | undefined} [options.exampleIds] A list of example IDs to filter by.\n     * @returns {Promise<Example[]>} The shared examples.\n     */\n    async listSharedExamples(shareToken, options) {\n        const params = {};\n        if (options?.exampleIds) {\n            params.id = options.exampleIds;\n        }\n        const urlParams = new URLSearchParams();\n        Object.entries(params).forEach(([key, value]) => {\n            if (Array.isArray(value)) {\n                value.forEach((v) => urlParams.append(key, v));\n            }\n            else {\n                urlParams.append(key, value);\n            }\n        });\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/public/${shareToken}/examples?${urlParams.toString()}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const result = await response.json();\n        if (!response.ok) {\n            if (\"detail\" in result) {\n                throw new Error(`Failed to list shared examples.\\nStatus: ${response.status}\\nMessage: ${Array.isArray(result.detail)\n                    ? result.detail.join(\"\\n\")\n                    : \"Unspecified error\"}`);\n            }\n            throw new Error(`Failed to list shared examples: ${response.status} ${response.statusText}`);\n        }\n        return result.map((example) => ({\n            ...example,\n            _hostUrl: this.getHostUrl(),\n        }));\n    }\n    async createProject({ projectName, description = null, metadata = null, upsert = false, projectExtra = null, referenceDatasetId = null, }) {\n        const upsert_ = upsert ? `?upsert=true` : \"\";\n        const endpoint = `${this.apiUrl}/sessions${upsert_}`;\n        const extra = projectExtra || {};\n        if (metadata) {\n            extra[\"metadata\"] = metadata;\n        }\n        const body = {\n            name: projectName,\n            extra,\n            description,\n        };\n        if (referenceDatasetId !== null) {\n            body[\"reference_dataset_id\"] = referenceDatasetId;\n        }\n        const response = await this.caller.call(_getFetchImplementation(this.debug), endpoint, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create project\");\n        const result = await response.json();\n        return result;\n    }\n    async updateProject(projectId, { name = null, description = null, metadata = null, projectExtra = null, endTime = null, }) {\n        const endpoint = `${this.apiUrl}/sessions/${projectId}`;\n        let extra = projectExtra;\n        if (metadata) {\n            extra = { ...(extra || {}), metadata };\n        }\n        const body = {\n            name,\n            extra,\n            description,\n            end_time: endTime ? new Date(endTime).toISOString() : null,\n        };\n        const response = await this.caller.call(_getFetchImplementation(this.debug), endpoint, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update project\");\n        const result = await response.json();\n        return result;\n    }\n    async hasProject({ projectId, projectName, }) {\n        // TODO: Add a head request\n        let path = \"/sessions\";\n        const params = new URLSearchParams();\n        if (projectId !== undefined && projectName !== undefined) {\n            throw new Error(\"Must provide either projectName or projectId, not both\");\n        }\n        else if (projectId !== undefined) {\n            assertUuid(projectId);\n            path += `/${projectId}`;\n        }\n        else if (projectName !== undefined) {\n            params.append(\"name\", projectName);\n        }\n        else {\n            throw new Error(\"Must provide projectName or projectId\");\n        }\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}${path}?${params}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        // consume the response body to release the connection\n        // https://undici.nodejs.org/#/?id=garbage-collection\n        try {\n            const result = await response.json();\n            if (!response.ok) {\n                return false;\n            }\n            // If it's OK and we're querying by name, need to check the list is not empty\n            if (Array.isArray(result)) {\n                return result.length > 0;\n            }\n            // projectId querying\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async readProject({ projectId, projectName, includeStats, }) {\n        let path = \"/sessions\";\n        const params = new URLSearchParams();\n        if (projectId !== undefined && projectName !== undefined) {\n            throw new Error(\"Must provide either projectName or projectId, not both\");\n        }\n        else if (projectId !== undefined) {\n            assertUuid(projectId);\n            path += `/${projectId}`;\n        }\n        else if (projectName !== undefined) {\n            params.append(\"name\", projectName);\n        }\n        else {\n            throw new Error(\"Must provide projectName or projectId\");\n        }\n        if (includeStats !== undefined) {\n            params.append(\"include_stats\", includeStats.toString());\n        }\n        const response = await this._get(path, params);\n        let result;\n        if (Array.isArray(response)) {\n            if (response.length === 0) {\n                throw new Error(`Project[id=${projectId}, name=${projectName}] not found`);\n            }\n            result = response[0];\n        }\n        else {\n            result = response;\n        }\n        return result;\n    }\n    async getProjectUrl({ projectId, projectName, }) {\n        if (projectId === undefined && projectName === undefined) {\n            throw new Error(\"Must provide either projectName or projectId\");\n        }\n        const project = await this.readProject({ projectId, projectName });\n        const tenantId = await this._getTenantId();\n        return `${this.getHostUrl()}/o/${tenantId}/projects/p/${project.id}`;\n    }\n    async getDatasetUrl({ datasetId, datasetName, }) {\n        if (datasetId === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        const dataset = await this.readDataset({ datasetId, datasetName });\n        const tenantId = await this._getTenantId();\n        return `${this.getHostUrl()}/o/${tenantId}/datasets/${dataset.id}`;\n    }\n    async _getTenantId() {\n        if (this._tenantId !== null) {\n            return this._tenantId;\n        }\n        const queryParams = new URLSearchParams({ limit: \"1\" });\n        for await (const projects of this._getPaginated(\"/sessions\", queryParams)) {\n            this._tenantId = projects[0].tenant_id;\n            return projects[0].tenant_id;\n        }\n        throw new Error(\"No projects found to resolve tenant.\");\n    }\n    async *listProjects({ projectIds, name, nameContains, referenceDatasetId, referenceDatasetName, referenceFree, metadata, } = {}) {\n        const params = new URLSearchParams();\n        if (projectIds !== undefined) {\n            for (const projectId of projectIds) {\n                params.append(\"id\", projectId);\n            }\n        }\n        if (name !== undefined) {\n            params.append(\"name\", name);\n        }\n        if (nameContains !== undefined) {\n            params.append(\"name_contains\", nameContains);\n        }\n        if (referenceDatasetId !== undefined) {\n            params.append(\"reference_dataset\", referenceDatasetId);\n        }\n        else if (referenceDatasetName !== undefined) {\n            const dataset = await this.readDataset({\n                datasetName: referenceDatasetName,\n            });\n            params.append(\"reference_dataset\", dataset.id);\n        }\n        if (referenceFree !== undefined) {\n            params.append(\"reference_free\", referenceFree.toString());\n        }\n        if (metadata !== undefined) {\n            params.append(\"metadata\", JSON.stringify(metadata));\n        }\n        for await (const projects of this._getPaginated(\"/sessions\", params)) {\n            yield* projects;\n        }\n    }\n    async deleteProject({ projectId, projectName, }) {\n        let projectId_;\n        if (projectId === undefined && projectName === undefined) {\n            throw new Error(\"Must provide projectName or projectId\");\n        }\n        else if (projectId !== undefined && projectName !== undefined) {\n            throw new Error(\"Must provide either projectName or projectId, not both\");\n        }\n        else if (projectId === undefined) {\n            projectId_ = (await this.readProject({ projectName })).id;\n        }\n        else {\n            projectId_ = projectId;\n        }\n        assertUuid(projectId_);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/sessions/${projectId_}`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `delete session ${projectId_} (${projectName})`, true);\n    }\n    async uploadCsv({ csvFile, fileName, inputKeys, outputKeys, description, dataType, name, }) {\n        const url = `${this.apiUrl}/datasets/upload`;\n        const formData = new FormData();\n        formData.append(\"file\", csvFile, fileName);\n        inputKeys.forEach((key) => {\n            formData.append(\"input_keys\", key);\n        });\n        outputKeys.forEach((key) => {\n            formData.append(\"output_keys\", key);\n        });\n        if (description) {\n            formData.append(\"description\", description);\n        }\n        if (dataType) {\n            formData.append(\"data_type\", dataType);\n        }\n        if (name) {\n            formData.append(\"name\", name);\n        }\n        const response = await this.caller.call(_getFetchImplementation(this.debug), url, {\n            method: \"POST\",\n            headers: this.headers,\n            body: formData,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"upload CSV\");\n        const result = await response.json();\n        return result;\n    }\n    async createDataset(name, { description, dataType, inputsSchema, outputsSchema, metadata, } = {}) {\n        const body = {\n            name,\n            description,\n            extra: metadata ? { metadata } : undefined,\n        };\n        if (dataType) {\n            body.data_type = dataType;\n        }\n        if (inputsSchema) {\n            body.inputs_schema_definition = inputsSchema;\n        }\n        if (outputsSchema) {\n            body.outputs_schema_definition = outputsSchema;\n        }\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create dataset\");\n        const result = await response.json();\n        return result;\n    }\n    async readDataset({ datasetId, datasetName, }) {\n        let path = \"/datasets\";\n        // limit to 1 result\n        const params = new URLSearchParams({ limit: \"1\" });\n        if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId !== undefined) {\n            assertUuid(datasetId);\n            path += `/${datasetId}`;\n        }\n        else if (datasetName !== undefined) {\n            params.append(\"name\", datasetName);\n        }\n        else {\n            throw new Error(\"Must provide datasetName or datasetId\");\n        }\n        const response = await this._get(path, params);\n        let result;\n        if (Array.isArray(response)) {\n            if (response.length === 0) {\n                throw new Error(`Dataset[id=${datasetId}, name=${datasetName}] not found`);\n            }\n            result = response[0];\n        }\n        else {\n            result = response;\n        }\n        return result;\n    }\n    async hasDataset({ datasetId, datasetName, }) {\n        try {\n            await this.readDataset({ datasetId, datasetName });\n            return true;\n        }\n        catch (e) {\n            if (\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            e instanceof Error &&\n                e.message.toLocaleLowerCase().includes(\"not found\")) {\n                return false;\n            }\n            throw e;\n        }\n    }\n    async diffDatasetVersions({ datasetId, datasetName, fromVersion, toVersion, }) {\n        let datasetId_ = datasetId;\n        if (datasetId_ === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId_ === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        const urlParams = new URLSearchParams({\n            from_version: typeof fromVersion === \"string\"\n                ? fromVersion\n                : fromVersion.toISOString(),\n            to_version: typeof toVersion === \"string\" ? toVersion : toVersion.toISOString(),\n        });\n        const response = await this._get(`/datasets/${datasetId_}/versions/diff`, urlParams);\n        return response;\n    }\n    async readDatasetOpenaiFinetuning({ datasetId, datasetName, }) {\n        const path = \"/datasets\";\n        if (datasetId !== undefined) {\n            // do nothing\n        }\n        else if (datasetName !== undefined) {\n            datasetId = (await this.readDataset({ datasetName })).id;\n        }\n        else {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        const response = await this._getResponse(`${path}/${datasetId}/openai_ft`);\n        const datasetText = await response.text();\n        const dataset = datasetText\n            .trim()\n            .split(\"\\n\")\n            .map((line) => JSON.parse(line));\n        return dataset;\n    }\n    async *listDatasets({ limit = 100, offset = 0, datasetIds, datasetName, datasetNameContains, metadata, } = {}) {\n        const path = \"/datasets\";\n        const params = new URLSearchParams({\n            limit: limit.toString(),\n            offset: offset.toString(),\n        });\n        if (datasetIds !== undefined) {\n            for (const id_ of datasetIds) {\n                params.append(\"id\", id_);\n            }\n        }\n        if (datasetName !== undefined) {\n            params.append(\"name\", datasetName);\n        }\n        if (datasetNameContains !== undefined) {\n            params.append(\"name_contains\", datasetNameContains);\n        }\n        if (metadata !== undefined) {\n            params.append(\"metadata\", JSON.stringify(metadata));\n        }\n        for await (const datasets of this._getPaginated(path, params)) {\n            yield* datasets;\n        }\n    }\n    /**\n     * Update a dataset\n     * @param props The dataset details to update\n     * @returns The updated dataset\n     */\n    async updateDataset(props) {\n        const { datasetId, datasetName, ...update } = props;\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        const _datasetId = datasetId ?? (await this.readDataset({ datasetName })).id;\n        assertUuid(_datasetId);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets/${_datasetId}`, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(update),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update dataset\");\n        return (await response.json());\n    }\n    /**\n     * Updates a tag on a dataset.\n     *\n     * If the tag is already assigned to a different version of this dataset,\n     * the tag will be moved to the new version. The as_of parameter is used to\n     * determine which version of the dataset to apply the new tags to.\n     *\n     * It must be an exact version of the dataset to succeed. You can\n     * use the \"readDatasetVersion\" method to find the exact version\n     * to apply the tags to.\n     * @param params.datasetId The ID of the dataset to update. Must be provided if \"datasetName\" is not provided.\n     * @param params.datasetName The name of the dataset to update. Must be provided if \"datasetId\" is not provided.\n     * @param params.asOf The timestamp of the dataset to apply the new tags to.\n     * @param params.tag The new tag to apply to the dataset.\n     */\n    async updateDatasetTag(props) {\n        const { datasetId, datasetName, asOf, tag } = props;\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        const _datasetId = datasetId ?? (await this.readDataset({ datasetName })).id;\n        assertUuid(_datasetId);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets/${_datasetId}/tags`, {\n            method: \"PUT\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                as_of: typeof asOf === \"string\" ? asOf : asOf.toISOString(),\n                tag,\n            }),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update dataset tags\");\n    }\n    async deleteDataset({ datasetId, datasetName, }) {\n        let path = \"/datasets\";\n        let datasetId_ = datasetId;\n        if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetName !== undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        if (datasetId_ !== undefined) {\n            assertUuid(datasetId_);\n            path += `/${datasetId_}`;\n        }\n        else {\n            throw new Error(\"Must provide datasetName or datasetId\");\n        }\n        const response = await this.caller.call(_getFetchImplementation(this.debug), this.apiUrl + path, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `delete ${path}`);\n        await response.json();\n    }\n    async indexDataset({ datasetId, datasetName, tag, }) {\n        let datasetId_ = datasetId;\n        if (!datasetId_ && !datasetName) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ && datasetName) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (!datasetId_) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        assertUuid(datasetId_);\n        const data = {\n            tag: tag,\n        };\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets/${datasetId_}/index`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"index dataset\");\n        await response.json();\n    }\n    /**\n     * Lets you run a similarity search query on a dataset.\n     *\n     * Requires the dataset to be indexed. Please see the `indexDataset` method to set up indexing.\n     *\n     * @param inputs      The input on which to run the similarity search. Must have the\n     *                    same schema as the dataset.\n     *\n     * @param datasetId   The dataset to search for similar examples.\n     *\n     * @param limit       The maximum number of examples to return. Will return the top `limit` most\n     *                    similar examples in order of most similar to least similar. If no similar\n     *                    examples are found, random examples will be returned.\n     *\n     * @param filter      A filter string to apply to the search. Only examples will be returned that\n     *                    match the filter string. Some examples of filters\n     *\n     *                    - eq(metadata.mykey, \"value\")\n     *                    - and(neq(metadata.my.nested.key, \"value\"), neq(metadata.mykey, \"value\"))\n     *                    - or(eq(metadata.mykey, \"value\"), eq(metadata.mykey, \"othervalue\"))\n     *\n     * @returns           A list of similar examples.\n     *\n     *\n     * @example\n     * dataset_id = \"123e4567-e89b-12d3-a456-426614174000\"\n     * inputs = {\"text\": \"How many people live in Berlin?\"}\n     * limit = 5\n     * examples = await client.similarExamples(inputs, dataset_id, limit)\n     */\n    async similarExamples(inputs, datasetId, limit, { filter, } = {}) {\n        const data = {\n            limit: limit,\n            inputs: inputs,\n        };\n        if (filter !== undefined) {\n            data[\"filter\"] = filter;\n        }\n        assertUuid(datasetId);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets/${datasetId}/search`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"fetch similar examples\");\n        const result = await response.json();\n        return result[\"examples\"];\n    }\n    async createExample(inputsOrUpdate, outputs, options) {\n        if (isExampleCreate(inputsOrUpdate)) {\n            if (outputs !== undefined || options !== undefined) {\n                throw new Error(\"Cannot provide outputs or options when using ExampleCreate object\");\n            }\n        }\n        let datasetId_ = outputs ? options?.datasetId : inputsOrUpdate.dataset_id;\n        const datasetName_ = outputs\n            ? options?.datasetName\n            : inputsOrUpdate.dataset_name;\n        if (datasetId_ === undefined && datasetName_ === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ !== undefined && datasetName_ !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId_ === undefined) {\n            const dataset = await this.readDataset({ datasetName: datasetName_ });\n            datasetId_ = dataset.id;\n        }\n        const createdAt_ = (outputs ? options?.createdAt : inputsOrUpdate.created_at) || new Date();\n        let data;\n        if (!isExampleCreate(inputsOrUpdate)) {\n            data = {\n                inputs: inputsOrUpdate,\n                outputs,\n                created_at: createdAt_?.toISOString(),\n                id: options?.exampleId,\n                metadata: options?.metadata,\n                split: options?.split,\n                source_run_id: options?.sourceRunId,\n                use_source_run_io: options?.useSourceRunIO,\n                use_source_run_attachments: options?.useSourceRunAttachments,\n                attachments: options?.attachments,\n            };\n        }\n        else {\n            data = inputsOrUpdate;\n        }\n        const response = await this._uploadExamplesMultipart(datasetId_, [data]);\n        const example = await this.readExample(response.example_ids?.[0] ?? uuid.v4());\n        return example;\n    }\n    async createExamples(propsOrUploads) {\n        if (Array.isArray(propsOrUploads)) {\n            if (propsOrUploads.length === 0) {\n                return [];\n            }\n            const uploads = propsOrUploads;\n            let datasetId_ = uploads[0].dataset_id;\n            const datasetName_ = uploads[0].dataset_name;\n            if (datasetId_ === undefined && datasetName_ === undefined) {\n                throw new Error(\"Must provide either datasetName or datasetId\");\n            }\n            else if (datasetId_ !== undefined && datasetName_ !== undefined) {\n                throw new Error(\"Must provide either datasetName or datasetId, not both\");\n            }\n            else if (datasetId_ === undefined) {\n                const dataset = await this.readDataset({ datasetName: datasetName_ });\n                datasetId_ = dataset.id;\n            }\n            const response = await this._uploadExamplesMultipart(datasetId_, uploads);\n            const examples = await Promise.all(response.example_ids.map((id) => this.readExample(id)));\n            return examples;\n        }\n        const { inputs, outputs, metadata, splits, sourceRunIds, useSourceRunIOs, useSourceRunAttachments, attachments, exampleIds, datasetId, datasetName, } = propsOrUploads;\n        if (inputs === undefined) {\n            throw new Error(\"Must provide inputs when using legacy parameters\");\n        }\n        let datasetId_ = datasetId;\n        const datasetName_ = datasetName;\n        if (datasetId_ === undefined && datasetName_ === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ !== undefined && datasetName_ !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId_ === undefined) {\n            const dataset = await this.readDataset({ datasetName: datasetName_ });\n            datasetId_ = dataset.id;\n        }\n        const formattedExamples = inputs.map((input, idx) => {\n            return {\n                dataset_id: datasetId_,\n                inputs: input,\n                outputs: outputs?.[idx],\n                metadata: metadata?.[idx],\n                split: splits?.[idx],\n                id: exampleIds?.[idx],\n                attachments: attachments?.[idx],\n                source_run_id: sourceRunIds?.[idx],\n                use_source_run_io: useSourceRunIOs?.[idx],\n                use_source_run_attachments: useSourceRunAttachments?.[idx],\n            };\n        });\n        const response = await this._uploadExamplesMultipart(datasetId_, formattedExamples);\n        const examples = await Promise.all(response.example_ids.map((id) => this.readExample(id)));\n        return examples;\n    }\n    async createLLMExample(input, generation, options) {\n        return this.createExample({ input }, { output: generation }, options);\n    }\n    async createChatExample(input, generations, options) {\n        const finalInput = input.map((message) => {\n            if (isLangChainMessage(message)) {\n                return convertLangChainMessageToExample(message);\n            }\n            return message;\n        });\n        const finalOutput = isLangChainMessage(generations)\n            ? convertLangChainMessageToExample(generations)\n            : generations;\n        return this.createExample({ input: finalInput }, { output: finalOutput }, options);\n    }\n    async readExample(exampleId) {\n        assertUuid(exampleId);\n        const path = `/examples/${exampleId}`;\n        const rawExample = await this._get(path);\n        const { attachment_urls, ...rest } = rawExample;\n        const example = rest;\n        if (attachment_urls) {\n            example.attachments = Object.entries(attachment_urls).reduce((acc, [key, value]) => {\n                acc[key.slice(\"attachment.\".length)] = {\n                    presigned_url: value.presigned_url,\n                    mime_type: value.mime_type,\n                };\n                return acc;\n            }, {});\n        }\n        return example;\n    }\n    async *listExamples({ datasetId, datasetName, exampleIds, asOf, splits, inlineS3Urls, metadata, limit, offset, filter, includeAttachments, } = {}) {\n        let datasetId_;\n        if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId !== undefined) {\n            datasetId_ = datasetId;\n        }\n        else if (datasetName !== undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        else {\n            throw new Error(\"Must provide a datasetName or datasetId\");\n        }\n        const params = new URLSearchParams({ dataset: datasetId_ });\n        const dataset_version = asOf\n            ? typeof asOf === \"string\"\n                ? asOf\n                : asOf?.toISOString()\n            : undefined;\n        if (dataset_version) {\n            params.append(\"as_of\", dataset_version);\n        }\n        const inlineS3Urls_ = inlineS3Urls ?? true;\n        params.append(\"inline_s3_urls\", inlineS3Urls_.toString());\n        if (exampleIds !== undefined) {\n            for (const id_ of exampleIds) {\n                params.append(\"id\", id_);\n            }\n        }\n        if (splits !== undefined) {\n            for (const split of splits) {\n                params.append(\"splits\", split);\n            }\n        }\n        if (metadata !== undefined) {\n            const serializedMetadata = JSON.stringify(metadata);\n            params.append(\"metadata\", serializedMetadata);\n        }\n        if (limit !== undefined) {\n            params.append(\"limit\", limit.toString());\n        }\n        if (offset !== undefined) {\n            params.append(\"offset\", offset.toString());\n        }\n        if (filter !== undefined) {\n            params.append(\"filter\", filter);\n        }\n        if (includeAttachments === true) {\n            [\"attachment_urls\", \"outputs\", \"metadata\"].forEach((field) => params.append(\"select\", field));\n        }\n        let i = 0;\n        for await (const rawExamples of this._getPaginated(\"/examples\", params)) {\n            for (const rawExample of rawExamples) {\n                const { attachment_urls, ...rest } = rawExample;\n                const example = rest;\n                if (attachment_urls) {\n                    example.attachments = Object.entries(attachment_urls).reduce((acc, [key, value]) => {\n                        acc[key.slice(\"attachment.\".length)] = {\n                            presigned_url: value.presigned_url,\n                            mime_type: value.mime_type || undefined,\n                        };\n                        return acc;\n                    }, {});\n                }\n                yield example;\n                i++;\n            }\n            if (limit !== undefined && i >= limit) {\n                break;\n            }\n        }\n    }\n    async deleteExample(exampleId) {\n        assertUuid(exampleId);\n        const path = `/examples/${exampleId}`;\n        const response = await this.caller.call(_getFetchImplementation(this.debug), this.apiUrl + path, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `delete ${path}`);\n        await response.json();\n    }\n    async updateExample(exampleIdOrUpdate, update) {\n        let exampleId;\n        if (update) {\n            exampleId = exampleIdOrUpdate;\n        }\n        else {\n            exampleId = exampleIdOrUpdate.id;\n        }\n        assertUuid(exampleId);\n        let updateToUse;\n        if (update) {\n            updateToUse = { id: exampleId, ...update };\n        }\n        else {\n            updateToUse = exampleIdOrUpdate;\n        }\n        let datasetId;\n        if (updateToUse.dataset_id !== undefined) {\n            datasetId = updateToUse.dataset_id;\n        }\n        else {\n            const example = await this.readExample(exampleId);\n            datasetId = example.dataset_id;\n        }\n        return this._updateExamplesMultipart(datasetId, [updateToUse]);\n    }\n    async updateExamples(update) {\n        // We will naively get dataset id from first example and assume it works for all\n        let datasetId;\n        if (update[0].dataset_id === undefined) {\n            const example = await this.readExample(update[0].id);\n            datasetId = example.dataset_id;\n        }\n        else {\n            datasetId = update[0].dataset_id;\n        }\n        return this._updateExamplesMultipart(datasetId, update);\n    }\n    /**\n     * Get dataset version by closest date or exact tag.\n     *\n     * Use this to resolve the nearest version to a given timestamp or for a given tag.\n     *\n     * @param options The options for getting the dataset version\n     * @param options.datasetId The ID of the dataset\n     * @param options.datasetName The name of the dataset\n     * @param options.asOf The timestamp of the dataset to retrieve\n     * @param options.tag The tag of the dataset to retrieve\n     * @returns The dataset version\n     */\n    async readDatasetVersion({ datasetId, datasetName, asOf, tag, }) {\n        let resolvedDatasetId;\n        if (!datasetId) {\n            const dataset = await this.readDataset({ datasetName });\n            resolvedDatasetId = dataset.id;\n        }\n        else {\n            resolvedDatasetId = datasetId;\n        }\n        assertUuid(resolvedDatasetId);\n        if ((asOf && tag) || (!asOf && !tag)) {\n            throw new Error(\"Exactly one of asOf and tag must be specified.\");\n        }\n        const params = new URLSearchParams();\n        if (asOf !== undefined) {\n            params.append(\"as_of\", typeof asOf === \"string\" ? asOf : asOf.toISOString());\n        }\n        if (tag !== undefined) {\n            params.append(\"tag\", tag);\n        }\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets/${resolvedDatasetId}/version?${params.toString()}`, {\n            method: \"GET\",\n            headers: { ...this.headers },\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"read dataset version\");\n        return await response.json();\n    }\n    async listDatasetSplits({ datasetId, datasetName, asOf, }) {\n        let datasetId_;\n        if (datasetId === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide dataset name or ID\");\n        }\n        else if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        else {\n            datasetId_ = datasetId;\n        }\n        assertUuid(datasetId_);\n        const params = new URLSearchParams();\n        const dataset_version = asOf\n            ? typeof asOf === \"string\"\n                ? asOf\n                : asOf?.toISOString()\n            : undefined;\n        if (dataset_version) {\n            params.append(\"as_of\", dataset_version);\n        }\n        const response = await this._get(`/datasets/${datasetId_}/splits`, params);\n        return response;\n    }\n    async updateDatasetSplits({ datasetId, datasetName, splitName, exampleIds, remove = false, }) {\n        let datasetId_;\n        if (datasetId === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide dataset name or ID\");\n        }\n        else if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        else {\n            datasetId_ = datasetId;\n        }\n        assertUuid(datasetId_);\n        const data = {\n            split_name: splitName,\n            examples: exampleIds.map((id) => {\n                assertUuid(id);\n                return id;\n            }),\n            remove,\n        };\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets/${datasetId_}/splits`, {\n            method: \"PUT\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update dataset splits\", true);\n    }\n    /**\n     * @deprecated This method is deprecated and will be removed in future LangSmith versions, use `evaluate` from `langsmith/evaluation` instead.\n     */\n    async evaluateRun(run, evaluator, { sourceInfo, loadChildRuns, referenceExample, } = { loadChildRuns: false }) {\n        warnOnce(\"This method is deprecated and will be removed in future LangSmith versions, use `evaluate` from `langsmith/evaluation` instead.\");\n        let run_;\n        if (typeof run === \"string\") {\n            run_ = await this.readRun(run, { loadChildRuns });\n        }\n        else if (typeof run === \"object\" && \"id\" in run) {\n            run_ = run;\n        }\n        else {\n            throw new Error(`Invalid run type: ${typeof run}`);\n        }\n        if (run_.reference_example_id !== null &&\n            run_.reference_example_id !== undefined) {\n            referenceExample = await this.readExample(run_.reference_example_id);\n        }\n        const feedbackResult = await evaluator.evaluateRun(run_, referenceExample);\n        const [_, feedbacks] = await this._logEvaluationFeedback(feedbackResult, run_, sourceInfo);\n        return feedbacks[0];\n    }\n    async createFeedback(runId, key, { score, value, correction, comment, sourceInfo, feedbackSourceType = \"api\", sourceRunId, feedbackId, feedbackConfig, projectId, comparativeExperimentId, }) {\n        if (!runId && !projectId) {\n            throw new Error(\"One of runId or projectId must be provided\");\n        }\n        if (runId && projectId) {\n            throw new Error(\"Only one of runId or projectId can be provided\");\n        }\n        const feedback_source = {\n            type: feedbackSourceType ?? \"api\",\n            metadata: sourceInfo ?? {},\n        };\n        if (sourceRunId !== undefined &&\n            feedback_source?.metadata !== undefined &&\n            !feedback_source.metadata[\"__run\"]) {\n            feedback_source.metadata[\"__run\"] = { run_id: sourceRunId };\n        }\n        if (feedback_source?.metadata !== undefined &&\n            feedback_source.metadata[\"__run\"]?.run_id !== undefined) {\n            assertUuid(feedback_source.metadata[\"__run\"].run_id);\n        }\n        const feedback = {\n            id: feedbackId ?? uuid.v4(),\n            run_id: runId,\n            key,\n            score: _formatFeedbackScore(score),\n            value,\n            correction,\n            comment,\n            feedback_source: feedback_source,\n            comparative_experiment_id: comparativeExperimentId,\n            feedbackConfig,\n            session_id: projectId,\n        };\n        const url = `${this.apiUrl}/feedback`;\n        const response = await this.caller.call(_getFetchImplementation(this.debug), url, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(feedback),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create feedback\", true);\n        return feedback;\n    }\n    async updateFeedback(feedbackId, { score, value, correction, comment, }) {\n        const feedbackUpdate = {};\n        if (score !== undefined && score !== null) {\n            feedbackUpdate[\"score\"] = _formatFeedbackScore(score);\n        }\n        if (value !== undefined && value !== null) {\n            feedbackUpdate[\"value\"] = value;\n        }\n        if (correction !== undefined && correction !== null) {\n            feedbackUpdate[\"correction\"] = correction;\n        }\n        if (comment !== undefined && comment !== null) {\n            feedbackUpdate[\"comment\"] = comment;\n        }\n        assertUuid(feedbackId);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/feedback/${feedbackId}`, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(feedbackUpdate),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update feedback\", true);\n    }\n    async readFeedback(feedbackId) {\n        assertUuid(feedbackId);\n        const path = `/feedback/${feedbackId}`;\n        const response = await this._get(path);\n        return response;\n    }\n    async deleteFeedback(feedbackId) {\n        assertUuid(feedbackId);\n        const path = `/feedback/${feedbackId}`;\n        const response = await this.caller.call(_getFetchImplementation(this.debug), this.apiUrl + path, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `delete ${path}`);\n        await response.json();\n    }\n    async *listFeedback({ runIds, feedbackKeys, feedbackSourceTypes, } = {}) {\n        const queryParams = new URLSearchParams();\n        if (runIds) {\n            queryParams.append(\"run\", runIds.join(\",\"));\n        }\n        if (feedbackKeys) {\n            for (const key of feedbackKeys) {\n                queryParams.append(\"key\", key);\n            }\n        }\n        if (feedbackSourceTypes) {\n            for (const type of feedbackSourceTypes) {\n                queryParams.append(\"source\", type);\n            }\n        }\n        for await (const feedbacks of this._getPaginated(\"/feedback\", queryParams)) {\n            yield* feedbacks;\n        }\n    }\n    /**\n     * Creates a presigned feedback token and URL.\n     *\n     * The token can be used to authorize feedback metrics without\n     * needing an API key. This is useful for giving browser-based\n     * applications the ability to submit feedback without needing\n     * to expose an API key.\n     *\n     * @param runId The ID of the run.\n     * @param feedbackKey The feedback key.\n     * @param options Additional options for the token.\n     * @param options.expiration The expiration time for the token.\n     *\n     * @returns A promise that resolves to a FeedbackIngestToken.\n     */\n    async createPresignedFeedbackToken(runId, feedbackKey, { expiration, feedbackConfig, } = {}) {\n        const body = {\n            run_id: runId,\n            feedback_key: feedbackKey,\n            feedback_config: feedbackConfig,\n        };\n        if (expiration) {\n            if (typeof expiration === \"string\") {\n                body[\"expires_at\"] = expiration;\n            }\n            else if (expiration?.hours || expiration?.minutes || expiration?.days) {\n                body[\"expires_in\"] = expiration;\n            }\n        }\n        else {\n            body[\"expires_in\"] = {\n                hours: 3,\n            };\n        }\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/feedback/tokens`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const result = await response.json();\n        return result;\n    }\n    async createComparativeExperiment({ name, experimentIds, referenceDatasetId, createdAt, description, metadata, id, }) {\n        if (experimentIds.length === 0) {\n            throw new Error(\"At least one experiment is required\");\n        }\n        if (!referenceDatasetId) {\n            referenceDatasetId = (await this.readProject({\n                projectId: experimentIds[0],\n            })).reference_dataset_id;\n        }\n        if (!referenceDatasetId == null) {\n            throw new Error(\"A reference dataset is required\");\n        }\n        const body = {\n            id,\n            name,\n            experiment_ids: experimentIds,\n            reference_dataset_id: referenceDatasetId,\n            description,\n            created_at: (createdAt ?? new Date())?.toISOString(),\n            extra: {},\n        };\n        if (metadata)\n            body.extra[\"metadata\"] = metadata;\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets/comparative`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        return await response.json();\n    }\n    /**\n     * Retrieves a list of presigned feedback tokens for a given run ID.\n     * @param runId The ID of the run.\n     * @returns An async iterable of FeedbackIngestToken objects.\n     */\n    async *listPresignedFeedbackTokens(runId) {\n        assertUuid(runId);\n        const params = new URLSearchParams({ run_id: runId });\n        for await (const tokens of this._getPaginated(\"/feedback/tokens\", params)) {\n            yield* tokens;\n        }\n    }\n    _selectEvalResults(results) {\n        let results_;\n        if (\"results\" in results) {\n            results_ = results.results;\n        }\n        else if (Array.isArray(results)) {\n            results_ = results;\n        }\n        else {\n            results_ = [results];\n        }\n        return results_;\n    }\n    async _logEvaluationFeedback(evaluatorResponse, run, sourceInfo) {\n        const evalResults = this._selectEvalResults(evaluatorResponse);\n        const feedbacks = [];\n        for (const res of evalResults) {\n            let sourceInfo_ = sourceInfo || {};\n            if (res.evaluatorInfo) {\n                sourceInfo_ = { ...res.evaluatorInfo, ...sourceInfo_ };\n            }\n            let runId_ = null;\n            if (res.targetRunId) {\n                runId_ = res.targetRunId;\n            }\n            else if (run) {\n                runId_ = run.id;\n            }\n            feedbacks.push(await this.createFeedback(runId_, res.key, {\n                score: res.score,\n                value: res.value,\n                comment: res.comment,\n                correction: res.correction,\n                sourceInfo: sourceInfo_,\n                sourceRunId: res.sourceRunId,\n                feedbackConfig: res.feedbackConfig,\n                feedbackSourceType: \"model\",\n            }));\n        }\n        return [evalResults, feedbacks];\n    }\n    async logEvaluationFeedback(evaluatorResponse, run, sourceInfo) {\n        const [results] = await this._logEvaluationFeedback(evaluatorResponse, run, sourceInfo);\n        return results;\n    }\n    /**\n     * API for managing annotation queues\n     */\n    /**\n     * List the annotation queues on the LangSmith API.\n     * @param options - The options for listing annotation queues\n     * @param options.queueIds - The IDs of the queues to filter by\n     * @param options.name - The name of the queue to filter by\n     * @param options.nameContains - The substring that the queue name should contain\n     * @param options.limit - The maximum number of queues to return\n     * @returns An iterator of AnnotationQueue objects\n     */\n    async *listAnnotationQueues(options = {}) {\n        const { queueIds, name, nameContains, limit } = options;\n        const params = new URLSearchParams();\n        if (queueIds) {\n            queueIds.forEach((id, i) => {\n                assertUuid(id, `queueIds[${i}]`);\n                params.append(\"ids\", id);\n            });\n        }\n        if (name)\n            params.append(\"name\", name);\n        if (nameContains)\n            params.append(\"name_contains\", nameContains);\n        params.append(\"limit\", (limit !== undefined ? Math.min(limit, 100) : 100).toString());\n        let count = 0;\n        for await (const queues of this._getPaginated(\"/annotation-queues\", params)) {\n            yield* queues;\n            count++;\n            if (limit !== undefined && count >= limit)\n                break;\n        }\n    }\n    /**\n     * Create an annotation queue on the LangSmith API.\n     * @param options - The options for creating an annotation queue\n     * @param options.name - The name of the annotation queue\n     * @param options.description - The description of the annotation queue\n     * @param options.queueId - The ID of the annotation queue\n     * @returns The created AnnotationQueue object\n     */\n    async createAnnotationQueue(options) {\n        const { name, description, queueId, rubricInstructions } = options;\n        const body = {\n            name,\n            description,\n            id: queueId || uuid.v4(),\n            rubric_instructions: rubricInstructions,\n        };\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/annotation-queues`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(Object.fromEntries(Object.entries(body).filter(([_, v]) => v !== undefined))),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create annotation queue\");\n        const data = await response.json();\n        return data;\n    }\n    /**\n     * Read an annotation queue with the specified queue ID.\n     * @param queueId - The ID of the annotation queue to read\n     * @returns The AnnotationQueueWithDetails object\n     */\n    async readAnnotationQueue(queueId) {\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"read annotation queue\");\n        const data = await response.json();\n        return data;\n    }\n    /**\n     * Update an annotation queue with the specified queue ID.\n     * @param queueId - The ID of the annotation queue to update\n     * @param options - The options for updating the annotation queue\n     * @param options.name - The new name for the annotation queue\n     * @param options.description - The new description for the annotation queue\n     */\n    async updateAnnotationQueue(queueId, options) {\n        const { name, description, rubricInstructions } = options;\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}`, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                name,\n                description,\n                rubric_instructions: rubricInstructions,\n            }),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update annotation queue\");\n    }\n    /**\n     * Delete an annotation queue with the specified queue ID.\n     * @param queueId - The ID of the annotation queue to delete\n     */\n    async deleteAnnotationQueue(queueId) {\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}`, {\n            method: \"DELETE\",\n            headers: { ...this.headers, Accept: \"application/json\" },\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"delete annotation queue\");\n    }\n    /**\n     * Add runs to an annotation queue with the specified queue ID.\n     * @param queueId - The ID of the annotation queue\n     * @param runIds - The IDs of the runs to be added to the annotation queue\n     */\n    async addRunsToAnnotationQueue(queueId, runIds) {\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}/runs`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(runIds.map((id, i) => assertUuid(id, `runIds[${i}]`).toString())),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"add runs to annotation queue\");\n    }\n    /**\n     * Get a run from an annotation queue at the specified index.\n     * @param queueId - The ID of the annotation queue\n     * @param index - The index of the run to retrieve\n     * @returns A Promise that resolves to a RunWithAnnotationQueueInfo object\n     * @throws {Error} If the run is not found at the given index or for other API-related errors\n     */\n    async getRunFromAnnotationQueue(queueId, index) {\n        const baseUrl = `/annotation-queues/${assertUuid(queueId, \"queueId\")}/run`;\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}${baseUrl}/${index}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"get run from annotation queue\");\n        return await response.json();\n    }\n    /**\n     * Delete a run from an an annotation queue.\n     * @param queueId - The ID of the annotation queue to delete the run from\n     * @param queueRunId - The ID of the run to delete from the annotation queue\n     */\n    async deleteRunFromAnnotationQueue(queueId, queueRunId) {\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}/runs/${assertUuid(queueRunId, \"queueRunId\")}`, {\n            method: \"DELETE\",\n            headers: { ...this.headers, Accept: \"application/json\" },\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"delete run from annotation queue\");\n    }\n    /**\n     * Get the size of an annotation queue.\n     * @param queueId - The ID of the annotation queue\n     */\n    async getSizeFromAnnotationQueue(queueId) {\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}/size`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"get size from annotation queue\");\n        return await response.json();\n    }\n    async _currentTenantIsOwner(owner) {\n        const settings = await this._getSettings();\n        return owner == \"-\" || settings.tenant_handle === owner;\n    }\n    async _ownerConflictError(action, owner) {\n        const settings = await this._getSettings();\n        return new Error(`Cannot ${action} for another tenant.\\n\n      Current tenant: ${settings.tenant_handle}\\n\n      Requested tenant: ${owner}`);\n    }\n    async _getLatestCommitHash(promptOwnerAndName) {\n        const res = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/commits/${promptOwnerAndName}/?limit=${1}&offset=${0}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const json = await res.json();\n        if (!res.ok) {\n            const detail = typeof json.detail === \"string\"\n                ? json.detail\n                : JSON.stringify(json.detail);\n            const error = new Error(`Error ${res.status}: ${res.statusText}\\n${detail}`);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            error.statusCode = res.status;\n            throw error;\n        }\n        if (json.commits.length === 0) {\n            return undefined;\n        }\n        return json.commits[0].commit_hash;\n    }\n    async _likeOrUnlikePrompt(promptIdentifier, like) {\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/likes/${owner}/${promptName}`, {\n            method: \"POST\",\n            body: JSON.stringify({ like: like }),\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `${like ? \"like\" : \"unlike\"} prompt`);\n        return await response.json();\n    }\n    async _getPromptUrl(promptIdentifier) {\n        const [owner, promptName, commitHash] = parsePromptIdentifier(promptIdentifier);\n        if (!(await this._currentTenantIsOwner(owner))) {\n            if (commitHash !== \"latest\") {\n                return `${this.getHostUrl()}/hub/${owner}/${promptName}/${commitHash.substring(0, 8)}`;\n            }\n            else {\n                return `${this.getHostUrl()}/hub/${owner}/${promptName}`;\n            }\n        }\n        else {\n            const settings = await this._getSettings();\n            if (commitHash !== \"latest\") {\n                return `${this.getHostUrl()}/prompts/${promptName}/${commitHash.substring(0, 8)}?organizationId=${settings.id}`;\n            }\n            else {\n                return `${this.getHostUrl()}/prompts/${promptName}?organizationId=${settings.id}`;\n            }\n        }\n    }\n    async promptExists(promptIdentifier) {\n        const prompt = await this.getPrompt(promptIdentifier);\n        return !!prompt;\n    }\n    async likePrompt(promptIdentifier) {\n        return this._likeOrUnlikePrompt(promptIdentifier, true);\n    }\n    async unlikePrompt(promptIdentifier) {\n        return this._likeOrUnlikePrompt(promptIdentifier, false);\n    }\n    async *listCommits(promptOwnerAndName) {\n        for await (const commits of this._getPaginated(`/commits/${promptOwnerAndName}/`, new URLSearchParams(), (res) => res.commits)) {\n            yield* commits;\n        }\n    }\n    async *listPrompts(options) {\n        const params = new URLSearchParams();\n        params.append(\"sort_field\", options?.sortField ?? \"updated_at\");\n        params.append(\"sort_direction\", \"desc\");\n        params.append(\"is_archived\", (!!options?.isArchived).toString());\n        if (options?.isPublic !== undefined) {\n            params.append(\"is_public\", options.isPublic.toString());\n        }\n        if (options?.query) {\n            params.append(\"query\", options.query);\n        }\n        for await (const prompts of this._getPaginated(\"/repos\", params, (res) => res.repos)) {\n            yield* prompts;\n        }\n    }\n    async getPrompt(promptIdentifier) {\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/repos/${owner}/${promptName}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        if (response.status === 404) {\n            return null;\n        }\n        await raiseForStatus(response, \"get prompt\");\n        const result = await response.json();\n        if (result.repo) {\n            return result.repo;\n        }\n        else {\n            return null;\n        }\n    }\n    async createPrompt(promptIdentifier, options) {\n        const settings = await this._getSettings();\n        if (options?.isPublic && !settings.tenant_handle) {\n            throw new Error(`Cannot create a public prompt without first\\n\n        creating a LangChain Hub handle. \n        You can add a handle by creating a public prompt at:\\n\n        https://smith.langchain.com/prompts`);\n        }\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        if (!(await this._currentTenantIsOwner(owner))) {\n            throw await this._ownerConflictError(\"create a prompt\", owner);\n        }\n        const data = {\n            repo_handle: promptName,\n            ...(options?.description && { description: options.description }),\n            ...(options?.readme && { readme: options.readme }),\n            ...(options?.tags && { tags: options.tags }),\n            is_public: !!options?.isPublic,\n        };\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/repos/`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create prompt\");\n        const { repo } = await response.json();\n        return repo;\n    }\n    async createCommit(promptIdentifier, object, options) {\n        if (!(await this.promptExists(promptIdentifier))) {\n            throw new Error(\"Prompt does not exist, you must create it first.\");\n        }\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        const resolvedParentCommitHash = options?.parentCommitHash === \"latest\" || !options?.parentCommitHash\n            ? await this._getLatestCommitHash(`${owner}/${promptName}`)\n            : options?.parentCommitHash;\n        const payload = {\n            manifest: JSON.parse(JSON.stringify(object)),\n            parent_commit: resolvedParentCommitHash,\n        };\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/commits/${owner}/${promptName}`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(payload),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create commit\");\n        const result = await response.json();\n        return this._getPromptUrl(`${owner}/${promptName}${result.commit_hash ? `:${result.commit_hash}` : \"\"}`);\n    }\n    /**\n     * Update examples with attachments using multipart form data.\n     * @param updates List of ExampleUpdateWithAttachments objects to upsert\n     * @returns Promise with the update response\n     */\n    async updateExamplesMultipart(datasetId, updates = []) {\n        return this._updateExamplesMultipart(datasetId, updates);\n    }\n    async _updateExamplesMultipart(datasetId, updates = []) {\n        if (!(await this._getMultiPartSupport())) {\n            throw new Error(\"Your LangSmith deployment does not allow using the multipart examples endpoint, please upgrade your deployment to the latest version.\");\n        }\n        const formData = new FormData();\n        for (const example of updates) {\n            const exampleId = example.id;\n            // Prepare the main example body\n            const exampleBody = {\n                ...(example.metadata && { metadata: example.metadata }),\n                ...(example.split && { split: example.split }),\n            };\n            // Add main example data\n            const stringifiedExample = serializePayloadForTracing(exampleBody, `Serializing body for example with id: ${exampleId}`);\n            const exampleBlob = new Blob([stringifiedExample], {\n                type: \"application/json\",\n            });\n            formData.append(exampleId, exampleBlob);\n            // Add inputs if present\n            if (example.inputs) {\n                const stringifiedInputs = serializePayloadForTracing(example.inputs, `Serializing inputs for example with id: ${exampleId}`);\n                const inputsBlob = new Blob([stringifiedInputs], {\n                    type: \"application/json\",\n                });\n                formData.append(`${exampleId}.inputs`, inputsBlob);\n            }\n            // Add outputs if present\n            if (example.outputs) {\n                const stringifiedOutputs = serializePayloadForTracing(example.outputs, `Serializing outputs whle updating example with id: ${exampleId}`);\n                const outputsBlob = new Blob([stringifiedOutputs], {\n                    type: \"application/json\",\n                });\n                formData.append(`${exampleId}.outputs`, outputsBlob);\n            }\n            // Add attachments if present\n            if (example.attachments) {\n                for (const [name, attachment] of Object.entries(example.attachments)) {\n                    let mimeType;\n                    let data;\n                    if (Array.isArray(attachment)) {\n                        [mimeType, data] = attachment;\n                    }\n                    else {\n                        mimeType = attachment.mimeType;\n                        data = attachment.data;\n                    }\n                    const attachmentBlob = new Blob([data], {\n                        type: `${mimeType}; length=${data.byteLength}`,\n                    });\n                    formData.append(`${exampleId}.attachment.${name}`, attachmentBlob);\n                }\n            }\n            if (example.attachments_operations) {\n                const stringifiedAttachmentsOperations = serializePayloadForTracing(example.attachments_operations, `Serializing attachments while updating example with id: ${exampleId}`);\n                const attachmentsOperationsBlob = new Blob([stringifiedAttachmentsOperations], {\n                    type: \"application/json\",\n                });\n                formData.append(`${exampleId}.attachments_operations`, attachmentsOperationsBlob);\n            }\n        }\n        const datasetIdToUse = datasetId ?? updates[0]?.dataset_id;\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/v1/platform/datasets/${datasetIdToUse}/examples`, {\n            method: \"PATCH\",\n            headers: this.headers,\n            body: formData,\n        });\n        const result = await response.json();\n        return result;\n    }\n    /**\n     * Upload examples with attachments using multipart form data.\n     * @param uploads List of ExampleUploadWithAttachments objects to upload\n     * @returns Promise with the upload response\n     * @deprecated This method is deprecated and will be removed in future LangSmith versions, please use `createExamples` instead\n     */\n    async uploadExamplesMultipart(datasetId, uploads = []) {\n        return this._uploadExamplesMultipart(datasetId, uploads);\n    }\n    async _uploadExamplesMultipart(datasetId, uploads = []) {\n        if (!(await this._getMultiPartSupport())) {\n            throw new Error(\"Your LangSmith deployment does not allow using the multipart examples endpoint, please upgrade your deployment to the latest version.\");\n        }\n        const formData = new FormData();\n        for (const example of uploads) {\n            const exampleId = (example.id ?? uuid.v4()).toString();\n            // Prepare the main example body\n            const exampleBody = {\n                created_at: example.created_at,\n                ...(example.metadata && { metadata: example.metadata }),\n                ...(example.split && { split: example.split }),\n                ...(example.source_run_id && { source_run_id: example.source_run_id }),\n                ...(example.use_source_run_io && {\n                    use_source_run_io: example.use_source_run_io,\n                }),\n                ...(example.use_source_run_attachments && {\n                    use_source_run_attachments: example.use_source_run_attachments,\n                }),\n            };\n            // Add main example data\n            const stringifiedExample = serializePayloadForTracing(exampleBody, `Serializing body for uploaded example with id: ${exampleId}`);\n            const exampleBlob = new Blob([stringifiedExample], {\n                type: \"application/json\",\n            });\n            formData.append(exampleId, exampleBlob);\n            // Add inputs if present\n            if (example.inputs) {\n                const stringifiedInputs = serializePayloadForTracing(example.inputs, `Serializing inputs for uploaded example with id: ${exampleId}`);\n                const inputsBlob = new Blob([stringifiedInputs], {\n                    type: \"application/json\",\n                });\n                formData.append(`${exampleId}.inputs`, inputsBlob);\n            }\n            // Add outputs if present\n            if (example.outputs) {\n                const stringifiedOutputs = serializePayloadForTracing(example.outputs, `Serializing outputs for uploaded example with id: ${exampleId}`);\n                const outputsBlob = new Blob([stringifiedOutputs], {\n                    type: \"application/json\",\n                });\n                formData.append(`${exampleId}.outputs`, outputsBlob);\n            }\n            // Add attachments if present\n            if (example.attachments) {\n                for (const [name, attachment] of Object.entries(example.attachments)) {\n                    let mimeType;\n                    let data;\n                    if (Array.isArray(attachment)) {\n                        [mimeType, data] = attachment;\n                    }\n                    else {\n                        mimeType = attachment.mimeType;\n                        data = attachment.data;\n                    }\n                    const attachmentBlob = new Blob([data], {\n                        type: `${mimeType}; length=${data.byteLength}`,\n                    });\n                    formData.append(`${exampleId}.attachment.${name}`, attachmentBlob);\n                }\n            }\n        }\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/v1/platform/datasets/${datasetId}/examples`, {\n            method: \"POST\",\n            headers: this.headers,\n            body: formData,\n        });\n        await raiseForStatus(response, \"upload examples\");\n        const result = await response.json();\n        return result;\n    }\n    async updatePrompt(promptIdentifier, options) {\n        if (!(await this.promptExists(promptIdentifier))) {\n            throw new Error(\"Prompt does not exist, you must create it first.\");\n        }\n        const [owner, promptName] = parsePromptIdentifier(promptIdentifier);\n        if (!(await this._currentTenantIsOwner(owner))) {\n            throw await this._ownerConflictError(\"update a prompt\", owner);\n        }\n        const payload = {};\n        if (options?.description !== undefined)\n            payload.description = options.description;\n        if (options?.readme !== undefined)\n            payload.readme = options.readme;\n        if (options?.tags !== undefined)\n            payload.tags = options.tags;\n        if (options?.isPublic !== undefined)\n            payload.is_public = options.isPublic;\n        if (options?.isArchived !== undefined)\n            payload.is_archived = options.isArchived;\n        // Check if payload is empty\n        if (Object.keys(payload).length === 0) {\n            throw new Error(\"No valid update options provided\");\n        }\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/repos/${owner}/${promptName}`, {\n            method: \"PATCH\",\n            body: JSON.stringify(payload),\n            headers: {\n                ...this.headers,\n                \"Content-Type\": \"application/json\",\n            },\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update prompt\");\n        return response.json();\n    }\n    async deletePrompt(promptIdentifier) {\n        if (!(await this.promptExists(promptIdentifier))) {\n            throw new Error(\"Prompt does not exist, you must create it first.\");\n        }\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        if (!(await this._currentTenantIsOwner(owner))) {\n            throw await this._ownerConflictError(\"delete a prompt\", owner);\n        }\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/repos/${owner}/${promptName}`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        return await response.json();\n    }\n    async pullPromptCommit(promptIdentifier, options) {\n        const [owner, promptName, commitHash] = parsePromptIdentifier(promptIdentifier);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/commits/${owner}/${promptName}/${commitHash}${options?.includeModel ? \"?include_model=true\" : \"\"}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"pull prompt commit\");\n        const result = await response.json();\n        return {\n            owner,\n            repo: promptName,\n            commit_hash: result.commit_hash,\n            manifest: result.manifest,\n            examples: result.examples,\n        };\n    }\n    /**\n     * This method should not be used directly, use `import { pull } from \"langchain/hub\"` instead.\n     * Using this method directly returns the JSON string of the prompt rather than a LangChain object.\n     * @private\n     */\n    async _pullPrompt(promptIdentifier, options) {\n        const promptObject = await this.pullPromptCommit(promptIdentifier, {\n            includeModel: options?.includeModel,\n        });\n        const prompt = JSON.stringify(promptObject.manifest);\n        return prompt;\n    }\n    async pushPrompt(promptIdentifier, options) {\n        // Create or update prompt metadata\n        if (await this.promptExists(promptIdentifier)) {\n            if (options && Object.keys(options).some((key) => key !== \"object\")) {\n                await this.updatePrompt(promptIdentifier, {\n                    description: options?.description,\n                    readme: options?.readme,\n                    tags: options?.tags,\n                    isPublic: options?.isPublic,\n                });\n            }\n        }\n        else {\n            await this.createPrompt(promptIdentifier, {\n                description: options?.description,\n                readme: options?.readme,\n                tags: options?.tags,\n                isPublic: options?.isPublic,\n            });\n        }\n        if (!options?.object) {\n            return await this._getPromptUrl(promptIdentifier);\n        }\n        // Create a commit with the new manifest\n        const url = await this.createCommit(promptIdentifier, options?.object, {\n            parentCommitHash: options?.parentCommitHash,\n        });\n        return url;\n    }\n    /**\n     * Clone a public dataset to your own langsmith tenant.\n     * This operation is idempotent. If you already have a dataset with the given name,\n     * this function will do nothing.\n  \n     * @param {string} tokenOrUrl The token of the public dataset to clone.\n     * @param {Object} [options] Additional options for cloning the dataset.\n     * @param {string} [options.sourceApiUrl] The URL of the langsmith server where the data is hosted. Defaults to the API URL of your current client.\n     * @param {string} [options.datasetName] The name of the dataset to create in your tenant. Defaults to the name of the public dataset.\n     * @returns {Promise<void>}\n     */\n    async clonePublicDataset(tokenOrUrl, options = {}) {\n        const { sourceApiUrl = this.apiUrl, datasetName } = options;\n        const [parsedApiUrl, tokenUuid] = this.parseTokenOrUrl(tokenOrUrl, sourceApiUrl);\n        const sourceClient = new Client({\n            apiUrl: parsedApiUrl,\n            // Placeholder API key not needed anymore in most cases, but\n            // some private deployments may have API key-based rate limiting\n            // that would cause this to fail if we provide no value.\n            apiKey: \"placeholder\",\n        });\n        const ds = await sourceClient.readSharedDataset(tokenUuid);\n        const finalDatasetName = datasetName || ds.name;\n        try {\n            if (await this.hasDataset({ datasetId: finalDatasetName })) {\n                console.log(`Dataset ${finalDatasetName} already exists in your tenant. Skipping.`);\n                return;\n            }\n        }\n        catch (_) {\n            // `.hasDataset` will throw an error if the dataset does not exist.\n            // no-op in that case\n        }\n        // Fetch examples first, then create the dataset\n        const examples = await sourceClient.listSharedExamples(tokenUuid);\n        const dataset = await this.createDataset(finalDatasetName, {\n            description: ds.description,\n            dataType: ds.data_type || \"kv\",\n            inputsSchema: ds.inputs_schema_definition ?? undefined,\n            outputsSchema: ds.outputs_schema_definition ?? undefined,\n        });\n        try {\n            await this.createExamples({\n                inputs: examples.map((e) => e.inputs),\n                outputs: examples.flatMap((e) => (e.outputs ? [e.outputs] : [])),\n                datasetId: dataset.id,\n            });\n        }\n        catch (e) {\n            console.error(`An error occurred while creating dataset ${finalDatasetName}. ` +\n                \"You should delete it manually.\");\n            throw e;\n        }\n    }\n    parseTokenOrUrl(urlOrToken, apiUrl, numParts = 2, kind = \"dataset\") {\n        // Try parsing as UUID\n        try {\n            assertUuid(urlOrToken); // Will throw if it's not a UUID.\n            return [apiUrl, urlOrToken];\n        }\n        catch (_) {\n            // no-op if it's not a uuid\n        }\n        // Parse as URL\n        try {\n            const parsedUrl = new URL(urlOrToken);\n            const pathParts = parsedUrl.pathname\n                .split(\"/\")\n                .filter((part) => part !== \"\");\n            if (pathParts.length >= numParts) {\n                const tokenUuid = pathParts[pathParts.length - numParts];\n                return [apiUrl, tokenUuid];\n            }\n            else {\n                throw new Error(`Invalid public ${kind} URL: ${urlOrToken}`);\n            }\n        }\n        catch (error) {\n            throw new Error(`Invalid public ${kind} URL or token: ${urlOrToken}`);\n        }\n    }\n    /**\n     * Awaits all pending trace batches. Useful for environments where\n     * you need to be sure that all tracing requests finish before execution ends,\n     * such as serverless environments.\n     *\n     * @example\n     * ```\n     * import { Client } from \"langsmith\";\n     *\n     * const client = new Client();\n     *\n     * try {\n     *   // Tracing happens here\n     *   ...\n     * } finally {\n     *   await client.awaitPendingTraceBatches();\n     * }\n     * ```\n     *\n     * @returns A promise that resolves once all currently pending traces have sent.\n     */\n    awaitPendingTraceBatches() {\n        if (this.manualFlushMode) {\n            console.warn(\"[WARNING]: When tracing in manual flush mode, you must call `await client.flush()` manually to submit trace batches.\");\n            return Promise.resolve();\n        }\n        return Promise.all([\n            ...this.autoBatchQueue.items.map(({ itemPromise }) => itemPromise),\n            this.batchIngestCaller.queue.onIdle(),\n        ]);\n    }\n}\nfunction isExampleCreate(input) {\n    return \"dataset_id\" in input || \"dataset_name\" in input;\n}\n","import pRetry from \"p-retry\";\nimport PQueueMod from \"p-queue\";\nimport { _getFetchImplementation } from \"../singletons/fetch.js\";\nconst STATUS_NO_RETRY = [\n    400, // Bad Request\n    401, // Unauthorized\n    403, // Forbidden\n    404, // Not Found\n    405, // Method Not Allowed\n    406, // Not Acceptable\n    407, // Proxy Authentication Required\n    408, // Request Timeout\n];\nconst STATUS_IGNORE = [\n    409, // Conflict\n];\n/**\n * A class that can be used to make async calls with concurrency and retry logic.\n *\n * This is useful for making calls to any kind of \"expensive\" external resource,\n * be it because it's rate-limited, subject to network issues, etc.\n *\n * Concurrent calls are limited by the `maxConcurrency` parameter, which defaults\n * to `Infinity`. This means that by default, all calls will be made in parallel.\n *\n * Retries are limited by the `maxRetries` parameter, which defaults to 6. This\n * means that by default, each call will be retried up to 6 times, with an\n * exponential backoff between each attempt.\n */\nexport class AsyncCaller {\n    constructor(params) {\n        Object.defineProperty(this, \"maxConcurrency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxRetries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"queue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"onFailedResponseHook\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"debug\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxConcurrency = params.maxConcurrency ?? Infinity;\n        this.maxRetries = params.maxRetries ?? 6;\n        this.debug = params.debug;\n        if (\"default\" in PQueueMod) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.queue = new PQueueMod.default({\n                concurrency: this.maxConcurrency,\n            });\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.queue = new PQueueMod({ concurrency: this.maxConcurrency });\n        }\n        this.onFailedResponseHook = params?.onFailedResponseHook;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call(callable, ...args) {\n        const onFailedResponseHook = this.onFailedResponseHook;\n        return this.queue.add(() => pRetry(() => callable(...args).catch((error) => {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (error instanceof Error) {\n                throw error;\n            }\n            else {\n                throw new Error(error);\n            }\n        }), {\n            async onFailedAttempt(error) {\n                if (error.message.startsWith(\"Cancel\") ||\n                    error.message.startsWith(\"TimeoutError\") ||\n                    error.message.startsWith(\"AbortError\")) {\n                    throw error;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if (error?.code === \"ECONNABORTED\") {\n                    throw error;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const response = error?.response;\n                const status = response?.status;\n                if (status) {\n                    if (STATUS_NO_RETRY.includes(+status)) {\n                        throw error;\n                    }\n                    else if (STATUS_IGNORE.includes(+status)) {\n                        return;\n                    }\n                    if (onFailedResponseHook) {\n                        await onFailedResponseHook(response);\n                    }\n                }\n            },\n            // If needed we can change some of the defaults here,\n            // but they're quite sensible.\n            retries: this.maxRetries,\n            randomize: true,\n        }), { throwOnTimeout: true });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callWithOptions(options, callable, ...args) {\n        // Note this doesn't cancel the underlying request,\n        // when available prefer to use the signal option of the underlying call\n        if (options.signal) {\n            return Promise.race([\n                this.call(callable, ...args),\n                new Promise((_, reject) => {\n                    options.signal?.addEventListener(\"abort\", () => {\n                        reject(new Error(\"AbortError\"));\n                    });\n                }),\n            ]);\n        }\n        return this.call(callable, ...args);\n    }\n    fetch(...args) {\n        return this.call(() => _getFetchImplementation(this.debug)(...args).then((res) => res.ok ? res : Promise.reject(res)));\n    }\n}\n","import { getEnvironmentVariable, getLangSmithEnvironmentVariable, } from \"./env.js\";\nexport const getDefaultProjectName = () => {\n    return (getLangSmithEnvironmentVariable(\"PROJECT\") ??\n        getEnvironmentVariable(\"LANGCHAIN_SESSION\") ?? // TODO: Deprecate\n        \"default\");\n};\n","export { Client, } from \"./client.js\";\nexport { RunTree } from \"./run_trees.js\";\nexport { overrideFetchImplementation } from \"./singletons/fetch.js\";\nexport { getDefaultProjectName } from \"./utils/project.js\";\n// Update using yarn bump-version\nexport const __version__ = \"0.3.33\";\n","// Inlined from https://github.com/flexdinesh/browser-or-node\nimport { __version__ } from \"../index.js\";\nlet globalEnv;\nexport const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nexport const isWebWorker = () => typeof globalThis === \"object\" &&\n    globalThis.constructor &&\n    globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\nexport const isJsDom = () => (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\n    (typeof navigator !== \"undefined\" && navigator.userAgent.includes(\"jsdom\"));\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport const isDeno = () => typeof Deno !== \"undefined\";\n// Mark not-as-node if in Supabase Edge Function\nexport const isNode = () => typeof process !== \"undefined\" &&\n    typeof process.versions !== \"undefined\" &&\n    typeof process.versions.node !== \"undefined\" &&\n    !isDeno();\nexport const getEnv = () => {\n    if (globalEnv) {\n        return globalEnv;\n    }\n    if (isBrowser()) {\n        globalEnv = \"browser\";\n    }\n    else if (isNode()) {\n        globalEnv = \"node\";\n    }\n    else if (isWebWorker()) {\n        globalEnv = \"webworker\";\n    }\n    else if (isJsDom()) {\n        globalEnv = \"jsdom\";\n    }\n    else if (isDeno()) {\n        globalEnv = \"deno\";\n    }\n    else {\n        globalEnv = \"other\";\n    }\n    return globalEnv;\n};\nlet runtimeEnvironment;\nexport function getRuntimeEnvironment() {\n    if (runtimeEnvironment === undefined) {\n        const env = getEnv();\n        const releaseEnv = getShas();\n        runtimeEnvironment = {\n            library: \"langsmith\",\n            runtime: env,\n            sdk: \"langsmith-js\",\n            sdk_version: __version__,\n            ...releaseEnv,\n        };\n    }\n    return runtimeEnvironment;\n}\n/**\n * Retrieves the LangChain-specific environment variables from the current runtime environment.\n * Sensitive keys (containing the word \"key\", \"token\", or \"secret\") have their values redacted for security.\n *\n * @returns {Record<string, string>}\n *  - A record of LangChain-specific environment variables.\n */\nexport function getLangChainEnvVars() {\n    const allEnvVars = getEnvironmentVariables() || {};\n    const envVars = {};\n    for (const [key, value] of Object.entries(allEnvVars)) {\n        if (key.startsWith(\"LANGCHAIN_\") && typeof value === \"string\") {\n            envVars[key] = value;\n        }\n    }\n    for (const key in envVars) {\n        if ((key.toLowerCase().includes(\"key\") ||\n            key.toLowerCase().includes(\"secret\") ||\n            key.toLowerCase().includes(\"token\")) &&\n            typeof envVars[key] === \"string\") {\n            const value = envVars[key];\n            envVars[key] =\n                value.slice(0, 2) + \"*\".repeat(value.length - 4) + value.slice(-2);\n        }\n    }\n    return envVars;\n}\n/**\n * Retrieves the LangChain-specific metadata from the current runtime environment.\n *\n * @returns {Record<string, string>}\n *  - A record of LangChain-specific metadata environment variables.\n */\nexport function getLangChainEnvVarsMetadata() {\n    const allEnvVars = getEnvironmentVariables() || {};\n    const envVars = {};\n    const excluded = [\n        \"LANGCHAIN_API_KEY\",\n        \"LANGCHAIN_ENDPOINT\",\n        \"LANGCHAIN_TRACING_V2\",\n        \"LANGCHAIN_PROJECT\",\n        \"LANGCHAIN_SESSION\",\n        \"LANGSMITH_API_KEY\",\n        \"LANGSMITH_ENDPOINT\",\n        \"LANGSMITH_TRACING_V2\",\n        \"LANGSMITH_PROJECT\",\n        \"LANGSMITH_SESSION\",\n    ];\n    for (const [key, value] of Object.entries(allEnvVars)) {\n        if ((key.startsWith(\"LANGCHAIN_\") || key.startsWith(\"LANGSMITH_\")) &&\n            typeof value === \"string\" &&\n            !excluded.includes(key) &&\n            !key.toLowerCase().includes(\"key\") &&\n            !key.toLowerCase().includes(\"secret\") &&\n            !key.toLowerCase().includes(\"token\")) {\n            if (key === \"LANGCHAIN_REVISION_ID\") {\n                envVars[\"revision_id\"] = value;\n            }\n            else {\n                envVars[key] = value;\n            }\n        }\n    }\n    return envVars;\n}\n/**\n * Retrieves the environment variables from the current runtime environment.\n *\n * This function is designed to operate in a variety of JS environments,\n * including Node.js, Deno, browsers, etc.\n *\n * @returns {Record<string, string> | undefined}\n *  - A record of environment variables if available.\n *  - `undefined` if the environment does not support or allows access to environment variables.\n */\nexport function getEnvironmentVariables() {\n    try {\n        // Check for Node.js environment\n        // eslint-disable-next-line no-process-env\n        if (typeof process !== \"undefined\" && process.env) {\n            // eslint-disable-next-line no-process-env\n            return Object.entries(process.env).reduce((acc, [key, value]) => {\n                acc[key] = String(value);\n                return acc;\n            }, {});\n        }\n        // For browsers and other environments, we may not have direct access to env variables\n        // Return undefined or any other fallback as required.\n        return undefined;\n    }\n    catch (e) {\n        // Catch any errors that might occur while trying to access environment variables\n        return undefined;\n    }\n}\nexport function getEnvironmentVariable(name) {\n    // Certain Deno setups will throw an error if you try to access environment variables\n    // https://github.com/hwchase17/langchainjs/issues/1412\n    try {\n        return typeof process !== \"undefined\"\n            ? // eslint-disable-next-line no-process-env\n                process.env?.[name]\n            : undefined;\n    }\n    catch (e) {\n        return undefined;\n    }\n}\nexport function getLangSmithEnvironmentVariable(name) {\n    return (getEnvironmentVariable(`LANGSMITH_${name}`) ||\n        getEnvironmentVariable(`LANGCHAIN_${name}`));\n}\nexport function setEnvironmentVariable(name, value) {\n    if (typeof process !== \"undefined\") {\n        // eslint-disable-next-line no-process-env\n        process.env[name] = value;\n    }\n}\nlet cachedCommitSHAs;\n/**\n * Get the Git commit SHA from common environment variables\n * used by different CI/CD platforms.\n * @returns {string | undefined} The Git commit SHA or undefined if not found.\n */\nexport function getShas() {\n    if (cachedCommitSHAs !== undefined) {\n        return cachedCommitSHAs;\n    }\n    const common_release_envs = [\n        \"VERCEL_GIT_COMMIT_SHA\",\n        \"NEXT_PUBLIC_VERCEL_GIT_COMMIT_SHA\",\n        \"COMMIT_REF\",\n        \"RENDER_GIT_COMMIT\",\n        \"CI_COMMIT_SHA\",\n        \"CIRCLE_SHA1\",\n        \"CF_PAGES_COMMIT_SHA\",\n        \"REACT_APP_GIT_SHA\",\n        \"SOURCE_VERSION\",\n        \"GITHUB_SHA\",\n        \"TRAVIS_COMMIT\",\n        \"GIT_COMMIT\",\n        \"BUILD_VCS_NUMBER\",\n        \"bamboo_planRepository_revision\",\n        \"Build.SourceVersion\",\n        \"BITBUCKET_COMMIT\",\n        \"DRONE_COMMIT_SHA\",\n        \"SEMAPHORE_GIT_SHA\",\n        \"BUILDKITE_COMMIT\",\n    ];\n    const shas = {};\n    for (const env of common_release_envs) {\n        const envVar = getEnvironmentVariable(env);\n        if (envVar !== undefined) {\n            shas[env] = envVar;\n        }\n    }\n    cachedCommitSHAs = shas;\n    return shas;\n}\n","import { getLangSmithEnvironmentVariable } from \"../utils/env.js\";\n// Wrap the default fetch call due to issues with illegal invocations\n// in some environments:\n// https://stackoverflow.com/questions/69876859/why-does-bind-fix-failed-to-execute-fetch-on-window-illegal-invocation-err\n// @ts-expect-error Broad typing to support a range of fetch implementations\nconst DEFAULT_FETCH_IMPLEMENTATION = (...args) => fetch(...args);\nconst LANGSMITH_FETCH_IMPLEMENTATION_KEY = Symbol.for(\"ls:fetch_implementation\");\n/**\n * Overrides the fetch implementation used for LangSmith calls.\n * You should use this if you need to use an implementation of fetch\n * other than the default global (e.g. for dealing with proxies).\n * @param fetch The new fetch functino to use.\n */\nexport const overrideFetchImplementation = (fetch) => {\n    globalThis[LANGSMITH_FETCH_IMPLEMENTATION_KEY] = fetch;\n};\nexport const _globalFetchImplementationIsNodeFetch = () => {\n    const fetchImpl = globalThis[LANGSMITH_FETCH_IMPLEMENTATION_KEY];\n    if (!fetchImpl)\n        return false;\n    // Check if the implementation has node-fetch specific properties\n    return (typeof fetchImpl === \"function\" &&\n        \"Headers\" in fetchImpl &&\n        \"Request\" in fetchImpl &&\n        \"Response\" in fetchImpl);\n};\n/**\n * @internal\n */\nexport const _getFetchImplementation = (debug) => {\n    return async (...args) => {\n        if (debug || getLangSmithEnvironmentVariable(\"DEBUG\") === \"true\") {\n            const [url, options] = args;\n            console.log(`→ ${options?.method || \"GET\"} ${url}`);\n        }\n        const res = await (globalThis[LANGSMITH_FETCH_IMPLEMENTATION_KEY] ??\n            DEFAULT_FETCH_IMPLEMENTATION)(...args);\n        if (debug || getLangSmithEnvironmentVariable(\"DEBUG\") === \"true\") {\n            console.log(`← ${res.status} ${res.statusText} ${res.url}`);\n        }\n        return res;\n    };\n};\n","export function isLangChainMessage(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nmessage) {\n    return typeof message?._getType === \"function\";\n}\nexport function convertLangChainMessageToExample(message) {\n    const converted = {\n        type: message._getType(),\n        data: { content: message.content },\n    };\n    // Check for presence of keys in additional_kwargs\n    if (message?.additional_kwargs &&\n        Object.keys(message.additional_kwargs).length > 0) {\n        converted.data.additional_kwargs = { ...message.additional_kwargs };\n    }\n    return converted;\n}\n","import * as uuid from \"uuid\";\nexport function assertUuid(str, which) {\n    if (!uuid.validate(str)) {\n        const msg = which !== undefined\n            ? `Invalid UUID for ${which}: ${str}`\n            : `Invalid UUID: ${str}`;\n        throw new Error(msg);\n    }\n    return str;\n}\n","const warnedMessages = {};\nexport function warnOnce(message) {\n    if (!warnedMessages[message]) {\n        console.warn(message);\n        warnedMessages[message] = true;\n    }\n}\n","import { parse as parseVersion } from \"semver\";\nexport function isVersionGreaterOrEqual(current_version, target_version) {\n    const current = parseVersion(current_version);\n    const target = parseVersion(target_version);\n    if (!current || !target) {\n        throw new Error(\"Invalid version format.\");\n    }\n    return current.compare(target) >= 0;\n}\nexport function parsePromptIdentifier(identifier) {\n    if (!identifier ||\n        identifier.split(\"/\").length > 2 ||\n        identifier.startsWith(\"/\") ||\n        identifier.endsWith(\"/\") ||\n        identifier.split(\":\").length > 2) {\n        throw new Error(`Invalid identifier format: ${identifier}`);\n    }\n    const [ownerNamePart, commitPart] = identifier.split(\":\");\n    const commit = commitPart || \"latest\";\n    if (ownerNamePart.includes(\"/\")) {\n        const [owner, name] = ownerNamePart.split(\"/\", 2);\n        if (!owner || !name) {\n            throw new Error(`Invalid identifier format: ${identifier}`);\n        }\n        return [owner, name, commit];\n    }\n    else {\n        if (!ownerNamePart) {\n            throw new Error(`Invalid identifier format: ${identifier}`);\n        }\n        return [\"-\", ownerNamePart, commit];\n    }\n}\n","function getErrorStackTrace(e) {\n    if (typeof e !== \"object\" || e == null)\n        return undefined;\n    if (!(\"stack\" in e) || typeof e.stack !== \"string\")\n        return undefined;\n    let stack = e.stack;\n    const prevLine = `${e}`;\n    if (stack.startsWith(prevLine)) {\n        stack = stack.slice(prevLine.length);\n    }\n    if (stack.startsWith(\"\\n\")) {\n        stack = stack.slice(1);\n    }\n    return stack;\n}\nexport function printErrorStackTrace(e) {\n    const stack = getErrorStackTrace(e);\n    if (stack == null)\n        return;\n    console.error(stack);\n}\n/**\n * LangSmithConflictError\n *\n * Represents an error that occurs when there's a conflict during an operation,\n * typically corresponding to HTTP 409 status code responses.\n *\n * This error is thrown when an attempt to create or modify a resource conflicts\n * with the current state of the resource on the server. Common scenarios include:\n * - Attempting to create a resource that already exists\n * - Trying to update a resource that has been modified by another process\n * - Violating a uniqueness constraint in the data\n *\n * @extends Error\n *\n * @example\n * try {\n *   await createProject(\"existingProject\");\n * } catch (error) {\n *   if (error instanceof ConflictError) {\n *     console.log(\"A conflict occurred:\", error.message);\n *     // Handle the conflict, e.g., by suggesting a different project name\n *   } else {\n *     // Handle other types of errors\n *   }\n * }\n *\n * @property {string} name - Always set to 'ConflictError' for easy identification\n * @property {string} message - Detailed error message including server response\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/409\n */\nexport class LangSmithConflictError extends Error {\n    constructor(message) {\n        super(message);\n        Object.defineProperty(this, \"status\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = \"LangSmithConflictError\";\n        this.status = 409;\n    }\n}\n/**\n * Throws an appropriate error based on the response status and body.\n *\n * @param response - The fetch Response object\n * @param context - Additional context to include in the error message (e.g., operation being performed)\n * @throws {LangSmithConflictError} When the response status is 409\n * @throws {Error} For all other non-ok responses\n */\nexport async function raiseForStatus(response, context, consume) {\n    // consume the response body to release the connection\n    // https://undici.nodejs.org/#/?id=garbage-collection\n    let errorBody;\n    if (response.ok) {\n        if (consume) {\n            errorBody = await response.text();\n        }\n        return;\n    }\n    errorBody = await response.text();\n    const fullMessage = `Failed to ${context}. Received status [${response.status}]: ${response.statusText}. Server response: ${errorBody}`;\n    if (response.status === 409) {\n        throw new LangSmithConflictError(fullMessage);\n    }\n    const err = new Error(fullMessage);\n    err.status = response.status;\n    throw err;\n}\n","/* eslint-disable */\n// @ts-nocheck\nvar LIMIT_REPLACE_NODE = \"[...]\";\nvar CIRCULAR_REPLACE_NODE = { result: \"[Circular]\" };\nvar arr = [];\nvar replacerStack = [];\nconst encoder = new TextEncoder();\nfunction defaultOptions() {\n    return {\n        depthLimit: Number.MAX_SAFE_INTEGER,\n        edgesLimit: Number.MAX_SAFE_INTEGER,\n    };\n}\nfunction encodeString(str) {\n    return encoder.encode(str);\n}\n// Regular stringify\nexport function serialize(obj, errorContext, replacer, spacer, options) {\n    try {\n        const str = JSON.stringify(obj, replacer, spacer);\n        return encodeString(str);\n    }\n    catch (e) {\n        // Fall back to more complex stringify if circular reference\n        if (!e.message?.includes(\"Converting circular structure to JSON\")) {\n            console.warn(`[WARNING]: LangSmith received unserializable value.${errorContext ? `\\nContext: ${errorContext}` : \"\"}`);\n            return encodeString(\"[Unserializable]\");\n        }\n        console.warn(`[WARNING]: LangSmith received circular JSON. This will decrease tracer performance. ${errorContext ? `\\nContext: ${errorContext}` : \"\"}`);\n        if (typeof options === \"undefined\") {\n            options = defaultOptions();\n        }\n        decirc(obj, \"\", 0, [], undefined, 0, options);\n        let res;\n        try {\n            if (replacerStack.length === 0) {\n                res = JSON.stringify(obj, replacer, spacer);\n            }\n            else {\n                res = JSON.stringify(obj, replaceGetterValues(replacer), spacer);\n            }\n        }\n        catch (_) {\n            return encodeString(\"[unable to serialize, circular reference is too complex to analyze]\");\n        }\n        finally {\n            while (arr.length !== 0) {\n                const part = arr.pop();\n                if (part.length === 4) {\n                    Object.defineProperty(part[0], part[1], part[3]);\n                }\n                else {\n                    part[0][part[1]] = part[2];\n                }\n            }\n        }\n        return encodeString(res);\n    }\n}\nfunction setReplace(replace, val, k, parent) {\n    var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k);\n    if (propertyDescriptor.get !== undefined) {\n        if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: replace });\n            arr.push([parent, k, val, propertyDescriptor]);\n        }\n        else {\n            replacerStack.push([val, k, replace]);\n        }\n    }\n    else {\n        parent[k] = replace;\n        arr.push([parent, k, val]);\n    }\n}\nfunction decirc(val, k, edgeIndex, stack, parent, depth, options) {\n    depth += 1;\n    var i;\n    if (typeof val === \"object\" && val !== null) {\n        for (i = 0; i < stack.length; i++) {\n            if (stack[i] === val) {\n                setReplace(CIRCULAR_REPLACE_NODE, val, k, parent);\n                return;\n            }\n        }\n        if (typeof options.depthLimit !== \"undefined\" &&\n            depth > options.depthLimit) {\n            setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n            return;\n        }\n        if (typeof options.edgesLimit !== \"undefined\" &&\n            edgeIndex + 1 > options.edgesLimit) {\n            setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n            return;\n        }\n        stack.push(val);\n        // Optimize for Arrays. Big arrays could kill the performance otherwise!\n        if (Array.isArray(val)) {\n            for (i = 0; i < val.length; i++) {\n                decirc(val[i], i, i, stack, val, depth, options);\n            }\n        }\n        else {\n            var keys = Object.keys(val);\n            for (i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                decirc(val[key], key, i, stack, val, depth, options);\n            }\n        }\n        stack.pop();\n    }\n}\n// Stable-stringify\nfunction compareFunction(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\nfunction deterministicStringify(obj, replacer, spacer, options) {\n    if (typeof options === \"undefined\") {\n        options = defaultOptions();\n    }\n    var tmp = deterministicDecirc(obj, \"\", 0, [], undefined, 0, options) || obj;\n    var res;\n    try {\n        if (replacerStack.length === 0) {\n            res = JSON.stringify(tmp, replacer, spacer);\n        }\n        else {\n            res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer);\n        }\n    }\n    catch (_) {\n        return JSON.stringify(\"[unable to serialize, circular reference is too complex to analyze]\");\n    }\n    finally {\n        // Ensure that we restore the object as it was.\n        while (arr.length !== 0) {\n            var part = arr.pop();\n            if (part.length === 4) {\n                Object.defineProperty(part[0], part[1], part[3]);\n            }\n            else {\n                part[0][part[1]] = part[2];\n            }\n        }\n    }\n    return res;\n}\nfunction deterministicDecirc(val, k, edgeIndex, stack, parent, depth, options) {\n    depth += 1;\n    var i;\n    if (typeof val === \"object\" && val !== null) {\n        for (i = 0; i < stack.length; i++) {\n            if (stack[i] === val) {\n                setReplace(CIRCULAR_REPLACE_NODE, val, k, parent);\n                return;\n            }\n        }\n        try {\n            if (typeof val.toJSON === \"function\") {\n                return;\n            }\n        }\n        catch (_) {\n            return;\n        }\n        if (typeof options.depthLimit !== \"undefined\" &&\n            depth > options.depthLimit) {\n            setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n            return;\n        }\n        if (typeof options.edgesLimit !== \"undefined\" &&\n            edgeIndex + 1 > options.edgesLimit) {\n            setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n            return;\n        }\n        stack.push(val);\n        // Optimize for Arrays. Big arrays could kill the performance otherwise!\n        if (Array.isArray(val)) {\n            for (i = 0; i < val.length; i++) {\n                deterministicDecirc(val[i], i, i, stack, val, depth, options);\n            }\n        }\n        else {\n            // Create a temporary object in the required way\n            var tmp = {};\n            var keys = Object.keys(val).sort(compareFunction);\n            for (i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                deterministicDecirc(val[key], key, i, stack, val, depth, options);\n                tmp[key] = val[key];\n            }\n            if (typeof parent !== \"undefined\") {\n                arr.push([parent, k, val]);\n                parent[k] = tmp;\n            }\n            else {\n                return tmp;\n            }\n        }\n        stack.pop();\n    }\n}\n// wraps replacer function to handle values we couldn't replace\n// and mark them as replaced value\nfunction replaceGetterValues(replacer) {\n    replacer =\n        typeof replacer !== \"undefined\"\n            ? replacer\n            : function (k, v) {\n                return v;\n            };\n    return function (key, val) {\n        if (replacerStack.length > 0) {\n            for (var i = 0; i < replacerStack.length; i++) {\n                var part = replacerStack[i];\n                if (part[1] === key && part[0] === val) {\n                    val = part[2];\n                    replacerStack.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        return replacer.call(this, key, val);\n    };\n}\n","import { getLangSmithEnvironmentVariable } from \"./utils/env.js\";\nexport const isTracingEnabled = (tracingEnabled) => {\n    if (tracingEnabled !== undefined) {\n        return tracingEnabled;\n    }\n    const envVars = [\"TRACING_V2\", \"TRACING\"];\n    return !!envVars.find((envVar) => getLangSmithEnvironmentVariable(envVar) === \"true\");\n};\n","export const _LC_CONTEXT_VARIABLES_KEY = Symbol.for(\"lc:context_variables\");\n","import { isRunTree } from \"../run_trees.js\";\nclass MockAsyncLocalStorage {\n    getStore() {\n        return undefined;\n    }\n    run(_, callback) {\n        return callback();\n    }\n}\nconst TRACING_ALS_KEY = Symbol.for(\"ls:tracing_async_local_storage\");\nconst mockAsyncLocalStorage = new MockAsyncLocalStorage();\nclass AsyncLocalStorageProvider {\n    getInstance() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return globalThis[TRACING_ALS_KEY] ?? mockAsyncLocalStorage;\n    }\n    initializeGlobalInstance(instance) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (globalThis[TRACING_ALS_KEY] === undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            globalThis[TRACING_ALS_KEY] = instance;\n        }\n    }\n}\nexport const AsyncLocalStorageProviderSingleton = new AsyncLocalStorageProvider();\nexport function getCurrentRunTree(permitAbsentRunTree = false) {\n    const runTree = AsyncLocalStorageProviderSingleton.getInstance().getStore();\n    if (!permitAbsentRunTree && !isRunTree(runTree)) {\n        throw new Error(\"Could not get the current run tree.\\n\\nPlease make sure you are calling this method within a traceable function and that tracing is enabled.\");\n    }\n    return runTree;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function withRunTree(runTree, fn) {\n    const storage = AsyncLocalStorageProviderSingleton.getInstance();\n    return new Promise((resolve, reject) => {\n        storage.run(runTree, () => void Promise.resolve(fn()).then(resolve).catch(reject));\n    });\n}\nexport const ROOT = Symbol.for(\"langsmith:traceable:root\");\nexport function isTraceableFunction(x\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    return typeof x === \"function\" && \"langsmith:traceable\" in x;\n}\n","// @ts-nocheck\nimport { PatchError, _deepClone, isInteger, unescapePathComponent, hasUndefined, } from \"./helpers.js\";\nexport const JsonPatchError = PatchError;\nexport const deepClone = _deepClone;\n/* We use a Javascript hash to store each\n function. Each hash entry (property) uses\n the operation identifiers specified in rfc6902.\n In this way, we can map each patch operation\n to its dedicated function in efficient way.\n */\n/* The operations applicable to an object */\nconst objOps = {\n    add: function (obj, key, document) {\n        obj[key] = this.value;\n        return { newDocument: document };\n    },\n    remove: function (obj, key, document) {\n        var removed = obj[key];\n        delete obj[key];\n        return { newDocument: document, removed };\n    },\n    replace: function (obj, key, document) {\n        var removed = obj[key];\n        obj[key] = this.value;\n        return { newDocument: document, removed };\n    },\n    move: function (obj, key, document) {\n        /* in case move target overwrites an existing value,\n        return the removed value, this can be taxing performance-wise,\n        and is potentially unneeded */\n        let removed = getValueByPointer(document, this.path);\n        if (removed) {\n            removed = _deepClone(removed);\n        }\n        const originalValue = applyOperation(document, {\n            op: \"remove\",\n            path: this.from,\n        }).removed;\n        applyOperation(document, {\n            op: \"add\",\n            path: this.path,\n            value: originalValue,\n        });\n        return { newDocument: document, removed };\n    },\n    copy: function (obj, key, document) {\n        const valueToCopy = getValueByPointer(document, this.from);\n        // enforce copy by value so further operations don't affect source (see issue #177)\n        applyOperation(document, {\n            op: \"add\",\n            path: this.path,\n            value: _deepClone(valueToCopy),\n        });\n        return { newDocument: document };\n    },\n    test: function (obj, key, document) {\n        return { newDocument: document, test: _areEquals(obj[key], this.value) };\n    },\n    _get: function (obj, key, document) {\n        this.value = obj[key];\n        return { newDocument: document };\n    },\n};\n/* The operations applicable to an array. Many are the same as for the object */\nvar arrOps = {\n    add: function (arr, i, document) {\n        if (isInteger(i)) {\n            arr.splice(i, 0, this.value);\n        }\n        else {\n            // array props\n            arr[i] = this.value;\n        }\n        // this may be needed when using '-' in an array\n        return { newDocument: document, index: i };\n    },\n    remove: function (arr, i, document) {\n        var removedList = arr.splice(i, 1);\n        return { newDocument: document, removed: removedList[0] };\n    },\n    replace: function (arr, i, document) {\n        var removed = arr[i];\n        arr[i] = this.value;\n        return { newDocument: document, removed };\n    },\n    move: objOps.move,\n    copy: objOps.copy,\n    test: objOps.test,\n    _get: objOps._get,\n};\n/**\n * Retrieves a value from a JSON document by a JSON pointer.\n * Returns the value.\n *\n * @param document The document to get the value from\n * @param pointer an escaped JSON pointer\n * @return The retrieved value\n */\nexport function getValueByPointer(document, pointer) {\n    if (pointer == \"\") {\n        return document;\n    }\n    var getOriginalDestination = { op: \"_get\", path: pointer };\n    applyOperation(document, getOriginalDestination);\n    return getOriginalDestination.value;\n}\n/**\n * Apply a single JSON Patch Operation on a JSON document.\n * Returns the {newDocument, result} of the operation.\n * It modifies the `document` and `operation` objects - it gets the values by reference.\n * If you would like to avoid touching your values, clone them:\n * `jsonpatch.applyOperation(document, jsonpatch._deepClone(operation))`.\n *\n * @param document The document to patch\n * @param operation The operation to apply\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\n * @param mutateDocument Whether to mutate the original document or clone it before applying\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\n * @return `{newDocument, result}` after the operation\n */\nexport function applyOperation(document, operation, validateOperation = false, mutateDocument = true, banPrototypeModifications = true, index = 0) {\n    if (validateOperation) {\n        if (typeof validateOperation == \"function\") {\n            validateOperation(operation, 0, document, operation.path);\n        }\n        else {\n            validator(operation, 0);\n        }\n    }\n    /* ROOT OPERATIONS */\n    if (operation.path === \"\") {\n        let returnValue = { newDocument: document };\n        if (operation.op === \"add\") {\n            returnValue.newDocument = operation.value;\n            return returnValue;\n        }\n        else if (operation.op === \"replace\") {\n            returnValue.newDocument = operation.value;\n            returnValue.removed = document; //document we removed\n            return returnValue;\n        }\n        else if (operation.op === \"move\" || operation.op === \"copy\") {\n            // it's a move or copy to root\n            returnValue.newDocument = getValueByPointer(document, operation.from); // get the value by json-pointer in `from` field\n            if (operation.op === \"move\") {\n                // report removed item\n                returnValue.removed = document;\n            }\n            return returnValue;\n        }\n        else if (operation.op === \"test\") {\n            returnValue.test = _areEquals(document, operation.value);\n            if (returnValue.test === false) {\n                throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n            }\n            returnValue.newDocument = document;\n            return returnValue;\n        }\n        else if (operation.op === \"remove\") {\n            // a remove on root\n            returnValue.removed = document;\n            returnValue.newDocument = null;\n            return returnValue;\n        }\n        else if (operation.op === \"_get\") {\n            operation.value = document;\n            return returnValue;\n        }\n        else {\n            /* bad operation */\n            if (validateOperation) {\n                throw new JsonPatchError(\"Operation `op` property is not one of operations defined in RFC-6902\", \"OPERATION_OP_INVALID\", index, operation, document);\n            }\n            else {\n                return returnValue;\n            }\n        }\n    } /* END ROOT OPERATIONS */\n    else {\n        if (!mutateDocument) {\n            document = _deepClone(document);\n        }\n        const path = operation.path || \"\";\n        const keys = path.split(\"/\");\n        let obj = document;\n        let t = 1; //skip empty element - http://jsperf.com/to-shift-or-not-to-shift\n        let len = keys.length;\n        let existingPathFragment = undefined;\n        let key;\n        let validateFunction;\n        if (typeof validateOperation == \"function\") {\n            validateFunction = validateOperation;\n        }\n        else {\n            validateFunction = validator;\n        }\n        while (true) {\n            key = keys[t];\n            if (key && key.indexOf(\"~\") != -1) {\n                key = unescapePathComponent(key);\n            }\n            if (banPrototypeModifications &&\n                (key == \"__proto__\" ||\n                    (key == \"prototype\" && t > 0 && keys[t - 1] == \"constructor\"))) {\n                throw new TypeError(\"JSON-Patch: modifying `__proto__` or `constructor/prototype` prop is banned for security reasons, if this was on purpose, please set `banPrototypeModifications` flag false and pass it to this function. More info in fast-json-patch README\");\n            }\n            if (validateOperation) {\n                if (existingPathFragment === undefined) {\n                    if (obj[key] === undefined) {\n                        existingPathFragment = keys.slice(0, t).join(\"/\");\n                    }\n                    else if (t == len - 1) {\n                        existingPathFragment = operation.path;\n                    }\n                    if (existingPathFragment !== undefined) {\n                        validateFunction(operation, 0, document, existingPathFragment);\n                    }\n                }\n            }\n            t++;\n            if (Array.isArray(obj)) {\n                if (key === \"-\") {\n                    key = obj.length;\n                }\n                else {\n                    if (validateOperation && !isInteger(key)) {\n                        throw new JsonPatchError(\"Expected an unsigned base-10 integer value, making the new referenced value the array element with the zero-based index\", \"OPERATION_PATH_ILLEGAL_ARRAY_INDEX\", index, operation, document);\n                    } // only parse key when it's an integer for `arr.prop` to work\n                    else if (isInteger(key)) {\n                        key = ~~key;\n                    }\n                }\n                if (t >= len) {\n                    if (validateOperation && operation.op === \"add\" && key > obj.length) {\n                        throw new JsonPatchError(\"The specified index MUST NOT be greater than the number of elements in the array\", \"OPERATION_VALUE_OUT_OF_BOUNDS\", index, operation, document);\n                    }\n                    const returnValue = arrOps[operation.op].call(operation, obj, key, document); // Apply patch\n                    if (returnValue.test === false) {\n                        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n                    }\n                    return returnValue;\n                }\n            }\n            else {\n                if (t >= len) {\n                    const returnValue = objOps[operation.op].call(operation, obj, key, document); // Apply patch\n                    if (returnValue.test === false) {\n                        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n                    }\n                    return returnValue;\n                }\n            }\n            obj = obj[key];\n            // If we have more keys in the path, but the next value isn't a non-null object,\n            // throw an OPERATION_PATH_UNRESOLVABLE error instead of iterating again.\n            if (validateOperation && t < len && (!obj || typeof obj !== \"object\")) {\n                throw new JsonPatchError(\"Cannot perform operation at the desired path\", \"OPERATION_PATH_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n    }\n}\n/**\n * Apply a full JSON Patch array on a JSON document.\n * Returns the {newDocument, result} of the patch.\n * It modifies the `document` object and `patch` - it gets the values by reference.\n * If you would like to avoid touching your values, clone them:\n * `jsonpatch.applyPatch(document, jsonpatch._deepClone(patch))`.\n *\n * @param document The document to patch\n * @param patch The patch to apply\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\n * @param mutateDocument Whether to mutate the original document or clone it before applying\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\n * @return An array of `{newDocument, result}` after the patch\n */\nexport function applyPatch(document, patch, validateOperation, mutateDocument = true, banPrototypeModifications = true) {\n    if (validateOperation) {\n        if (!Array.isArray(patch)) {\n            throw new JsonPatchError(\"Patch sequence must be an array\", \"SEQUENCE_NOT_AN_ARRAY\");\n        }\n    }\n    if (!mutateDocument) {\n        document = _deepClone(document);\n    }\n    const results = new Array(patch.length);\n    for (let i = 0, length = patch.length; i < length; i++) {\n        // we don't need to pass mutateDocument argument because if it was true, we already deep cloned the object, we'll just pass `true`\n        results[i] = applyOperation(document, patch[i], validateOperation, true, banPrototypeModifications, i);\n        document = results[i].newDocument; // in case root was replaced\n    }\n    results.newDocument = document;\n    return results;\n}\n/**\n * Apply a single JSON Patch Operation on a JSON document.\n * Returns the updated document.\n * Suitable as a reducer.\n *\n * @param document The document to patch\n * @param operation The operation to apply\n * @return The updated document\n */\nexport function applyReducer(document, operation, index) {\n    const operationResult = applyOperation(document, operation);\n    if (operationResult.test === false) {\n        // failed test\n        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n    }\n    return operationResult.newDocument;\n}\n/**\n * Validates a single operation. Called from `jsonpatch.validate`. Throws `JsonPatchError` in case of an error.\n * @param {object} operation - operation object (patch)\n * @param {number} index - index of operation in the sequence\n * @param {object} [document] - object where the operation is supposed to be applied\n * @param {string} [existingPathFragment] - comes along with `document`\n */\nexport function validator(operation, index, document, existingPathFragment) {\n    if (typeof operation !== \"object\" ||\n        operation === null ||\n        Array.isArray(operation)) {\n        throw new JsonPatchError(\"Operation is not an object\", \"OPERATION_NOT_AN_OBJECT\", index, operation, document);\n    }\n    else if (!objOps[operation.op]) {\n        throw new JsonPatchError(\"Operation `op` property is not one of operations defined in RFC-6902\", \"OPERATION_OP_INVALID\", index, operation, document);\n    }\n    else if (typeof operation.path !== \"string\") {\n        throw new JsonPatchError(\"Operation `path` property is not a string\", \"OPERATION_PATH_INVALID\", index, operation, document);\n    }\n    else if (operation.path.indexOf(\"/\") !== 0 && operation.path.length > 0) {\n        // paths that aren't empty string should start with \"/\"\n        throw new JsonPatchError('Operation `path` property must start with \"/\"', \"OPERATION_PATH_INVALID\", index, operation, document);\n    }\n    else if ((operation.op === \"move\" || operation.op === \"copy\") &&\n        typeof operation.from !== \"string\") {\n        throw new JsonPatchError(\"Operation `from` property is not present (applicable in `move` and `copy` operations)\", \"OPERATION_FROM_REQUIRED\", index, operation, document);\n    }\n    else if ((operation.op === \"add\" ||\n        operation.op === \"replace\" ||\n        operation.op === \"test\") &&\n        operation.value === undefined) {\n        throw new JsonPatchError(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_REQUIRED\", index, operation, document);\n    }\n    else if ((operation.op === \"add\" ||\n        operation.op === \"replace\" ||\n        operation.op === \"test\") &&\n        hasUndefined(operation.value)) {\n        throw new JsonPatchError(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_CANNOT_CONTAIN_UNDEFINED\", index, operation, document);\n    }\n    else if (document) {\n        if (operation.op == \"add\") {\n            var pathLen = operation.path.split(\"/\").length;\n            var existingPathLen = existingPathFragment.split(\"/\").length;\n            if (pathLen !== existingPathLen + 1 && pathLen !== existingPathLen) {\n                throw new JsonPatchError(\"Cannot perform an `add` operation at the desired path\", \"OPERATION_PATH_CANNOT_ADD\", index, operation, document);\n            }\n        }\n        else if (operation.op === \"replace\" ||\n            operation.op === \"remove\" ||\n            operation.op === \"_get\") {\n            if (operation.path !== existingPathFragment) {\n                throw new JsonPatchError(\"Cannot perform the operation at a path that does not exist\", \"OPERATION_PATH_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n        else if (operation.op === \"move\" || operation.op === \"copy\") {\n            var existingValue = {\n                op: \"_get\",\n                path: operation.from,\n                value: undefined,\n            };\n            var error = validate([existingValue], document);\n            if (error && error.name === \"OPERATION_PATH_UNRESOLVABLE\") {\n                throw new JsonPatchError(\"Cannot perform the operation from a path that does not exist\", \"OPERATION_FROM_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n    }\n}\n/**\n * Validates a sequence of operations. If `document` parameter is provided, the sequence is additionally validated against the object document.\n * If error is encountered, returns a JsonPatchError object\n * @param sequence\n * @param document\n * @returns {JsonPatchError|undefined}\n */\nexport function validate(sequence, document, externalValidator) {\n    try {\n        if (!Array.isArray(sequence)) {\n            throw new JsonPatchError(\"Patch sequence must be an array\", \"SEQUENCE_NOT_AN_ARRAY\");\n        }\n        if (document) {\n            //clone document and sequence so that we can safely try applying operations\n            applyPatch(_deepClone(document), _deepClone(sequence), externalValidator || true);\n        }\n        else {\n            externalValidator = externalValidator || validator;\n            for (var i = 0; i < sequence.length; i++) {\n                externalValidator(sequence[i], i, document, undefined);\n            }\n        }\n    }\n    catch (e) {\n        if (e instanceof JsonPatchError) {\n            return e;\n        }\n        else {\n            throw e;\n        }\n    }\n}\n// based on https://github.com/epoberezkin/fast-deep-equal\n// MIT License\n// Copyright (c) 2017 Evgeny Poberezkin\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nexport function _areEquals(a, b) {\n    if (a === b)\n        return true;\n    if (a && b && typeof a == \"object\" && typeof b == \"object\") {\n        var arrA = Array.isArray(a), arrB = Array.isArray(b), i, length, key;\n        if (arrA && arrB) {\n            length = a.length;\n            if (length != b.length)\n                return false;\n            for (i = length; i-- !== 0;)\n                if (!_areEquals(a[i], b[i]))\n                    return false;\n            return true;\n        }\n        if (arrA != arrB)\n            return false;\n        var keys = Object.keys(a);\n        length = keys.length;\n        if (length !== Object.keys(b).length)\n            return false;\n        for (i = length; i-- !== 0;)\n            if (!b.hasOwnProperty(keys[i]))\n                return false;\n        for (i = length; i-- !== 0;) {\n            key = keys[i];\n            if (!_areEquals(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return a !== a && b !== b;\n}\n","// @ts-nocheck\n// Inlined because of ESM import issues\n/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2017-2022 Joachim Wester\n * MIT licensed\n */\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function hasOwnProperty(obj, key) {\n    return _hasOwnProperty.call(obj, key);\n}\nexport function _objectKeys(obj) {\n    if (Array.isArray(obj)) {\n        const keys = new Array(obj.length);\n        for (let k = 0; k < keys.length; k++) {\n            keys[k] = \"\" + k;\n        }\n        return keys;\n    }\n    if (Object.keys) {\n        return Object.keys(obj);\n    }\n    let keys = [];\n    for (let i in obj) {\n        if (hasOwnProperty(obj, i)) {\n            keys.push(i);\n        }\n    }\n    return keys;\n}\n/**\n * Deeply clone the object.\n * https://jsperf.com/deep-copy-vs-json-stringify-json-parse/25 (recursiveDeepCopy)\n * @param  {any} obj value to clone\n * @return {any} cloned obj\n */\nexport function _deepClone(obj) {\n    switch (typeof obj) {\n        case \"object\":\n            return JSON.parse(JSON.stringify(obj)); //Faster than ES5 clone - http://jsperf.com/deep-cloning-of-objects/5\n        case \"undefined\":\n            return null; //this is how JSON.stringify behaves for array items\n        default:\n            return obj; //no need to clone primitives\n    }\n}\n//3x faster than cached /^\\d+$/.test(str)\nexport function isInteger(str) {\n    let i = 0;\n    const len = str.length;\n    let charCode;\n    while (i < len) {\n        charCode = str.charCodeAt(i);\n        if (charCode >= 48 && charCode <= 57) {\n            i++;\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\n/**\n * Escapes a json pointer path\n * @param path The raw pointer\n * @return the Escaped path\n */\nexport function escapePathComponent(path) {\n    if (path.indexOf(\"/\") === -1 && path.indexOf(\"~\") === -1)\n        return path;\n    return path.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\n/**\n * Unescapes a json pointer path\n * @param path The escaped pointer\n * @return The unescaped path\n */\nexport function unescapePathComponent(path) {\n    return path.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\nexport function _getPathRecursive(root, obj) {\n    let found;\n    for (let key in root) {\n        if (hasOwnProperty(root, key)) {\n            if (root[key] === obj) {\n                return escapePathComponent(key) + \"/\";\n            }\n            else if (typeof root[key] === \"object\") {\n                found = _getPathRecursive(root[key], obj);\n                if (found != \"\") {\n                    return escapePathComponent(key) + \"/\" + found;\n                }\n            }\n        }\n    }\n    return \"\";\n}\nexport function getPath(root, obj) {\n    if (root === obj) {\n        return \"/\";\n    }\n    const path = _getPathRecursive(root, obj);\n    if (path === \"\") {\n        throw new Error(\"Object not found in root\");\n    }\n    return `/${path}`;\n}\n/**\n * Recursively checks whether an object has any undefined values inside.\n */\nexport function hasUndefined(obj) {\n    if (obj === undefined) {\n        return true;\n    }\n    if (obj) {\n        if (Array.isArray(obj)) {\n            for (let i = 0, len = obj.length; i < len; i++) {\n                if (hasUndefined(obj[i])) {\n                    return true;\n                }\n            }\n        }\n        else if (typeof obj === \"object\") {\n            const objKeys = _objectKeys(obj);\n            const objKeysLength = objKeys.length;\n            for (var i = 0; i < objKeysLength; i++) {\n                if (hasUndefined(obj[objKeys[i]])) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\nfunction patchErrorMessageFormatter(message, args) {\n    const messageParts = [message];\n    for (const key in args) {\n        const value = typeof args[key] === \"object\"\n            ? JSON.stringify(args[key], null, 2)\n            : args[key]; // pretty print\n        if (typeof value !== \"undefined\") {\n            messageParts.push(`${key}: ${value}`);\n        }\n    }\n    return messageParts.join(\"\\n\");\n}\nexport class PatchError extends Error {\n    constructor(message, name, index, operation, tree) {\n        super(patchErrorMessageFormatter(message, { name, index, operation, tree }));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: name\n        });\n        Object.defineProperty(this, \"index\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: index\n        });\n        Object.defineProperty(this, \"operation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: operation\n        });\n        Object.defineProperty(this, \"tree\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: tree\n        });\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain, see https://stackoverflow.com/a/48342359\n        this.message = patchErrorMessageFormatter(message, {\n            name,\n            index,\n            operation,\n            tree,\n        });\n    }\n}\n","export * from \"./src/core.js\";\nexport * from \"./src/duplex.js\";\nexport { PatchError as JsonPatchError, _deepClone as deepClone, escapePathComponent, unescapePathComponent, } from \"./src/helpers.js\";\n/**\n * Default export for backwards compat\n */\nimport * as core from \"./src/core.js\";\nimport { PatchError as JsonPatchError, _deepClone as deepClone, escapePathComponent, unescapePathComponent, } from \"./src/helpers.js\";\nexport default {\n    ...core,\n    // ...duplex,\n    JsonPatchError,\n    deepClone,\n    escapePathComponent,\n    unescapePathComponent,\n};\n","import * as uuid from \"uuid\";\nimport { Serializable, get_lc_unique_name, } from \"../load/serializable.js\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\n/**\n * Abstract class that provides a set of optional methods that can be\n * overridden in derived classes to handle various events during the\n * execution of a LangChain application.\n */\nclass BaseCallbackHandlerMethodsClass {\n}\nexport function callbackHandlerPrefersStreaming(x) {\n    return \"lc_prefer_streaming\" in x && x.lc_prefer_streaming;\n}\n/**\n * Abstract base class for creating callback handlers in the LangChain\n * framework. It provides a set of optional methods that can be overridden\n * in derived classes to handle various events during the execution of a\n * LangChain application.\n */\nexport class BaseCallbackHandler extends BaseCallbackHandlerMethodsClass {\n    get lc_namespace() {\n        return [\"langchain_core\", \"callbacks\", this.name];\n    }\n    get lc_secrets() {\n        return undefined;\n    }\n    get lc_attributes() {\n        return undefined;\n    }\n    get lc_aliases() {\n        return undefined;\n    }\n    get lc_serializable_keys() {\n        return undefined;\n    }\n    /**\n     * The name of the serializable. Override to provide an alias or\n     * to preserve the serialized module name in minified environments.\n     *\n     * Implemented as a static method to support loading logic.\n     */\n    static lc_name() {\n        return this.name;\n    }\n    /**\n     * The final serialized identifier for the module.\n     */\n    get lc_id() {\n        return [\n            ...this.lc_namespace,\n            get_lc_unique_name(this.constructor),\n        ];\n    }\n    constructor(input) {\n        super();\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ignoreLLM\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreAgent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreRetriever\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreCustomEvent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"raiseError\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"awaitHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getEnvironmentVariable(\"LANGCHAIN_CALLBACKS_BACKGROUND\") === \"false\"\n        });\n        this.lc_kwargs = input || {};\n        if (input) {\n            this.ignoreLLM = input.ignoreLLM ?? this.ignoreLLM;\n            this.ignoreChain = input.ignoreChain ?? this.ignoreChain;\n            this.ignoreAgent = input.ignoreAgent ?? this.ignoreAgent;\n            this.ignoreRetriever = input.ignoreRetriever ?? this.ignoreRetriever;\n            this.ignoreCustomEvent =\n                input.ignoreCustomEvent ?? this.ignoreCustomEvent;\n            this.raiseError = input.raiseError ?? this.raiseError;\n            this.awaitHandlers =\n                this.raiseError || (input._awaitHandler ?? this.awaitHandlers);\n        }\n    }\n    copy() {\n        return new this.constructor(this);\n    }\n    toJSON() {\n        return Serializable.prototype.toJSON.call(this);\n    }\n    toJSONNotImplemented() {\n        return Serializable.prototype.toJSONNotImplemented.call(this);\n    }\n    static fromMethods(methods) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuid.v4()\n                });\n                Object.assign(this, methods);\n            }\n        }\n        return new Handler();\n    }\n}\nexport const isBaseCallbackHandler = (x) => {\n    const callbackHandler = x;\n    return (callbackHandler !== undefined &&\n        typeof callbackHandler.copy === \"function\" &&\n        typeof callbackHandler.name === \"string\" &&\n        typeof callbackHandler.awaitHandlers === \"boolean\");\n};\n","import snakeCase from \"decamelize\";\nimport camelCase from \"camelcase\";\nexport function keyToJson(key, map) {\n    return map?.[key] || snakeCase(key);\n}\nexport function keyFromJson(key, map) {\n    return map?.[key] || camelCase(key);\n}\nexport function mapKeys(fields, mapper, map) {\n    const mapped = {};\n    for (const key in fields) {\n        if (Object.hasOwn(fields, key)) {\n            mapped[mapper(key, map)] = fields[key];\n        }\n    }\n    return mapped;\n}\n","import { keyToJson, mapKeys } from \"./map_keys.js\";\nfunction shallowCopy(obj) {\n    return Array.isArray(obj) ? [...obj] : { ...obj };\n}\nfunction replaceSecrets(root, secretsMap) {\n    const result = shallowCopy(root);\n    for (const [path, secretId] of Object.entries(secretsMap)) {\n        const [last, ...partsReverse] = path.split(\".\").reverse();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let current = result;\n        for (const part of partsReverse.reverse()) {\n            if (current[part] === undefined) {\n                break;\n            }\n            current[part] = shallowCopy(current[part]);\n            current = current[part];\n        }\n        if (current[last] !== undefined) {\n            current[last] = {\n                lc: 1,\n                type: \"secret\",\n                id: [secretId],\n            };\n        }\n    }\n    return result;\n}\n/**\n * Get a unique name for the module, rather than parent class implementations.\n * Should not be subclassed, subclass lc_name above instead.\n */\nexport function get_lc_unique_name(\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nserializableClass) {\n    // \"super\" here would refer to the parent class of Serializable,\n    // when we want the parent class of the module actually calling this method.\n    const parentClass = Object.getPrototypeOf(serializableClass);\n    const lcNameIsSubclassed = typeof serializableClass.lc_name === \"function\" &&\n        (typeof parentClass.lc_name !== \"function\" ||\n            serializableClass.lc_name() !== parentClass.lc_name());\n    if (lcNameIsSubclassed) {\n        return serializableClass.lc_name();\n    }\n    else {\n        return serializableClass.name;\n    }\n}\nexport class Serializable {\n    /**\n     * The name of the serializable. Override to provide an alias or\n     * to preserve the serialized module name in minified environments.\n     *\n     * Implemented as a static method to support loading logic.\n     */\n    static lc_name() {\n        return this.name;\n    }\n    /**\n     * The final serialized identifier for the module.\n     */\n    get lc_id() {\n        return [\n            ...this.lc_namespace,\n            get_lc_unique_name(this.constructor),\n        ];\n    }\n    /**\n     * A map of secrets, which will be omitted from serialization.\n     * Keys are paths to the secret in constructor args, e.g. \"foo.bar.baz\".\n     * Values are the secret ids, which will be used when deserializing.\n     */\n    get lc_secrets() {\n        return undefined;\n    }\n    /**\n     * A map of additional attributes to merge with constructor args.\n     * Keys are the attribute names, e.g. \"foo\".\n     * Values are the attribute values, which will be serialized.\n     * These attributes need to be accepted by the constructor as arguments.\n     */\n    get lc_attributes() {\n        return undefined;\n    }\n    /**\n     * A map of aliases for constructor args.\n     * Keys are the attribute names, e.g. \"foo\".\n     * Values are the alias that will replace the key in serialization.\n     * This is used to eg. make argument names match Python.\n     */\n    get lc_aliases() {\n        return undefined;\n    }\n    /**\n     * A manual list of keys that should be serialized.\n     * If not overridden, all fields passed into the constructor will be serialized.\n     */\n    get lc_serializable_keys() {\n        return undefined;\n    }\n    constructor(kwargs, ..._args) {\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (this.lc_serializable_keys !== undefined) {\n            this.lc_kwargs = Object.fromEntries(Object.entries(kwargs || {}).filter(([key]) => this.lc_serializable_keys?.includes(key)));\n        }\n        else {\n            this.lc_kwargs = kwargs ?? {};\n        }\n    }\n    toJSON() {\n        if (!this.lc_serializable) {\n            return this.toJSONNotImplemented();\n        }\n        if (\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        this.lc_kwargs instanceof Serializable ||\n            typeof this.lc_kwargs !== \"object\" ||\n            Array.isArray(this.lc_kwargs)) {\n            // We do not support serialization of classes with arg not a POJO\n            // I'm aware the check above isn't as strict as it could be\n            return this.toJSONNotImplemented();\n        }\n        const aliases = {};\n        const secrets = {};\n        const kwargs = Object.keys(this.lc_kwargs).reduce((acc, key) => {\n            acc[key] = key in this ? this[key] : this.lc_kwargs[key];\n            return acc;\n        }, {});\n        // get secrets, attributes and aliases from all superclasses\n        for (\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let current = Object.getPrototypeOf(this); current; current = Object.getPrototypeOf(current)) {\n            Object.assign(aliases, Reflect.get(current, \"lc_aliases\", this));\n            Object.assign(secrets, Reflect.get(current, \"lc_secrets\", this));\n            Object.assign(kwargs, Reflect.get(current, \"lc_attributes\", this));\n        }\n        // include all secrets used, even if not in kwargs,\n        // will be replaced with sentinel value in replaceSecrets\n        Object.keys(secrets).forEach((keyPath) => {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias, @typescript-eslint/no-explicit-any\n            let read = this;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            let write = kwargs;\n            const [last, ...partsReverse] = keyPath.split(\".\").reverse();\n            for (const key of partsReverse.reverse()) {\n                if (!(key in read) || read[key] === undefined)\n                    return;\n                if (!(key in write) || write[key] === undefined) {\n                    if (typeof read[key] === \"object\" && read[key] != null) {\n                        write[key] = {};\n                    }\n                    else if (Array.isArray(read[key])) {\n                        write[key] = [];\n                    }\n                }\n                read = read[key];\n                write = write[key];\n            }\n            if (last in read && read[last] !== undefined) {\n                write[last] = write[last] || read[last];\n            }\n        });\n        return {\n            lc: 1,\n            type: \"constructor\",\n            id: this.lc_id,\n            kwargs: mapKeys(Object.keys(secrets).length ? replaceSecrets(kwargs, secrets) : kwargs, keyToJson, aliases),\n        };\n    }\n    toJSONNotImplemented() {\n        return {\n            lc: 1,\n            type: \"not_implemented\",\n            id: this.lc_id,\n        };\n    }\n}\n","export const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nexport const isWebWorker = () => typeof globalThis === \"object\" &&\n    globalThis.constructor &&\n    globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\nexport const isJsDom = () => (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\n    (typeof navigator !== \"undefined\" && navigator.userAgent.includes(\"jsdom\"));\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport const isDeno = () => typeof Deno !== \"undefined\";\n// Mark not-as-node if in Supabase Edge Function\nexport const isNode = () => typeof process !== \"undefined\" &&\n    typeof process.versions !== \"undefined\" &&\n    typeof process.versions.node !== \"undefined\" &&\n    !isDeno();\nexport const getEnv = () => {\n    let env;\n    if (isBrowser()) {\n        env = \"browser\";\n    }\n    else if (isNode()) {\n        env = \"node\";\n    }\n    else if (isWebWorker()) {\n        env = \"webworker\";\n    }\n    else if (isJsDom()) {\n        env = \"jsdom\";\n    }\n    else if (isDeno()) {\n        env = \"deno\";\n    }\n    else {\n        env = \"other\";\n    }\n    return env;\n};\nlet runtimeEnvironment;\n/**\n * @deprecated Use getRuntimeEnvironmentSync instead\n */\nexport async function getRuntimeEnvironment() {\n    return getRuntimeEnvironmentSync();\n}\nexport function getRuntimeEnvironmentSync() {\n    if (runtimeEnvironment === undefined) {\n        const env = getEnv();\n        runtimeEnvironment = {\n            library: \"langchain-js\",\n            runtime: env,\n        };\n    }\n    return runtimeEnvironment;\n}\nexport function getEnvironmentVariable(name) {\n    // Certain Deno setups will throw an error if you try to access environment variables\n    // https://github.com/langchain-ai/langchainjs/issues/1412\n    try {\n        if (typeof process !== \"undefined\") {\n            // eslint-disable-next-line no-process-env\n            return process.env?.[name];\n        }\n        else if (isDeno()) {\n            return Deno?.env.get(name);\n        }\n        else {\n            return undefined;\n        }\n    }\n    catch (e) {\n        return undefined;\n    }\n}\n","import { RunTree } from \"langsmith/run_trees\";\nimport { BaseCallbackHandler, } from \"../callbacks/base.js\";\nimport { getRuntimeEnvironmentSync } from \"../utils/env.js\";\n// TODO: Remove and just use base LangSmith Run type\nconst convertRunTreeToRun = (runTree) => {\n    if (!runTree) {\n        return undefined;\n    }\n    // Important that we return the raw run tree object since the reference\n    // is mutated in other places.\n    // TODO: Remove places where this is being done.\n    // eslint-disable-next-line no-param-reassign\n    runTree.events = runTree.events ?? [];\n    // eslint-disable-next-line no-param-reassign\n    runTree.child_runs = runTree.child_runs ?? [];\n    // TODO: Remove this cast and just use the LangSmith RunTree type.\n    return runTree;\n};\nfunction convertRunToRunTree(run, parentRun) {\n    if (!run) {\n        return undefined;\n    }\n    return new RunTree({\n        ...run,\n        parent_run: convertRunToRunTree(parentRun),\n        child_runs: run.child_runs\n            .map((r) => convertRunToRunTree(r))\n            .filter((r) => r !== undefined),\n        extra: {\n            ...run.extra,\n            runtime: getRuntimeEnvironmentSync(),\n        },\n        tracingEnabled: false,\n    });\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n    return value && !Array.isArray(value) && typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\nfunction stripNonAlphanumeric(input) {\n    return input.replace(/[-:.]/g, \"\");\n}\nfunction convertToDottedOrderFormat(epoch, runId, executionOrder) {\n    const paddedOrder = executionOrder.toFixed(0).slice(0, 3).padStart(3, \"0\");\n    return (stripNonAlphanumeric(`${new Date(epoch).toISOString().slice(0, -1)}${paddedOrder}Z`) + runId);\n}\nexport function isBaseTracer(x) {\n    return typeof x._addRunToRunMap === \"function\";\n}\nexport class BaseTracer extends BaseCallbackHandler {\n    constructor(_fields) {\n        super(...arguments);\n        /** @deprecated Use `runTreeMap` instead. */\n        Object.defineProperty(this, \"runMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"runTreeMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"usesRunTreeMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n    }\n    copy() {\n        return this;\n    }\n    getRunById(runId) {\n        if (runId === undefined) {\n            return undefined;\n        }\n        return this.usesRunTreeMap\n            ? convertRunTreeToRun(this.runTreeMap.get(runId))\n            : this.runMap.get(runId);\n    }\n    stringifyError(error) {\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        if (error instanceof Error) {\n            return error.message + (error?.stack ? `\\n\\n${error.stack}` : \"\");\n        }\n        if (typeof error === \"string\") {\n            return error;\n        }\n        return `${error}`;\n    }\n    _addChildRun(parentRun, childRun) {\n        parentRun.child_runs.push(childRun);\n    }\n    _addRunToRunMap(run) {\n        const currentDottedOrder = convertToDottedOrderFormat(run.start_time, run.id, run.execution_order);\n        const storedRun = { ...run };\n        const parentRun = this.getRunById(storedRun.parent_run_id);\n        if (storedRun.parent_run_id !== undefined) {\n            if (parentRun) {\n                this._addChildRun(parentRun, storedRun);\n                parentRun.child_execution_order = Math.max(parentRun.child_execution_order, storedRun.child_execution_order);\n                storedRun.trace_id = parentRun.trace_id;\n                if (parentRun.dotted_order !== undefined) {\n                    storedRun.dotted_order = [\n                        parentRun.dotted_order,\n                        currentDottedOrder,\n                    ].join(\".\");\n                }\n                else {\n                    // This can happen naturally for callbacks added within a run\n                    // console.debug(`Parent run with UUID ${storedRun.parent_run_id} has no dotted order.`);\n                }\n            }\n            else {\n                // This can happen naturally for callbacks added within a run\n                // console.debug(\n                //   `Parent run with UUID ${storedRun.parent_run_id} not found.`\n                // );\n            }\n        }\n        else {\n            storedRun.trace_id = storedRun.id;\n            storedRun.dotted_order = currentDottedOrder;\n        }\n        if (this.usesRunTreeMap) {\n            const runTree = convertRunToRunTree(storedRun, parentRun);\n            if (runTree !== undefined) {\n                this.runTreeMap.set(storedRun.id, runTree);\n            }\n        }\n        else {\n            this.runMap.set(storedRun.id, storedRun);\n        }\n        return storedRun;\n    }\n    async _endTrace(run) {\n        const parentRun = run.parent_run_id !== undefined && this.getRunById(run.parent_run_id);\n        if (parentRun) {\n            parentRun.child_execution_order = Math.max(parentRun.child_execution_order, run.child_execution_order);\n        }\n        else {\n            await this.persistRun(run);\n        }\n        await this.onRunUpdate?.(run);\n        if (this.usesRunTreeMap) {\n            this.runTreeMap.delete(run.id);\n        }\n        else {\n            this.runMap.delete(run.id);\n        }\n    }\n    _getExecutionOrder(parentRunId) {\n        const parentRun = parentRunId !== undefined && this.getRunById(parentRunId);\n        // If a run has no parent then execution order is 1\n        if (!parentRun) {\n            return 1;\n        }\n        return parentRun.child_execution_order + 1;\n    }\n    /**\n     * Create and add a run to the run map for LLM start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const finalExtraParams = metadata\n            ? { ...extraParams, metadata }\n            : extraParams;\n        const run = {\n            id: runId,\n            name: name ?? llm.id[llm.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: llm,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { prompts },\n            execution_order,\n            child_runs: [],\n            child_execution_order: execution_order,\n            run_type: \"llm\",\n            extra: finalExtraParams ?? {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name) {\n        const run = this.getRunById(runId) ??\n            this._createRunForLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onLLMStart?.(run);\n        return run;\n    }\n    /**\n     * Create and add a run to the run map for chat model start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const finalExtraParams = metadata\n            ? { ...extraParams, metadata }\n            : extraParams;\n        const run = {\n            id: runId,\n            name: name ?? llm.id[llm.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: llm,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { messages },\n            execution_order,\n            child_runs: [],\n            child_execution_order: execution_order,\n            run_type: \"llm\",\n            extra: finalExtraParams ?? {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name) {\n        const run = this.getRunById(runId) ??\n            this._createRunForChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onLLMStart?.(run);\n        return run;\n    }\n    async handleLLMEnd(output, runId, _parentRunId, _tags, extraParams) {\n        const run = this.getRunById(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(\"No LLM run to end.\");\n        }\n        run.end_time = Date.now();\n        run.outputs = output;\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        run.extra = { ...run.extra, ...extraParams };\n        await this.onLLMEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleLLMError(error, runId, _parentRunId, _tags, extraParams) {\n        const run = this.getRunById(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(\"No LLM run to end.\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        run.extra = { ...run.extra, ...extraParams };\n        await this.onLLMError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    /**\n     * Create and add a run to the run map for chain start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? chain.id[chain.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: chain,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs,\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: runType ?? \"chain\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name) {\n        const run = this.getRunById(runId) ??\n            this._createRunForChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name);\n        await this.onRunCreate?.(run);\n        await this.onChainStart?.(run);\n        return run;\n    }\n    async handleChainEnd(outputs, runId, _parentRunId, _tags, kwargs) {\n        const run = this.getRunById(runId);\n        if (!run) {\n            throw new Error(\"No chain run to end.\");\n        }\n        run.end_time = Date.now();\n        run.outputs = _coerceToDict(outputs, \"output\");\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        if (kwargs?.inputs !== undefined) {\n            run.inputs = _coerceToDict(kwargs.inputs, \"input\");\n        }\n        await this.onChainEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleChainError(error, runId, _parentRunId, _tags, kwargs) {\n        const run = this.getRunById(runId);\n        if (!run) {\n            throw new Error(\"No chain run to end.\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        if (kwargs?.inputs !== undefined) {\n            run.inputs = _coerceToDict(kwargs.inputs, \"input\");\n        }\n        await this.onChainError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    /**\n     * Create and add a run to the run map for tool start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForToolStart(tool, input, runId, parentRunId, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? tool.id[tool.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: tool,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { input },\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: \"tool\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleToolStart(tool, input, runId, parentRunId, tags, metadata, name) {\n        const run = this.getRunById(runId) ??\n            this._createRunForToolStart(tool, input, runId, parentRunId, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onToolStart?.(run);\n        return run;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async handleToolEnd(output, runId) {\n        const run = this.getRunById(runId);\n        if (!run || run?.run_type !== \"tool\") {\n            throw new Error(\"No tool run to end\");\n        }\n        run.end_time = Date.now();\n        run.outputs = { output };\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onToolEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleToolError(error, runId) {\n        const run = this.getRunById(runId);\n        if (!run || run?.run_type !== \"tool\") {\n            throw new Error(\"No tool run to end\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onToolError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleAgentAction(action, runId) {\n        const run = this.getRunById(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        const agentRun = run;\n        agentRun.actions = agentRun.actions || [];\n        agentRun.actions.push(action);\n        agentRun.events.push({\n            name: \"agent_action\",\n            time: new Date().toISOString(),\n            kwargs: { action },\n        });\n        await this.onAgentAction?.(run);\n    }\n    async handleAgentEnd(action, runId) {\n        const run = this.getRunById(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        run.events.push({\n            name: \"agent_end\",\n            time: new Date().toISOString(),\n            kwargs: { action },\n        });\n        await this.onAgentEnd?.(run);\n    }\n    /**\n     * Create and add a run to the run map for retriever start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? retriever.id[retriever.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: retriever,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { query },\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: \"retriever\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name) {\n        const run = this.getRunById(runId) ??\n            this._createRunForRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onRetrieverStart?.(run);\n        return run;\n    }\n    async handleRetrieverEnd(documents, runId) {\n        const run = this.getRunById(runId);\n        if (!run || run?.run_type !== \"retriever\") {\n            throw new Error(\"No retriever run to end\");\n        }\n        run.end_time = Date.now();\n        run.outputs = { documents };\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onRetrieverEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleRetrieverError(error, runId) {\n        const run = this.getRunById(runId);\n        if (!run || run?.run_type !== \"retriever\") {\n            throw new Error(\"No retriever run to end\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onRetrieverError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleText(text, runId) {\n        const run = this.getRunById(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        run.events.push({\n            name: \"text\",\n            time: new Date().toISOString(),\n            kwargs: { text },\n        });\n        await this.onText?.(run);\n    }\n    async handleLLMNewToken(token, idx, runId, _parentRunId, _tags, fields) {\n        const run = this.getRunById(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(`Invalid \"runId\" provided to \"handleLLMNewToken\" callback.`);\n        }\n        run.events.push({\n            name: \"new_token\",\n            time: new Date().toISOString(),\n            kwargs: { token, idx, chunk: fields?.chunk },\n        });\n        await this.onLLMNewToken?.(run, token, { chunk: fields?.chunk });\n        return run;\n    }\n}\n","import { v4 as uuidv4 } from \"uuid\";\nimport { BaseCallbackHandler, isBaseCallbackHandler, } from \"./base.js\";\nimport { ConsoleCallbackHandler } from \"../tracers/console.js\";\nimport { getBufferString } from \"../messages/utils.js\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\nimport { LangChainTracer, } from \"../tracers/tracer_langchain.js\";\nimport { consumeCallback } from \"./promises.js\";\nimport { isTracingEnabled } from \"../utils/callbacks.js\";\nimport { isBaseTracer } from \"../tracers/base.js\";\nimport { getContextVariable, _getConfigureHooks, } from \"../singletons/async_local_storage/context.js\";\nexport function parseCallbackConfigArg(arg) {\n    if (!arg) {\n        return {};\n    }\n    else if (Array.isArray(arg) || \"name\" in arg) {\n        return { callbacks: arg };\n    }\n    else {\n        return arg;\n    }\n}\n/**\n * Manage callbacks from different components of LangChain.\n */\nexport class BaseCallbackManager {\n    setHandler(handler) {\n        return this.setHandlers([handler]);\n    }\n}\n/**\n * Base class for run manager in LangChain.\n */\nexport class BaseRunManager {\n    constructor(runId, handlers, inheritableHandlers, tags, inheritableTags, metadata, inheritableMetadata, _parentRunId) {\n        Object.defineProperty(this, \"runId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: runId\n        });\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: handlers\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableHandlers\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: tags\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableTags\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: metadata\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableMetadata\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _parentRunId\n        });\n    }\n    get parentRunId() {\n        return this._parentRunId;\n    }\n    async handleText(text) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            try {\n                await handler.handleText?.(text, this.runId, this._parentRunId, this.tags);\n            }\n            catch (err) {\n                const logFunction = handler.raiseError\n                    ? console.error\n                    : console.warn;\n                logFunction(`Error in handler ${handler.constructor.name}, handleText: ${err}`);\n                if (handler.raiseError) {\n                    throw err;\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleCustomEvent(eventName, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data, _runId, _tags, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _metadata) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            try {\n                await handler.handleCustomEvent?.(eventName, data, this.runId, this.tags, this.metadata);\n            }\n            catch (err) {\n                const logFunction = handler.raiseError\n                    ? console.error\n                    : console.warn;\n                logFunction(`Error in handler ${handler.constructor.name}, handleCustomEvent: ${err}`);\n                if (handler.raiseError) {\n                    throw err;\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\n/**\n * Manages callbacks for retriever runs.\n */\nexport class CallbackManagerForRetrieverRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleRetrieverEnd(documents) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverEnd?.(documents, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleRetriever`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleRetrieverError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (error) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleRetrieverError: ${error}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForLLMRun extends BaseRunManager {\n    async handleLLMNewToken(token, idx, _runId, _parentRunId, _tags, fields) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMNewToken?.(token, idx ?? { prompt: 0, completion: 0 }, this.runId, this._parentRunId, this.tags, fields);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleLLMNewToken: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMError(err, _runId, _parentRunId, _tags, extraParams) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMError?.(err, this.runId, this._parentRunId, this.tags, extraParams);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleLLMError: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMEnd(output, _runId, _parentRunId, _tags, extraParams) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMEnd?.(output, this.runId, this._parentRunId, this.tags, extraParams);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleLLMEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForChainRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleChainError(err, _runId, _parentRunId, _tags, kwargs) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainError?.(err, this.runId, this._parentRunId, this.tags, kwargs);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleChainError: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleChainEnd(output, _runId, _parentRunId, _tags, kwargs) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainEnd?.(output, this.runId, this._parentRunId, this.tags, kwargs);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleChainEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentAction(action) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentAction?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleAgentAction: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentEnd(action) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentEnd?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleAgentEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForToolRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleToolError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleToolError: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async handleToolEnd(output) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolEnd?.(output, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleToolEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\n/**\n * @example\n * ```typescript\n * const prompt = PromptTemplate.fromTemplate(\"What is the answer to {question}?\");\n *\n * // Example of using LLMChain with OpenAI and a simple prompt\n * const chain = new LLMChain({\n *   llm: new ChatOpenAI({ temperature: 0.9 }),\n *   prompt,\n * });\n *\n * // Running the chain with a single question\n * const result = await chain.call({\n *   question: \"What is the airspeed velocity of an unladen swallow?\",\n * });\n * console.log(\"The answer is:\", result);\n * ```\n */\nexport class CallbackManager extends BaseCallbackManager {\n    constructor(parentRunId, options) {\n        super();\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"callback_manager\"\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.handlers = options?.handlers ?? this.handlers;\n        this.inheritableHandlers =\n            options?.inheritableHandlers ?? this.inheritableHandlers;\n        this.tags = options?.tags ?? this.tags;\n        this.inheritableTags = options?.inheritableTags ?? this.inheritableTags;\n        this.metadata = options?.metadata ?? this.metadata;\n        this.inheritableMetadata =\n            options?.inheritableMetadata ?? this.inheritableMetadata;\n        this._parentRunId = parentRunId;\n    }\n    /**\n     * Gets the parent run ID, if any.\n     *\n     * @returns The parent run ID.\n     */\n    getParentRunId() {\n        return this._parentRunId;\n    }\n    async handleLLMStart(llm, prompts, runId = undefined, _parentRunId = undefined, extraParams = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        return Promise.all(prompts.map(async (prompt, idx) => {\n            // Can't have duplicate runs with the same run ID (if provided)\n            const runId_ = idx === 0 && runId ? runId : uuidv4();\n            await Promise.all(this.handlers.map((handler) => {\n                if (handler.ignoreLLM) {\n                    return;\n                }\n                if (isBaseTracer(handler)) {\n                    // Create and add run to the run map.\n                    // We do this synchronously to avoid race conditions\n                    // when callbacks are backgrounded.\n                    handler._createRunForLLMStart(llm, [prompt], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                }\n                return consumeCallback(async () => {\n                    try {\n                        await handler.handleLLMStart?.(llm, [prompt], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                    }\n                    catch (err) {\n                        const logFunction = handler.raiseError\n                            ? console.error\n                            : console.warn;\n                        logFunction(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                        if (handler.raiseError) {\n                            throw err;\n                        }\n                    }\n                }, handler.awaitHandlers);\n            }));\n            return new CallbackManagerForLLMRun(runId_, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChatModelStart(llm, messages, runId = undefined, _parentRunId = undefined, extraParams = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        return Promise.all(messages.map(async (messageGroup, idx) => {\n            // Can't have duplicate runs with the same run ID (if provided)\n            const runId_ = idx === 0 && runId ? runId : uuidv4();\n            await Promise.all(this.handlers.map((handler) => {\n                if (handler.ignoreLLM) {\n                    return;\n                }\n                if (isBaseTracer(handler)) {\n                    // Create and add run to the run map.\n                    // We do this synchronously to avoid race conditions\n                    // when callbacks are backgrounded.\n                    handler._createRunForChatModelStart(llm, [messageGroup], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                }\n                return consumeCallback(async () => {\n                    try {\n                        if (handler.handleChatModelStart) {\n                            await handler.handleChatModelStart?.(llm, [messageGroup], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                        }\n                        else if (handler.handleLLMStart) {\n                            const messageString = getBufferString(messageGroup);\n                            await handler.handleLLMStart?.(llm, [messageString], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                        }\n                    }\n                    catch (err) {\n                        const logFunction = handler.raiseError\n                            ? console.error\n                            : console.warn;\n                        logFunction(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                        if (handler.raiseError) {\n                            throw err;\n                        }\n                    }\n                }, handler.awaitHandlers);\n            }));\n            return new CallbackManagerForLLMRun(runId_, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChainStart(chain, inputs, runId = uuidv4(), runType = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => {\n            if (handler.ignoreChain) {\n                return;\n            }\n            if (isBaseTracer(handler)) {\n                // Create and add run to the run map.\n                // We do this synchronously to avoid race conditions\n                // when callbacks are backgrounded.\n                handler._createRunForChainStart(chain, inputs, runId, this._parentRunId, this.tags, this.metadata, runType, runName);\n            }\n            return consumeCallback(async () => {\n                try {\n                    await handler.handleChainStart?.(chain, inputs, runId, this._parentRunId, this.tags, this.metadata, runType, runName);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleChainStart: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }, handler.awaitHandlers);\n        }));\n        return new CallbackManagerForChainRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleToolStart(tool, input, runId = uuidv4(), _parentRunId = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => {\n            if (handler.ignoreAgent) {\n                return;\n            }\n            if (isBaseTracer(handler)) {\n                // Create and add run to the run map.\n                // We do this synchronously to avoid race conditions\n                // when callbacks are backgrounded.\n                handler._createRunForToolStart(tool, input, runId, this._parentRunId, this.tags, this.metadata, runName);\n            }\n            return consumeCallback(async () => {\n                try {\n                    await handler.handleToolStart?.(tool, input, runId, this._parentRunId, this.tags, this.metadata, runName);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleToolStart: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }, handler.awaitHandlers);\n        }));\n        return new CallbackManagerForToolRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleRetrieverStart(retriever, query, runId = uuidv4(), _parentRunId = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => {\n            if (handler.ignoreRetriever) {\n                return;\n            }\n            if (isBaseTracer(handler)) {\n                // Create and add run to the run map.\n                // We do this synchronously to avoid race conditions\n                // when callbacks are backgrounded.\n                handler._createRunForRetrieverStart(retriever, query, runId, this._parentRunId, this.tags, this.metadata, runName);\n            }\n            return consumeCallback(async () => {\n                try {\n                    await handler.handleRetrieverStart?.(retriever, query, runId, this._parentRunId, this.tags, this.metadata, runName);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleRetrieverStart: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }, handler.awaitHandlers);\n        }));\n        return new CallbackManagerForRetrieverRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleCustomEvent(eventName, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data, runId, _tags, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _metadata) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreCustomEvent) {\n                try {\n                    await handler.handleCustomEvent?.(eventName, data, runId, this.tags, this.metadata);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleCustomEvent: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    addHandler(handler, inherit = true) {\n        this.handlers.push(handler);\n        if (inherit) {\n            this.inheritableHandlers.push(handler);\n        }\n    }\n    removeHandler(handler) {\n        this.handlers = this.handlers.filter((_handler) => _handler !== handler);\n        this.inheritableHandlers = this.inheritableHandlers.filter((_handler) => _handler !== handler);\n    }\n    setHandlers(handlers, inherit = true) {\n        this.handlers = [];\n        this.inheritableHandlers = [];\n        for (const handler of handlers) {\n            this.addHandler(handler, inherit);\n        }\n    }\n    addTags(tags, inherit = true) {\n        this.removeTags(tags); // Remove duplicates\n        this.tags.push(...tags);\n        if (inherit) {\n            this.inheritableTags.push(...tags);\n        }\n    }\n    removeTags(tags) {\n        this.tags = this.tags.filter((tag) => !tags.includes(tag));\n        this.inheritableTags = this.inheritableTags.filter((tag) => !tags.includes(tag));\n    }\n    addMetadata(metadata, inherit = true) {\n        this.metadata = { ...this.metadata, ...metadata };\n        if (inherit) {\n            this.inheritableMetadata = { ...this.inheritableMetadata, ...metadata };\n        }\n    }\n    removeMetadata(metadata) {\n        for (const key of Object.keys(metadata)) {\n            delete this.metadata[key];\n            delete this.inheritableMetadata[key];\n        }\n    }\n    copy(additionalHandlers = [], inherit = true) {\n        const manager = new CallbackManager(this._parentRunId);\n        for (const handler of this.handlers) {\n            const inheritable = this.inheritableHandlers.includes(handler);\n            manager.addHandler(handler, inheritable);\n        }\n        for (const tag of this.tags) {\n            const inheritable = this.inheritableTags.includes(tag);\n            manager.addTags([tag], inheritable);\n        }\n        for (const key of Object.keys(this.metadata)) {\n            const inheritable = Object.keys(this.inheritableMetadata).includes(key);\n            manager.addMetadata({ [key]: this.metadata[key] }, inheritable);\n        }\n        for (const handler of additionalHandlers) {\n            if (\n            // Prevent multiple copies of console_callback_handler\n            manager.handlers\n                .filter((h) => h.name === \"console_callback_handler\")\n                .some((h) => h.name === handler.name)) {\n                continue;\n            }\n            manager.addHandler(handler, inherit);\n        }\n        return manager;\n    }\n    static fromHandlers(handlers) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuidv4()\n                });\n                Object.assign(this, handlers);\n            }\n        }\n        const manager = new this();\n        manager.addHandler(new Handler());\n        return manager;\n    }\n    static configure(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options) {\n        return this._configureSync(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options);\n    }\n    // TODO: Deprecate async method in favor of this one.\n    static _configureSync(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options) {\n        let callbackManager;\n        if (inheritableHandlers || localHandlers) {\n            if (Array.isArray(inheritableHandlers) || !inheritableHandlers) {\n                callbackManager = new CallbackManager();\n                callbackManager.setHandlers(inheritableHandlers?.map(ensureHandler) ?? [], true);\n            }\n            else {\n                callbackManager = inheritableHandlers;\n            }\n            callbackManager = callbackManager.copy(Array.isArray(localHandlers)\n                ? localHandlers.map(ensureHandler)\n                : localHandlers?.handlers, false);\n        }\n        const verboseEnabled = getEnvironmentVariable(\"LANGCHAIN_VERBOSE\") === \"true\" ||\n            options?.verbose;\n        const tracingV2Enabled = LangChainTracer.getTraceableRunTree()?.tracingEnabled ||\n            isTracingEnabled();\n        const tracingEnabled = tracingV2Enabled ||\n            (getEnvironmentVariable(\"LANGCHAIN_TRACING\") ?? false);\n        if (verboseEnabled || tracingEnabled) {\n            if (!callbackManager) {\n                callbackManager = new CallbackManager();\n            }\n            if (verboseEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === ConsoleCallbackHandler.prototype.name)) {\n                const consoleHandler = new ConsoleCallbackHandler();\n                callbackManager.addHandler(consoleHandler, true);\n            }\n            if (tracingEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === \"langchain_tracer\")) {\n                if (tracingV2Enabled) {\n                    const tracerV2 = new LangChainTracer();\n                    callbackManager.addHandler(tracerV2, true);\n                    // handoff between langchain and langsmith/traceable\n                    // override the parent run ID\n                    callbackManager._parentRunId =\n                        LangChainTracer.getTraceableRunTree()?.id ??\n                            callbackManager._parentRunId;\n                }\n            }\n        }\n        for (const { contextVar, inheritable = true, handlerClass, envVar, } of _getConfigureHooks()) {\n            const createIfNotInContext = envVar && getEnvironmentVariable(envVar) === \"true\" && handlerClass;\n            let handler;\n            const contextVarValue = contextVar !== undefined ? getContextVariable(contextVar) : undefined;\n            if (contextVarValue && isBaseCallbackHandler(contextVarValue)) {\n                handler = contextVarValue;\n            }\n            else if (createIfNotInContext) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                handler = new handlerClass({});\n            }\n            if (handler !== undefined) {\n                if (!callbackManager) {\n                    callbackManager = new CallbackManager();\n                }\n                if (!callbackManager.handlers.some((h) => h.name === handler.name)) {\n                    callbackManager.addHandler(handler, inheritable);\n                }\n            }\n        }\n        if (inheritableTags || localTags) {\n            if (callbackManager) {\n                callbackManager.addTags(inheritableTags ?? []);\n                callbackManager.addTags(localTags ?? [], false);\n            }\n        }\n        if (inheritableMetadata || localMetadata) {\n            if (callbackManager) {\n                callbackManager.addMetadata(inheritableMetadata ?? {});\n                callbackManager.addMetadata(localMetadata ?? {}, false);\n            }\n        }\n        return callbackManager;\n    }\n}\nexport function ensureHandler(handler) {\n    if (\"name\" in handler) {\n        return handler;\n    }\n    return BaseCallbackHandler.fromMethods(handler);\n}\n/**\n * @deprecated Use [`traceable`](https://docs.smith.langchain.com/observability/how_to_guides/tracing/annotate_code)\n * from \"langsmith\" instead.\n */\nexport class TraceGroup {\n    constructor(groupName, options) {\n        Object.defineProperty(this, \"groupName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: groupName\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n        Object.defineProperty(this, \"runManager\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    async getTraceGroupCallbackManager(group_name, inputs, options) {\n        const cb = new LangChainTracer(options);\n        const cm = await CallbackManager.configure([cb]);\n        const runManager = await cm?.handleChainStart({\n            lc: 1,\n            type: \"not_implemented\",\n            id: [\"langchain\", \"callbacks\", \"groups\", group_name],\n        }, inputs ?? {});\n        if (!runManager) {\n            throw new Error(\"Failed to create run group callback manager.\");\n        }\n        return runManager;\n    }\n    async start(inputs) {\n        if (!this.runManager) {\n            this.runManager = await this.getTraceGroupCallbackManager(this.groupName, inputs, this.options);\n        }\n        return this.runManager.getChild();\n    }\n    async error(err) {\n        if (this.runManager) {\n            await this.runManager.handleChainError(err);\n            this.runManager = undefined;\n        }\n    }\n    async end(output) {\n        if (this.runManager) {\n            await this.runManager.handleChainEnd(output ?? {});\n            this.runManager = undefined;\n        }\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n    return value && !Array.isArray(value) && typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport async function traceAsGroup(groupOptions, enclosedCode, ...args) {\n    const traceGroup = new TraceGroup(groupOptions.name, groupOptions);\n    const callbackManager = await traceGroup.start({ ...args });\n    try {\n        const result = await enclosedCode(callbackManager, ...args);\n        await traceGroup.end(_coerceToDict(result, \"output\"));\n        return result;\n    }\n    catch (err) {\n        await traceGroup.error(err);\n        throw err;\n    }\n}\n","import styles from \"ansi-styles\";\nimport { BaseTracer } from \"./base.js\";\nfunction wrap(style, text) {\n    return `${style.open}${text}${style.close}`;\n}\nfunction tryJsonStringify(obj, fallback) {\n    try {\n        return JSON.stringify(obj, null, 2);\n    }\n    catch (err) {\n        return fallback;\n    }\n}\nfunction formatKVMapItem(value) {\n    if (typeof value === \"string\") {\n        return value.trim();\n    }\n    if (value === null || value === undefined) {\n        return value;\n    }\n    return tryJsonStringify(value, value.toString());\n}\nfunction elapsed(run) {\n    if (!run.end_time)\n        return \"\";\n    const elapsed = run.end_time - run.start_time;\n    if (elapsed < 1000) {\n        return `${elapsed}ms`;\n    }\n    return `${(elapsed / 1000).toFixed(2)}s`;\n}\nconst { color } = styles;\n/**\n * A tracer that logs all events to the console. It extends from the\n * `BaseTracer` class and overrides its methods to provide custom logging\n * functionality.\n * @example\n * ```typescript\n *\n * const llm = new ChatAnthropic({\n *   temperature: 0,\n *   tags: [\"example\", \"callbacks\", \"constructor\"],\n *   callbacks: [new ConsoleCallbackHandler()],\n * });\n *\n * ```\n */\nexport class ConsoleCallbackHandler extends BaseTracer {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"console_callback_handler\"\n        });\n    }\n    /**\n     * Method used to persist the run. In this case, it simply returns a\n     * resolved promise as there's no persistence logic.\n     * @param _run The run to persist.\n     * @returns A resolved promise.\n     */\n    persistRun(_run) {\n        return Promise.resolve();\n    }\n    // utility methods\n    /**\n     * Method used to get all the parent runs of a given run.\n     * @param run The run whose parents are to be retrieved.\n     * @returns An array of parent runs.\n     */\n    getParents(run) {\n        const parents = [];\n        let currentRun = run;\n        while (currentRun.parent_run_id) {\n            const parent = this.runMap.get(currentRun.parent_run_id);\n            if (parent) {\n                parents.push(parent);\n                currentRun = parent;\n            }\n            else {\n                break;\n            }\n        }\n        return parents;\n    }\n    /**\n     * Method used to get a string representation of the run's lineage, which\n     * is used in logging.\n     * @param run The run whose lineage is to be retrieved.\n     * @returns A string representation of the run's lineage.\n     */\n    getBreadcrumbs(run) {\n        const parents = this.getParents(run).reverse();\n        const string = [...parents, run]\n            .map((parent, i, arr) => {\n            const name = `${parent.execution_order}:${parent.run_type}:${parent.name}`;\n            return i === arr.length - 1 ? wrap(styles.bold, name) : name;\n        })\n            .join(\" > \");\n        return wrap(color.grey, string);\n    }\n    // logging methods\n    /**\n     * Method used to log the start of a chain run.\n     * @param run The chain run that has started.\n     * @returns void\n     */\n    onChainStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[chain/start]\")} [${crumbs}] Entering Chain run with input: ${tryJsonStringify(run.inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of a chain run.\n     * @param run The chain run that has ended.\n     * @returns void\n     */\n    onChainEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[chain/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Chain run with output: ${tryJsonStringify(run.outputs, \"[outputs]\")}`);\n    }\n    /**\n     * Method used to log any errors of a chain run.\n     * @param run The chain run that has errored.\n     * @returns void\n     */\n    onChainError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[chain/error]\")} [${crumbs}] [${elapsed(run)}] Chain run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of an LLM run.\n     * @param run The LLM run that has started.\n     * @returns void\n     */\n    onLLMStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        const inputs = \"prompts\" in run.inputs\n            ? { prompts: run.inputs.prompts.map((p) => p.trim()) }\n            : run.inputs;\n        console.log(`${wrap(color.green, \"[llm/start]\")} [${crumbs}] Entering LLM run with input: ${tryJsonStringify(inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of an LLM run.\n     * @param run The LLM run that has ended.\n     * @returns void\n     */\n    onLLMEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[llm/end]\")} [${crumbs}] [${elapsed(run)}] Exiting LLM run with output: ${tryJsonStringify(run.outputs, \"[response]\")}`);\n    }\n    /**\n     * Method used to log any errors of an LLM run.\n     * @param run The LLM run that has errored.\n     * @returns void\n     */\n    onLLMError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[llm/error]\")} [${crumbs}] [${elapsed(run)}] LLM run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of a tool run.\n     * @param run The tool run that has started.\n     * @returns void\n     */\n    onToolStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[tool/start]\")} [${crumbs}] Entering Tool run with input: \"${formatKVMapItem(run.inputs.input)}\"`);\n    }\n    /**\n     * Method used to log the end of a tool run.\n     * @param run The tool run that has ended.\n     * @returns void\n     */\n    onToolEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[tool/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Tool run with output: \"${formatKVMapItem(run.outputs?.output)}\"`);\n    }\n    /**\n     * Method used to log any errors of a tool run.\n     * @param run The tool run that has errored.\n     * @returns void\n     */\n    onToolError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[tool/error]\")} [${crumbs}] [${elapsed(run)}] Tool run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of a retriever run.\n     * @param run The retriever run that has started.\n     * @returns void\n     */\n    onRetrieverStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[retriever/start]\")} [${crumbs}] Entering Retriever run with input: ${tryJsonStringify(run.inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of a retriever run.\n     * @param run The retriever run that has ended.\n     * @returns void\n     */\n    onRetrieverEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[retriever/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Retriever run with output: ${tryJsonStringify(run.outputs, \"[outputs]\")}`);\n    }\n    /**\n     * Method used to log any errors of a retriever run.\n     * @param run The retriever run that has errored.\n     * @returns void\n     */\n    onRetrieverError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[retriever/error]\")} [${crumbs}] [${elapsed(run)}] Retriever run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the action selected by the agent.\n     * @param run The run in which the agent action occurred.\n     * @returns void\n     */\n    onAgentAction(run) {\n        const agentRun = run;\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.blue, \"[agent/action]\")} [${crumbs}] Agent selected action: ${tryJsonStringify(agentRun.actions[agentRun.actions.length - 1], \"[action]\")}`);\n    }\n}\n","import { Serializable } from \"../load/serializable.js\";\nimport { isDataContentBlock, } from \"./content_blocks.js\";\nexport function mergeContent(firstContent, secondContent) {\n    // If first content is a string\n    if (typeof firstContent === \"string\") {\n        if (firstContent === \"\") {\n            return secondContent;\n        }\n        if (typeof secondContent === \"string\") {\n            return firstContent + secondContent;\n        }\n        else if (Array.isArray(secondContent) &&\n            secondContent.some((c) => isDataContentBlock(c))) {\n            return [\n                {\n                    type: \"text\",\n                    source_type: \"text\",\n                    text: firstContent,\n                },\n                ...secondContent,\n            ];\n        }\n        else {\n            return [{ type: \"text\", text: firstContent }, ...secondContent];\n        }\n        // If both are arrays\n    }\n    else if (Array.isArray(secondContent)) {\n        return (_mergeLists(firstContent, secondContent) ?? [\n            ...firstContent,\n            ...secondContent,\n        ]);\n    }\n    else {\n        if (secondContent === \"\") {\n            return firstContent;\n        }\n        else if (Array.isArray(firstContent) &&\n            firstContent.some((c) => isDataContentBlock(c))) {\n            return [\n                ...firstContent,\n                {\n                    type: \"file\",\n                    source_type: \"text\",\n                    text: secondContent,\n                },\n            ];\n        }\n        else {\n            return [...firstContent, { type: \"text\", text: secondContent }];\n        }\n    }\n}\n/**\n * 'Merge' two statuses. If either value passed is 'error', it will return 'error'. Else\n * it will return 'success'.\n *\n * @param {\"success\" | \"error\" | undefined} left The existing value to 'merge' with the new value.\n * @param {\"success\" | \"error\" | undefined} right The new value to 'merge' with the existing value\n * @returns {\"success\" | \"error\"} The 'merged' value.\n */\nexport function _mergeStatus(left, right) {\n    if (left === \"error\" || right === \"error\") {\n        return \"error\";\n    }\n    return \"success\";\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction stringifyWithDepthLimit(obj, depthLimit) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function helper(obj, currentDepth) {\n        if (typeof obj !== \"object\" || obj === null || obj === undefined) {\n            return obj;\n        }\n        if (currentDepth >= depthLimit) {\n            if (Array.isArray(obj)) {\n                return \"[Array]\";\n            }\n            return \"[Object]\";\n        }\n        if (Array.isArray(obj)) {\n            return obj.map((item) => helper(item, currentDepth + 1));\n        }\n        const result = {};\n        for (const key of Object.keys(obj)) {\n            result[key] = helper(obj[key], currentDepth + 1);\n        }\n        return result;\n    }\n    return JSON.stringify(helper(obj, 0), null, 2);\n}\n/**\n * Base class for all types of messages in a conversation. It includes\n * properties like `content`, `name`, and `additional_kwargs`. It also\n * includes methods like `toDict()` and `_getType()`.\n */\nexport class BaseMessage extends Serializable {\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return {\n            additional_kwargs: \"additional_kwargs\",\n            response_metadata: \"response_metadata\",\n        };\n    }\n    /**\n     * Get text content of the message.\n     */\n    get text() {\n        if (typeof this.content === \"string\") {\n            return this.content;\n        }\n        if (!Array.isArray(this.content))\n            return \"\";\n        return this.content\n            .map((c) => {\n            if (typeof c === \"string\")\n                return c;\n            if (c.type === \"text\")\n                return c.text;\n            return \"\";\n        })\n            .join(\"\");\n    }\n    /** The type of the message. */\n    getType() {\n        return this._getType();\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            fields = {\n                content: fields,\n                additional_kwargs: kwargs,\n                response_metadata: {},\n            };\n        }\n        // Make sure the default value for additional_kwargs is passed into super() for serialization\n        if (!fields.additional_kwargs) {\n            // eslint-disable-next-line no-param-reassign\n            fields.additional_kwargs = {};\n        }\n        if (!fields.response_metadata) {\n            // eslint-disable-next-line no-param-reassign\n            fields.response_metadata = {};\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"messages\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        /** The content of the message. */\n        Object.defineProperty(this, \"content\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** The name of the message sender in a multi-user chat. */\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Additional keyword arguments */\n        Object.defineProperty(this, \"additional_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Response metadata. For example: response headers, logprobs, token counts. */\n        Object.defineProperty(this, \"response_metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * An optional unique identifier for the message. This should ideally be\n         * provided by the provider/model which created the message.\n         */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.content = fields.content;\n        this.additional_kwargs = fields.additional_kwargs;\n        this.response_metadata = fields.response_metadata;\n        this.id = fields.id;\n    }\n    toDict() {\n        return {\n            type: this._getType(),\n            data: this.toJSON()\n                .kwargs,\n        };\n    }\n    static lc_name() {\n        return \"BaseMessage\";\n    }\n    // Can't be protected for silly reasons\n    get _printableFields() {\n        return {\n            id: this.id,\n            content: this.content,\n            name: this.name,\n            additional_kwargs: this.additional_kwargs,\n            response_metadata: this.response_metadata,\n        };\n    }\n    // this private method is used to update the ID for the runtime\n    // value as well as in lc_kwargs for serialisation\n    _updateId(value) {\n        this.id = value;\n        // lc_attributes wouldn't work here, because jest compares the\n        // whole object\n        this.lc_kwargs.id = value;\n    }\n    get [Symbol.toStringTag]() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return this.constructor.lc_name();\n    }\n    // Override the default behavior of console.log\n    [Symbol.for(\"nodejs.util.inspect.custom\")](depth) {\n        if (depth === null) {\n            return this;\n        }\n        const printable = stringifyWithDepthLimit(this._printableFields, Math.max(4, depth));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return `${this.constructor.lc_name()} ${printable}`;\n    }\n}\nexport function isOpenAIToolCallArray(value) {\n    return (Array.isArray(value) &&\n        value.every((v) => typeof v.index === \"number\"));\n}\nexport function _mergeDicts(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nleft, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nright\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    const merged = { ...left };\n    for (const [key, value] of Object.entries(right)) {\n        if (merged[key] == null) {\n            merged[key] = value;\n        }\n        else if (value == null) {\n            continue;\n        }\n        else if (typeof merged[key] !== typeof value ||\n            Array.isArray(merged[key]) !== Array.isArray(value)) {\n            throw new Error(`field[${key}] already exists in the message chunk, but with a different type.`);\n        }\n        else if (typeof merged[key] === \"string\") {\n            if (key === \"type\") {\n                // Do not merge 'type' fields\n                continue;\n            }\n            merged[key] += value;\n        }\n        else if (typeof merged[key] === \"object\" && !Array.isArray(merged[key])) {\n            merged[key] = _mergeDicts(merged[key], value);\n        }\n        else if (Array.isArray(merged[key])) {\n            merged[key] = _mergeLists(merged[key], value);\n        }\n        else if (merged[key] === value) {\n            continue;\n        }\n        else {\n            console.warn(`field[${key}] already exists in this message chunk and value has unsupported type.`);\n        }\n    }\n    return merged;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _mergeLists(left, right) {\n    if (left === undefined && right === undefined) {\n        return undefined;\n    }\n    else if (left === undefined || right === undefined) {\n        return left || right;\n    }\n    else {\n        const merged = [...left];\n        for (const item of right) {\n            if (typeof item === \"object\" &&\n                \"index\" in item &&\n                typeof item.index === \"number\") {\n                const toMerge = merged.findIndex((leftItem) => leftItem.index === item.index);\n                if (toMerge !== -1) {\n                    merged[toMerge] = _mergeDicts(merged[toMerge], item);\n                }\n                else {\n                    merged.push(item);\n                }\n            }\n            else if (typeof item === \"object\" &&\n                \"text\" in item &&\n                item.text === \"\") {\n                // No-op - skip empty text blocks\n                continue;\n            }\n            else {\n                merged.push(item);\n            }\n        }\n        return merged;\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _mergeObj(left, right) {\n    if (!left && !right) {\n        throw new Error(\"Cannot merge two undefined objects.\");\n    }\n    if (!left || !right) {\n        return left || right;\n    }\n    else if (typeof left !== typeof right) {\n        throw new Error(`Cannot merge objects of different types.\\nLeft ${typeof left}\\nRight ${typeof right}`);\n    }\n    else if (typeof left === \"string\" && typeof right === \"string\") {\n        return (left + right);\n    }\n    else if (Array.isArray(left) && Array.isArray(right)) {\n        return _mergeLists(left, right);\n    }\n    else if (typeof left === \"object\" && typeof right === \"object\") {\n        return _mergeDicts(left, right);\n    }\n    else if (left === right) {\n        return left;\n    }\n    else {\n        throw new Error(`Can not merge objects of different types.\\nLeft ${left}\\nRight ${right}`);\n    }\n}\n/**\n * Represents a chunk of a message, which can be concatenated with other\n * message chunks. It includes a method `_merge_kwargs_dict()` for merging\n * additional keyword arguments from another `BaseMessageChunk` into this\n * one. It also overrides the `__add__()` method to support concatenation\n * of `BaseMessageChunk` instances.\n */\nexport class BaseMessageChunk extends BaseMessage {\n}\nexport function _isMessageFieldWithRole(x) {\n    return typeof x.role === \"string\";\n}\nexport function isBaseMessage(messageLike) {\n    return typeof messageLike?._getType === \"function\";\n}\nexport function isBaseMessageChunk(messageLike) {\n    return (isBaseMessage(messageLike) &&\n        typeof messageLike.concat === \"function\");\n}\n","import { addLangChainErrorFields } from \"../errors/index.js\";\nimport { _isToolCall } from \"../tools/utils.js\";\nimport { AIMessage, AIMessageChunk } from \"./ai.js\";\nimport { isBaseMessage, _isMessageFieldWithRole, } from \"./base.js\";\nimport { ChatMessage, ChatMessageChunk, } from \"./chat.js\";\nimport { FunctionMessage, FunctionMessageChunk, } from \"./function.js\";\nimport { HumanMessage, HumanMessageChunk } from \"./human.js\";\nimport { SystemMessage, SystemMessageChunk } from \"./system.js\";\nimport { ToolMessage, } from \"./tool.js\";\nfunction _coerceToolCall(toolCall) {\n    if (_isToolCall(toolCall)) {\n        return toolCall;\n    }\n    else if (typeof toolCall.id === \"string\" &&\n        toolCall.type === \"function\" &&\n        typeof toolCall.function === \"object\" &&\n        toolCall.function !== null &&\n        \"arguments\" in toolCall.function &&\n        typeof toolCall.function.arguments === \"string\" &&\n        \"name\" in toolCall.function &&\n        typeof toolCall.function.name === \"string\") {\n        // Handle OpenAI tool call format\n        return {\n            id: toolCall.id,\n            args: JSON.parse(toolCall.function.arguments),\n            name: toolCall.function.name,\n            type: \"tool_call\",\n        };\n    }\n    else {\n        // TODO: Throw an error?\n        return toolCall;\n    }\n}\nfunction isSerializedConstructor(x) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        x.lc === 1 &&\n        Array.isArray(x.id) &&\n        x.kwargs != null &&\n        typeof x.kwargs === \"object\");\n}\nfunction _constructMessageFromParams(params) {\n    let type;\n    let rest;\n    // Support serialized messages\n    if (isSerializedConstructor(params)) {\n        const className = params.id.at(-1);\n        if (className === \"HumanMessage\" || className === \"HumanMessageChunk\") {\n            type = \"user\";\n        }\n        else if (className === \"AIMessage\" || className === \"AIMessageChunk\") {\n            type = \"assistant\";\n        }\n        else if (className === \"SystemMessage\" ||\n            className === \"SystemMessageChunk\") {\n            type = \"system\";\n        }\n        else if (className === \"FunctionMessage\" ||\n            className === \"FunctionMessageChunk\") {\n            type = \"function\";\n        }\n        else if (className === \"ToolMessage\" ||\n            className === \"ToolMessageChunk\") {\n            type = \"tool\";\n        }\n        else {\n            type = \"unknown\";\n        }\n        rest = params.kwargs;\n    }\n    else {\n        const { type: extractedType, ...otherParams } = params;\n        type = extractedType;\n        rest = otherParams;\n    }\n    if (type === \"human\" || type === \"user\") {\n        return new HumanMessage(rest);\n    }\n    else if (type === \"ai\" || type === \"assistant\") {\n        const { tool_calls: rawToolCalls, ...other } = rest;\n        if (!Array.isArray(rawToolCalls)) {\n            return new AIMessage(rest);\n        }\n        const tool_calls = rawToolCalls.map(_coerceToolCall);\n        return new AIMessage({ ...other, tool_calls });\n    }\n    else if (type === \"system\") {\n        return new SystemMessage(rest);\n    }\n    else if (type === \"developer\") {\n        return new SystemMessage({\n            ...rest,\n            additional_kwargs: {\n                ...rest.additional_kwargs,\n                __openai_role__: \"developer\",\n            },\n        });\n    }\n    else if (type === \"tool\" && \"tool_call_id\" in rest) {\n        return new ToolMessage({\n            ...rest,\n            content: rest.content,\n            tool_call_id: rest.tool_call_id,\n            name: rest.name,\n        });\n    }\n    else {\n        const error = addLangChainErrorFields(new Error(`Unable to coerce message from array: only human, AI, system, developer, or tool message coercion is currently supported.\\n\\nReceived: ${JSON.stringify(params, null, 2)}`), \"MESSAGE_COERCION_FAILURE\");\n        throw error;\n    }\n}\nexport function coerceMessageLikeToMessage(messageLike) {\n    if (typeof messageLike === \"string\") {\n        return new HumanMessage(messageLike);\n    }\n    else if (isBaseMessage(messageLike)) {\n        return messageLike;\n    }\n    if (Array.isArray(messageLike)) {\n        const [type, content] = messageLike;\n        return _constructMessageFromParams({ type, content });\n    }\n    else if (_isMessageFieldWithRole(messageLike)) {\n        const { role: type, ...rest } = messageLike;\n        return _constructMessageFromParams({ ...rest, type });\n    }\n    else {\n        return _constructMessageFromParams(messageLike);\n    }\n}\n/**\n * This function is used by memory classes to get a string representation\n * of the chat message history, based on the message content and role.\n */\nexport function getBufferString(messages, humanPrefix = \"Human\", aiPrefix = \"AI\") {\n    const string_messages = [];\n    for (const m of messages) {\n        let role;\n        if (m._getType() === \"human\") {\n            role = humanPrefix;\n        }\n        else if (m._getType() === \"ai\") {\n            role = aiPrefix;\n        }\n        else if (m._getType() === \"system\") {\n            role = \"System\";\n        }\n        else if (m._getType() === \"function\") {\n            role = \"Function\";\n        }\n        else if (m._getType() === \"tool\") {\n            role = \"Tool\";\n        }\n        else if (m._getType() === \"generic\") {\n            role = m.role;\n        }\n        else {\n            throw new Error(`Got unsupported message type: ${m._getType()}`);\n        }\n        const nameStr = m.name ? `${m.name}, ` : \"\";\n        const readableContent = typeof m.content === \"string\"\n            ? m.content\n            : JSON.stringify(m.content, null, 2);\n        string_messages.push(`${role}: ${nameStr}${readableContent}`);\n    }\n    return string_messages.join(\"\\n\");\n}\n/**\n * Maps messages from an older format (V1) to the current `StoredMessage`\n * format. If the message is already in the `StoredMessage` format, it is\n * returned as is. Otherwise, it transforms the V1 message into a\n * `StoredMessage`. This function is important for maintaining\n * compatibility with older message formats.\n */\nfunction mapV1MessageToStoredMessage(message) {\n    // TODO: Remove this mapper when we deprecate the old message format.\n    if (message.data !== undefined) {\n        return message;\n    }\n    else {\n        const v1Message = message;\n        return {\n            type: v1Message.type,\n            data: {\n                content: v1Message.text,\n                role: v1Message.role,\n                name: undefined,\n                tool_call_id: undefined,\n            },\n        };\n    }\n}\nexport function mapStoredMessageToChatMessage(message) {\n    const storedMessage = mapV1MessageToStoredMessage(message);\n    switch (storedMessage.type) {\n        case \"human\":\n            return new HumanMessage(storedMessage.data);\n        case \"ai\":\n            return new AIMessage(storedMessage.data);\n        case \"system\":\n            return new SystemMessage(storedMessage.data);\n        case \"function\":\n            if (storedMessage.data.name === undefined) {\n                throw new Error(\"Name must be defined for function messages\");\n            }\n            return new FunctionMessage(storedMessage.data);\n        case \"tool\":\n            if (storedMessage.data.tool_call_id === undefined) {\n                throw new Error(\"Tool call ID must be defined for tool messages\");\n            }\n            return new ToolMessage(storedMessage.data);\n        case \"generic\": {\n            if (storedMessage.data.role === undefined) {\n                throw new Error(\"Role must be defined for chat messages\");\n            }\n            return new ChatMessage(storedMessage.data);\n        }\n        default:\n            throw new Error(`Got unexpected type: ${storedMessage.type}`);\n    }\n}\n/**\n * Transforms an array of `StoredMessage` instances into an array of\n * `BaseMessage` instances. It uses the `mapV1MessageToStoredMessage`\n * function to ensure all messages are in the `StoredMessage` format, then\n * creates new instances of the appropriate `BaseMessage` subclass based\n * on the type of each message. This function is used to prepare stored\n * messages for use in a chat context.\n */\nexport function mapStoredMessagesToChatMessages(messages) {\n    return messages.map(mapStoredMessageToChatMessage);\n}\n/**\n * Transforms an array of `BaseMessage` instances into an array of\n * `StoredMessage` instances. It does this by calling the `toDict` method\n * on each `BaseMessage`, which returns a `StoredMessage`. This function\n * is used to prepare chat messages for storage.\n */\nexport function mapChatMessagesToStoredMessages(messages) {\n    return messages.map((message) => message.toDict());\n}\nexport function convertToChunk(message) {\n    const type = message._getType();\n    if (type === \"human\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new HumanMessageChunk({ ...message });\n    }\n    else if (type === \"ai\") {\n        let aiChunkFields = {\n            ...message,\n        };\n        if (\"tool_calls\" in aiChunkFields) {\n            aiChunkFields = {\n                ...aiChunkFields,\n                tool_call_chunks: aiChunkFields.tool_calls?.map((tc) => ({\n                    ...tc,\n                    type: \"tool_call_chunk\",\n                    index: undefined,\n                    args: JSON.stringify(tc.args),\n                })),\n            };\n        }\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new AIMessageChunk({ ...aiChunkFields });\n    }\n    else if (type === \"system\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new SystemMessageChunk({ ...message });\n    }\n    else if (type === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new FunctionMessageChunk({ ...message });\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    }\n    else if (ChatMessage.isInstance(message)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new ChatMessageChunk({ ...message });\n    }\n    else {\n        throw new Error(\"Unknown message type.\");\n    }\n}\n","import { Client } from \"langsmith\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\nlet client;\nexport const getDefaultLangChainClientSingleton = () => {\n    if (client === undefined) {\n        const clientParams = getEnvironmentVariable(\"LANGCHAIN_CALLBACKS_BACKGROUND\") === \"false\"\n            ? {\n                // LangSmith has its own backgrounding system\n                blockOnRootRunFinalization: true,\n            }\n            : {};\n        client = new Client(clientParams);\n    }\n    return client;\n};\nexport const setDefaultLangChainClientSingleton = (newClient) => {\n    client = newClient;\n};\n","import { getDefaultProjectName, } from \"langsmith\";\nimport { RunTree } from \"langsmith/run_trees\";\nimport { getCurrentRunTree } from \"langsmith/singletons/traceable\";\nimport { BaseTracer } from \"./base.js\";\nimport { getDefaultLangChainClientSingleton } from \"../singletons/tracer.js\";\nexport class LangChainTracer extends BaseTracer {\n    constructor(fields = {}) {\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"langchain_tracer\"\n        });\n        Object.defineProperty(this, \"projectName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"exampleId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"replicas\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"usesRunTreeMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        const { exampleId, projectName, client, replicas } = fields;\n        this.projectName = projectName ?? getDefaultProjectName();\n        this.replicas = replicas;\n        this.exampleId = exampleId;\n        this.client = client ?? getDefaultLangChainClientSingleton();\n        const traceableTree = LangChainTracer.getTraceableRunTree();\n        if (traceableTree) {\n            this.updateFromRunTree(traceableTree);\n        }\n    }\n    async persistRun(_run) { }\n    async onRunCreate(run) {\n        const runTree = this.getRunTreeWithTracingConfig(run.id);\n        await runTree?.postRun();\n    }\n    async onRunUpdate(run) {\n        const runTree = this.getRunTreeWithTracingConfig(run.id);\n        await runTree?.patchRun();\n    }\n    getRun(id) {\n        return this.runTreeMap.get(id);\n    }\n    updateFromRunTree(runTree) {\n        let rootRun = runTree;\n        const visited = new Set();\n        while (rootRun.parent_run) {\n            if (visited.has(rootRun.id))\n                break;\n            visited.add(rootRun.id);\n            if (!rootRun.parent_run)\n                break;\n            rootRun = rootRun.parent_run;\n        }\n        visited.clear();\n        const queue = [rootRun];\n        while (queue.length > 0) {\n            const current = queue.shift();\n            if (!current || visited.has(current.id))\n                continue;\n            visited.add(current.id);\n            this.runTreeMap.set(current.id, current);\n            if (current.child_runs) {\n                queue.push(...current.child_runs);\n            }\n        }\n        this.client = runTree.client ?? this.client;\n        this.replicas = runTree.replicas ?? this.replicas;\n        this.projectName = runTree.project_name ?? this.projectName;\n        this.exampleId = runTree.reference_example_id ?? this.exampleId;\n    }\n    getRunTreeWithTracingConfig(id) {\n        const runTree = this.runTreeMap.get(id);\n        if (!runTree)\n            return undefined;\n        return new RunTree({\n            ...runTree,\n            client: this.client,\n            project_name: this.projectName,\n            replicas: this.replicas,\n            reference_example_id: this.exampleId,\n            tracingEnabled: true,\n        });\n    }\n    static getTraceableRunTree() {\n        try {\n            return (\n            // The type cast here provides forward compatibility. Old versions of LangSmith will just\n            // ignore the permitAbsentRunTree arg.\n            getCurrentRunTree(true));\n        }\n        catch {\n            return undefined;\n        }\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport PQueueMod from \"p-queue\";\nimport { getGlobalAsyncLocalStorageInstance } from \"./async_local_storage/globals.js\";\nimport { getDefaultLangChainClientSingleton } from \"./tracer.js\";\nlet queue;\n/**\n * Creates a queue using the p-queue library. The queue is configured to\n * auto-start and has a concurrency of 1, meaning it will process tasks\n * one at a time.\n */\nfunction createQueue() {\n    const PQueue = \"default\" in PQueueMod ? PQueueMod.default : PQueueMod;\n    return new PQueue({\n        autoStart: true,\n        concurrency: 1,\n    });\n}\nexport function getQueue() {\n    if (typeof queue === \"undefined\") {\n        queue = createQueue();\n    }\n    return queue;\n}\n/**\n * Consume a promise, either adding it to the queue or waiting for it to resolve\n * @param promiseFn Promise to consume\n * @param wait Whether to wait for the promise to resolve or resolve immediately\n */\nexport async function consumeCallback(promiseFn, wait) {\n    if (wait === true) {\n        // Clear config since callbacks are not part of the root run\n        // Avoid using global singleton due to circuluar dependency issues\n        const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n        if (asyncLocalStorageInstance !== undefined) {\n            await asyncLocalStorageInstance.run(undefined, async () => promiseFn());\n        }\n        else {\n            await promiseFn();\n        }\n    }\n    else {\n        queue = getQueue();\n        void queue.add(async () => {\n            const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n            if (asyncLocalStorageInstance !== undefined) {\n                await asyncLocalStorageInstance.run(undefined, async () => promiseFn());\n            }\n            else {\n                await promiseFn();\n            }\n        });\n    }\n}\n/**\n * Waits for all promises in the queue to resolve. If the queue is\n * undefined, it immediately resolves a promise.\n */\nexport async function awaitAllCallbacks() {\n    const defaultClient = getDefaultLangChainClientSingleton();\n    await Promise.allSettled([\n        typeof queue !== \"undefined\" ? queue.onIdle() : Promise.resolve(),\n        defaultClient.awaitPendingTraceBatches(),\n    ]);\n}\n","export const TRACING_ALS_KEY = Symbol.for(\"ls:tracing_async_local_storage\");\nexport const _CONTEXT_VARIABLES_KEY = Symbol.for(\"lc:context_variables\");\nexport const setGlobalAsyncLocalStorageInstance = (instance) => {\n    globalThis[TRACING_ALS_KEY] = instance;\n};\nexport const getGlobalAsyncLocalStorageInstance = () => {\n    return globalThis[TRACING_ALS_KEY];\n};\n","import { getEnvironmentVariable } from \"./env.js\";\nexport const isTracingEnabled = (tracingEnabled) => {\n    if (tracingEnabled !== undefined) {\n        return tracingEnabled;\n    }\n    const envVars = [\n        \"LANGSMITH_TRACING_V2\",\n        \"LANGCHAIN_TRACING_V2\",\n        \"LANGSMITH_TRACING\",\n        \"LANGCHAIN_TRACING\",\n    ];\n    return !!envVars.find((envVar) => getEnvironmentVariable(envVar) === \"true\");\n};\n","import { isRunTree, RunTree } from \"langsmith/run_trees\";\nimport { _CONTEXT_VARIABLES_KEY, getGlobalAsyncLocalStorageInstance, } from \"./globals.js\";\n/**\n * Set a context variable. Context variables are scoped to any\n * child runnables called by the current runnable, or globally if set outside\n * of any runnable.\n *\n * @remarks\n * This function is only supported in environments that support AsyncLocalStorage,\n * including Node.js, Deno, and Cloudflare Workers.\n *\n * @example\n * ```ts\n * import { RunnableLambda } from \"@langchain/core/runnables\";\n * import {\n *   getContextVariable,\n *   setContextVariable\n * } from \"@langchain/core/context\";\n *\n * const nested = RunnableLambda.from(() => {\n *   // \"bar\" because it was set by a parent\n *   console.log(getContextVariable(\"foo\"));\n *\n *   // Override to \"baz\", but only for child runnables\n *   setContextVariable(\"foo\", \"baz\");\n *\n *   // Now \"baz\", but only for child runnables\n *   return getContextVariable(\"foo\");\n * });\n *\n * const runnable = RunnableLambda.from(async () => {\n *   // Set a context variable named \"foo\"\n *   setContextVariable(\"foo\", \"bar\");\n *\n *   const res = await nested.invoke({});\n *\n *   // Still \"bar\" since child changes do not affect parents\n *   console.log(getContextVariable(\"foo\"));\n *\n *   return res;\n * });\n *\n * // undefined, because context variable has not been set yet\n * console.log(getContextVariable(\"foo\"));\n *\n * // Final return value is \"baz\"\n * const result = await runnable.invoke({});\n * ```\n *\n * @param name The name of the context variable.\n * @param value The value to set.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function setContextVariable(name, value) {\n    // Avoid using global singleton due to circuluar dependency issues\n    const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n    if (asyncLocalStorageInstance === undefined) {\n        throw new Error(`Internal error: Global shared async local storage instance has not been initialized.`);\n    }\n    const runTree = asyncLocalStorageInstance.getStore();\n    const contextVars = { ...runTree?.[_CONTEXT_VARIABLES_KEY] };\n    contextVars[name] = value;\n    let newValue = {};\n    if (isRunTree(runTree)) {\n        newValue = new RunTree(runTree);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    newValue[_CONTEXT_VARIABLES_KEY] = contextVars;\n    asyncLocalStorageInstance.enterWith(newValue);\n}\n/**\n * Get the value of a previously set context variable. Context variables\n * are scoped to any child runnables called by the current runnable,\n * or globally if set outside of any runnable.\n *\n * @remarks\n * This function is only supported in environments that support AsyncLocalStorage,\n * including Node.js, Deno, and Cloudflare Workers.\n *\n * @example\n * ```ts\n * import { RunnableLambda } from \"@langchain/core/runnables\";\n * import {\n *   getContextVariable,\n *   setContextVariable\n * } from \"@langchain/core/context\";\n *\n * const nested = RunnableLambda.from(() => {\n *   // \"bar\" because it was set by a parent\n *   console.log(getContextVariable(\"foo\"));\n *\n *   // Override to \"baz\", but only for child runnables\n *   setContextVariable(\"foo\", \"baz\");\n *\n *   // Now \"baz\", but only for child runnables\n *   return getContextVariable(\"foo\");\n * });\n *\n * const runnable = RunnableLambda.from(async () => {\n *   // Set a context variable named \"foo\"\n *   setContextVariable(\"foo\", \"bar\");\n *\n *   const res = await nested.invoke({});\n *\n *   // Still \"bar\" since child changes do not affect parents\n *   console.log(getContextVariable(\"foo\"));\n *\n *   return res;\n * });\n *\n * // undefined, because context variable has not been set yet\n * console.log(getContextVariable(\"foo\"));\n *\n * // Final return value is \"baz\"\n * const result = await runnable.invoke({});\n * ```\n *\n * @param name The name of the context variable.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getContextVariable(name) {\n    // Avoid using global singleton due to circuluar dependency issues\n    const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n    if (asyncLocalStorageInstance === undefined) {\n        return undefined;\n    }\n    const runTree = asyncLocalStorageInstance.getStore();\n    return runTree?.[_CONTEXT_VARIABLES_KEY]?.[name];\n}\nconst LC_CONFIGURE_HOOKS_KEY = Symbol(\"lc:configure_hooks\");\nexport const _getConfigureHooks = () => getContextVariable(LC_CONFIGURE_HOOKS_KEY) || [];\n/**\n * Register a callback configure hook to automatically add callback handlers to all runs.\n *\n * There are two ways to use this:\n *\n * 1. Using a context variable:\n *    - Set `contextVar` to specify the variable name\n *    - Use `setContextVariable()` to store your handler instance\n *\n * 2. Using an environment variable:\n *    - Set both `envVar` and `handlerClass`\n *    - The handler will be instantiated when the env var is set to \"true\".\n *\n * @example\n * ```typescript\n * // Method 1: Using context variable\n * import {\n *   registerConfigureHook,\n *   setContextVariable\n * } from \"@langchain/core/context\";\n *\n * const tracer = new MyCallbackHandler();\n * registerConfigureHook({\n *   contextVar: \"my_tracer\",\n * });\n * setContextVariable(\"my_tracer\", tracer);\n *\n * // ...run code here\n *\n * // Method 2: Using environment variable\n * registerConfigureHook({\n *   handlerClass: MyCallbackHandler,\n *   envVar: \"MY_TRACER_ENABLED\",\n * });\n * process.env.MY_TRACER_ENABLED = \"true\";\n *\n * // ...run code here\n * ```\n *\n * @param config Configuration object for the hook\n * @param config.contextVar Name of the context variable containing the handler instance\n * @param config.inheritable Whether child runs should inherit this handler\n * @param config.handlerClass Optional callback handler class (required if using envVar)\n * @param config.envVar Optional environment variable name to control handler activation\n */\nexport const registerConfigureHook = (config) => {\n    if (config.envVar && !config.handlerClass) {\n        throw new Error(\"If envVar is set, handlerClass must also be set to a non-None value.\");\n    }\n    setContextVariable(LC_CONFIGURE_HOOKS_KEY, [..._getConfigureHooks(), config]);\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { RunTree } from \"langsmith\";\nimport { getGlobalAsyncLocalStorageInstance, setGlobalAsyncLocalStorageInstance, _CONTEXT_VARIABLES_KEY, } from \"./globals.js\";\nimport { CallbackManager } from \"../../callbacks/manager.js\";\nexport class MockAsyncLocalStorage {\n    getStore() {\n        return undefined;\n    }\n    run(_store, callback) {\n        return callback();\n    }\n    enterWith(_store) {\n        return undefined;\n    }\n}\nconst mockAsyncLocalStorage = new MockAsyncLocalStorage();\nconst LC_CHILD_KEY = Symbol.for(\"lc:child_config\");\nclass AsyncLocalStorageProvider {\n    getInstance() {\n        return getGlobalAsyncLocalStorageInstance() ?? mockAsyncLocalStorage;\n    }\n    getRunnableConfig() {\n        const storage = this.getInstance();\n        // this has the runnable config\n        // which means that we should also have an instance of a LangChainTracer\n        // with the run map prepopulated\n        return storage.getStore()?.extra?.[LC_CHILD_KEY];\n    }\n    runWithConfig(config, callback, avoidCreatingRootRunTree) {\n        const callbackManager = CallbackManager._configureSync(config?.callbacks, undefined, config?.tags, undefined, config?.metadata);\n        const storage = this.getInstance();\n        const previousValue = storage.getStore();\n        const parentRunId = callbackManager?.getParentRunId();\n        const langChainTracer = callbackManager?.handlers?.find((handler) => handler?.name === \"langchain_tracer\");\n        let runTree;\n        if (langChainTracer && parentRunId) {\n            runTree = langChainTracer.getRunTreeWithTracingConfig(parentRunId);\n        }\n        else if (!avoidCreatingRootRunTree) {\n            runTree = new RunTree({\n                name: \"<runnable_lambda>\",\n                tracingEnabled: false,\n            });\n        }\n        if (runTree) {\n            runTree.extra = { ...runTree.extra, [LC_CHILD_KEY]: config };\n        }\n        if (previousValue !== undefined &&\n            previousValue[_CONTEXT_VARIABLES_KEY] !== undefined) {\n            if (runTree === undefined) {\n                runTree = {};\n            }\n            runTree[_CONTEXT_VARIABLES_KEY] =\n                previousValue[_CONTEXT_VARIABLES_KEY];\n        }\n        return storage.run(runTree, callback);\n    }\n    initializeGlobalInstance(instance) {\n        if (getGlobalAsyncLocalStorageInstance() === undefined) {\n            setGlobalAsyncLocalStorageInstance(instance);\n        }\n    }\n}\nconst AsyncLocalStorageProviderSingleton = new AsyncLocalStorageProvider();\nexport { AsyncLocalStorageProviderSingleton };\n","import pRetry from \"p-retry\";\nimport PQueueMod from \"p-queue\";\nconst STATUS_NO_RETRY = [\n    400, // Bad Request\n    401, // Unauthorized\n    402, // Payment Required\n    403, // Forbidden\n    404, // Not Found\n    405, // Method Not Allowed\n    406, // Not Acceptable\n    407, // Proxy Authentication Required\n    409, // Conflict\n];\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst defaultFailedAttemptHandler = (error) => {\n    if (error.message.startsWith(\"Cancel\") ||\n        error.message.startsWith(\"AbortError\") ||\n        error.name === \"AbortError\") {\n        throw error;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (error?.code === \"ECONNABORTED\") {\n        throw error;\n    }\n    const status = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    error?.response?.status ?? error?.status;\n    if (status && STATUS_NO_RETRY.includes(+status)) {\n        throw error;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (error?.error?.code === \"insufficient_quota\") {\n        const err = new Error(error?.message);\n        err.name = \"InsufficientQuotaError\";\n        throw err;\n    }\n};\n/**\n * A class that can be used to make async calls with concurrency and retry logic.\n *\n * This is useful for making calls to any kind of \"expensive\" external resource,\n * be it because it's rate-limited, subject to network issues, etc.\n *\n * Concurrent calls are limited by the `maxConcurrency` parameter, which defaults\n * to `Infinity`. This means that by default, all calls will be made in parallel.\n *\n * Retries are limited by the `maxRetries` parameter, which defaults to 6. This\n * means that by default, each call will be retried up to 6 times, with an\n * exponential backoff between each attempt.\n */\nexport class AsyncCaller {\n    constructor(params) {\n        Object.defineProperty(this, \"maxConcurrency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxRetries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"onFailedAttempt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"queue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxConcurrency = params.maxConcurrency ?? Infinity;\n        this.maxRetries = params.maxRetries ?? 6;\n        this.onFailedAttempt =\n            params.onFailedAttempt ?? defaultFailedAttemptHandler;\n        const PQueue = (\"default\" in PQueueMod ? PQueueMod.default : PQueueMod);\n        this.queue = new PQueue({ concurrency: this.maxConcurrency });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call(callable, ...args) {\n        return this.queue.add(() => pRetry(() => callable(...args).catch((error) => {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (error instanceof Error) {\n                throw error;\n            }\n            else {\n                throw new Error(error);\n            }\n        }), {\n            onFailedAttempt: this.onFailedAttempt,\n            retries: this.maxRetries,\n            randomize: true,\n            // If needed we can change some of the defaults here,\n            // but they're quite sensible.\n        }), { throwOnTimeout: true });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callWithOptions(options, callable, ...args) {\n        // Note this doesn't cancel the underlying request,\n        // when available prefer to use the signal option of the underlying call\n        if (options.signal) {\n            return Promise.race([\n                this.call(callable, ...args),\n                new Promise((_, reject) => {\n                    options.signal?.addEventListener(\"abort\", () => {\n                        reject(new Error(\"AbortError\"));\n                    });\n                }),\n            ]);\n        }\n        return this.call(callable, ...args);\n    }\n    fetch(...args) {\n        return this.call(() => fetch(...args).then((res) => (res.ok ? res : Promise.reject(res))));\n    }\n}\n","import { v4 as uuidv4, validate as isUuid } from \"uuid\";\nimport { isRunnableInterface } from \"./utils.js\";\nimport { drawMermaid, drawMermaidPng } from \"./graph_mermaid.js\";\nimport { toJsonSchema } from \"../utils/json_schema.js\";\nfunction nodeDataStr(id, data) {\n    if (id !== undefined && !isUuid(id)) {\n        return id;\n    }\n    else if (isRunnableInterface(data)) {\n        try {\n            let dataStr = data.getName();\n            dataStr = dataStr.startsWith(\"Runnable\")\n                ? dataStr.slice(\"Runnable\".length)\n                : dataStr;\n            return dataStr;\n        }\n        catch (error) {\n            return data.getName();\n        }\n    }\n    else {\n        return data.name ?? \"UnknownSchema\";\n    }\n}\nfunction nodeDataJson(node) {\n    // if node.data implements Runnable\n    if (isRunnableInterface(node.data)) {\n        return {\n            type: \"runnable\",\n            data: {\n                id: node.data.lc_id,\n                name: node.data.getName(),\n            },\n        };\n    }\n    else {\n        return {\n            type: \"schema\",\n            data: { ...toJsonSchema(node.data.schema), title: node.data.name },\n        };\n    }\n}\nexport class Graph {\n    constructor(params) {\n        Object.defineProperty(this, \"nodes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"edges\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.nodes = params?.nodes ?? this.nodes;\n        this.edges = params?.edges ?? this.edges;\n    }\n    // Convert the graph to a JSON-serializable format.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    toJSON() {\n        const stableNodeIds = {};\n        Object.values(this.nodes).forEach((node, i) => {\n            stableNodeIds[node.id] = isUuid(node.id) ? i : node.id;\n        });\n        return {\n            nodes: Object.values(this.nodes).map((node) => ({\n                id: stableNodeIds[node.id],\n                ...nodeDataJson(node),\n            })),\n            edges: this.edges.map((edge) => {\n                const item = {\n                    source: stableNodeIds[edge.source],\n                    target: stableNodeIds[edge.target],\n                };\n                if (typeof edge.data !== \"undefined\") {\n                    item.data = edge.data;\n                }\n                if (typeof edge.conditional !== \"undefined\") {\n                    item.conditional = edge.conditional;\n                }\n                return item;\n            }),\n        };\n    }\n    addNode(data, id, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    metadata) {\n        if (id !== undefined && this.nodes[id] !== undefined) {\n            throw new Error(`Node with id ${id} already exists`);\n        }\n        const nodeId = id ?? uuidv4();\n        const node = {\n            id: nodeId,\n            data,\n            name: nodeDataStr(id, data),\n            metadata,\n        };\n        this.nodes[nodeId] = node;\n        return node;\n    }\n    removeNode(node) {\n        // Remove the node from the nodes map\n        delete this.nodes[node.id];\n        // Filter out edges connected to the node\n        this.edges = this.edges.filter((edge) => edge.source !== node.id && edge.target !== node.id);\n    }\n    addEdge(source, target, data, conditional) {\n        if (this.nodes[source.id] === undefined) {\n            throw new Error(`Source node ${source.id} not in graph`);\n        }\n        if (this.nodes[target.id] === undefined) {\n            throw new Error(`Target node ${target.id} not in graph`);\n        }\n        const edge = {\n            source: source.id,\n            target: target.id,\n            data,\n            conditional,\n        };\n        this.edges.push(edge);\n        return edge;\n    }\n    firstNode() {\n        return _firstNode(this);\n    }\n    lastNode() {\n        return _lastNode(this);\n    }\n    /**\n     * Add all nodes and edges from another graph.\n     * Note this doesn't check for duplicates, nor does it connect the graphs.\n     */\n    extend(graph, prefix = \"\") {\n        let finalPrefix = prefix;\n        const nodeIds = Object.values(graph.nodes).map((node) => node.id);\n        if (nodeIds.every(isUuid)) {\n            finalPrefix = \"\";\n        }\n        const prefixed = (id) => {\n            return finalPrefix ? `${finalPrefix}:${id}` : id;\n        };\n        Object.entries(graph.nodes).forEach(([key, value]) => {\n            this.nodes[prefixed(key)] = { ...value, id: prefixed(key) };\n        });\n        const newEdges = graph.edges.map((edge) => {\n            return {\n                ...edge,\n                source: prefixed(edge.source),\n                target: prefixed(edge.target),\n            };\n        });\n        // Add all edges from the other graph\n        this.edges = [...this.edges, ...newEdges];\n        const first = graph.firstNode();\n        const last = graph.lastNode();\n        return [\n            first ? { id: prefixed(first.id), data: first.data } : undefined,\n            last ? { id: prefixed(last.id), data: last.data } : undefined,\n        ];\n    }\n    trimFirstNode() {\n        const firstNode = this.firstNode();\n        if (firstNode && _firstNode(this, [firstNode.id])) {\n            this.removeNode(firstNode);\n        }\n    }\n    trimLastNode() {\n        const lastNode = this.lastNode();\n        if (lastNode && _lastNode(this, [lastNode.id])) {\n            this.removeNode(lastNode);\n        }\n    }\n    /**\n     * Return a new graph with all nodes re-identified,\n     * using their unique, readable names where possible.\n     */\n    reid() {\n        const nodeLabels = Object.fromEntries(Object.values(this.nodes).map((node) => [node.id, node.name]));\n        const nodeLabelCounts = new Map();\n        Object.values(nodeLabels).forEach((label) => {\n            nodeLabelCounts.set(label, (nodeLabelCounts.get(label) || 0) + 1);\n        });\n        const getNodeId = (nodeId) => {\n            const label = nodeLabels[nodeId];\n            if (isUuid(nodeId) && nodeLabelCounts.get(label) === 1) {\n                return label;\n            }\n            else {\n                return nodeId;\n            }\n        };\n        return new Graph({\n            nodes: Object.fromEntries(Object.entries(this.nodes).map(([id, node]) => [\n                getNodeId(id),\n                { ...node, id: getNodeId(id) },\n            ])),\n            edges: this.edges.map((edge) => ({\n                ...edge,\n                source: getNodeId(edge.source),\n                target: getNodeId(edge.target),\n            })),\n        });\n    }\n    drawMermaid(params) {\n        const { withStyles, curveStyle, nodeColors = {\n            default: \"fill:#f2f0ff,line-height:1.2\",\n            first: \"fill-opacity:0\",\n            last: \"fill:#bfb6fc\",\n        }, wrapLabelNWords, } = params ?? {};\n        const graph = this.reid();\n        const firstNode = graph.firstNode();\n        const lastNode = graph.lastNode();\n        return drawMermaid(graph.nodes, graph.edges, {\n            firstNode: firstNode?.id,\n            lastNode: lastNode?.id,\n            withStyles,\n            curveStyle,\n            nodeColors,\n            wrapLabelNWords,\n        });\n    }\n    async drawMermaidPng(params) {\n        const mermaidSyntax = this.drawMermaid(params);\n        return drawMermaidPng(mermaidSyntax, {\n            backgroundColor: params?.backgroundColor,\n        });\n    }\n}\n/**\n * Find the single node that is not a target of any edge.\n * Exclude nodes/sources with ids in the exclude list.\n * If there is no such node, or there are multiple, return undefined.\n * When drawing the graph, this node would be the origin.\n */\nfunction _firstNode(graph, exclude = []) {\n    const targets = new Set(graph.edges\n        .filter((edge) => !exclude.includes(edge.source))\n        .map((edge) => edge.target));\n    const found = [];\n    for (const node of Object.values(graph.nodes)) {\n        if (!exclude.includes(node.id) && !targets.has(node.id)) {\n            found.push(node);\n        }\n    }\n    return found.length === 1 ? found[0] : undefined;\n}\n/**\n * Find the single node that is not a source of any edge.\n * Exclude nodes/targets with ids in the exclude list.\n * If there is no such node, or there are multiple, return undefined.\n * When drawing the graph, this node would be the destination.\n */\nfunction _lastNode(graph, exclude = []) {\n    const sources = new Set(graph.edges\n        .filter((edge) => !exclude.includes(edge.target))\n        .map((edge) => edge.source));\n    const found = [];\n    for (const node of Object.values(graph.nodes)) {\n        if (!exclude.includes(node.id) && !sources.has(node.id)) {\n            found.push(node);\n        }\n    }\n    return found.length === 1 ? found[0] : undefined;\n}\n","import { toJSONSchema } from \"zod/v4/core\";\nimport { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { dereference } from \"@cfworker/json-schema\";\nimport { isZodSchemaV3, isZodSchemaV4, interopZodObjectStrict, isZodObjectV4, interopZodTransformInputSchema, } from \"./types/zod.js\";\nexport { deepCompareStrict, Validator } from \"@cfworker/json-schema\";\n/**\n * Converts a Zod schema or JSON schema to a JSON schema.\n * @param schema - The schema to convert.\n * @returns The converted schema.\n */\nexport function toJsonSchema(schema) {\n    if (isZodSchemaV4(schema)) {\n        const inputSchema = interopZodTransformInputSchema(schema, true);\n        if (isZodObjectV4(inputSchema)) {\n            const strictSchema = interopZodObjectStrict(inputSchema, true);\n            return toJSONSchema(strictSchema);\n        }\n        else {\n            return toJSONSchema(schema);\n        }\n    }\n    if (isZodSchemaV3(schema)) {\n        return zodToJsonSchema(schema);\n    }\n    return schema;\n}\n/**\n * Validates if a JSON schema validates only strings. May return false negatives in some edge cases\n * (like recursive or unresolvable refs).\n *\n * @param schema - The schema to validate.\n * @returns `true` if the schema validates only strings, `false` otherwise.\n */\nexport function validatesOnlyStrings(schema) {\n    // Null, undefined, or empty schema\n    if (!schema ||\n        typeof schema !== \"object\" ||\n        Object.keys(schema).length === 0 ||\n        Array.isArray(schema)) {\n        return false; // Validates anything, not just strings\n    }\n    // Explicit type constraint\n    if (\"type\" in schema) {\n        if (typeof schema.type === \"string\") {\n            return schema.type === \"string\";\n        }\n        if (Array.isArray(schema.type)) {\n            // not sure why someone would do `\"type\": [\"string\"]` or especially `\"type\": [\"string\",\n            // \"string\", \"string\", ...]` but we're not here to judge\n            return schema.type.every((t) => t === \"string\");\n        }\n        return false; // Invalid or non-string type\n    }\n    // Enum with only string values\n    if (\"enum\" in schema) {\n        return (Array.isArray(schema.enum) &&\n            schema.enum.length > 0 &&\n            schema.enum.every((val) => typeof val === \"string\"));\n    }\n    // String constant\n    if (\"const\" in schema) {\n        return typeof schema.const === \"string\";\n    }\n    // Schema combinations\n    if (\"allOf\" in schema && Array.isArray(schema.allOf)) {\n        // If any subschema validates only strings, then the overall schema validates only strings\n        return schema.allOf.some((subschema) => validatesOnlyStrings(subschema));\n    }\n    if ((\"anyOf\" in schema && Array.isArray(schema.anyOf)) ||\n        (\"oneOf\" in schema && Array.isArray(schema.oneOf))) {\n        const subschemas = (\"anyOf\" in schema ? schema.anyOf : schema.oneOf);\n        // All subschemas must validate only strings\n        return (subschemas.length > 0 &&\n            subschemas.every((subschema) => validatesOnlyStrings(subschema)));\n    }\n    // We're not going to try on this one, it's too complex - we just assume if it has a \"not\" key and hasn't matched one of the above checks, it's not a string schema.\n    if (\"not\" in schema) {\n        return false; // The not case can validate non-strings\n    }\n    if (\"$ref\" in schema && typeof schema.$ref === \"string\") {\n        const ref = schema.$ref;\n        const resolved = dereference(schema);\n        if (resolved[ref]) {\n            return validatesOnlyStrings(resolved[ref]);\n        }\n        return false;\n    }\n    // ignore recursive refs and other cases where type is omitted for now\n    // ignore other cases for now where type is omitted\n    return false;\n}\n","export const ignoreOverride = Symbol(\"Let zodToJsonSchema decide on which parser to use\");\nexport const jsonDescription = (jsonSchema, def) => {\n    if (def.description) {\n        try {\n            return {\n                ...jsonSchema,\n                ...JSON.parse(def.description),\n            };\n        }\n        catch { }\n    }\n    return jsonSchema;\n};\nexport const defaultOptions = {\n    name: undefined,\n    $refStrategy: \"root\",\n    basePath: [\"#\"],\n    effectStrategy: \"input\",\n    pipeStrategy: \"all\",\n    dateStrategy: \"format:date-time\",\n    mapStrategy: \"entries\",\n    removeAdditionalStrategy: \"passthrough\",\n    allowedAdditionalProperties: true,\n    rejectedAdditionalProperties: false,\n    definitionPath: \"definitions\",\n    target: \"jsonSchema7\",\n    strictUnions: false,\n    definitions: {},\n    errorMessages: false,\n    markdownDescription: false,\n    patternStrategy: \"escape\",\n    applyRegexFlags: false,\n    emailStrategy: \"format:email\",\n    base64Strategy: \"contentEncoding:base64\",\n    nameStrategy: \"ref\",\n};\nexport const getDefaultOptions = (options) => (typeof options === \"string\"\n    ? {\n        ...defaultOptions,\n        name: options,\n    }\n    : {\n        ...defaultOptions,\n        ...options,\n    });\n","import { ZodFirstPartyTypeKind } from \"zod\";\nimport { parseAnyDef } from \"./parsers/any.js\";\nimport { parseArrayDef } from \"./parsers/array.js\";\nimport { parseBigintDef } from \"./parsers/bigint.js\";\nimport { parseBooleanDef } from \"./parsers/boolean.js\";\nimport { parseBrandedDef } from \"./parsers/branded.js\";\nimport { parseCatchDef } from \"./parsers/catch.js\";\nimport { parseDateDef } from \"./parsers/date.js\";\nimport { parseDefaultDef } from \"./parsers/default.js\";\nimport { parseEffectsDef } from \"./parsers/effects.js\";\nimport { parseEnumDef } from \"./parsers/enum.js\";\nimport { parseIntersectionDef } from \"./parsers/intersection.js\";\nimport { parseLiteralDef } from \"./parsers/literal.js\";\nimport { parseMapDef } from \"./parsers/map.js\";\nimport { parseNativeEnumDef } from \"./parsers/nativeEnum.js\";\nimport { parseNeverDef } from \"./parsers/never.js\";\nimport { parseNullDef } from \"./parsers/null.js\";\nimport { parseNullableDef } from \"./parsers/nullable.js\";\nimport { parseNumberDef } from \"./parsers/number.js\";\nimport { parseObjectDef } from \"./parsers/object.js\";\nimport { parseOptionalDef } from \"./parsers/optional.js\";\nimport { parsePipelineDef } from \"./parsers/pipeline.js\";\nimport { parsePromiseDef } from \"./parsers/promise.js\";\nimport { parseRecordDef } from \"./parsers/record.js\";\nimport { parseSetDef } from \"./parsers/set.js\";\nimport { parseStringDef } from \"./parsers/string.js\";\nimport { parseTupleDef } from \"./parsers/tuple.js\";\nimport { parseUndefinedDef } from \"./parsers/undefined.js\";\nimport { parseUnionDef } from \"./parsers/union.js\";\nimport { parseUnknownDef } from \"./parsers/unknown.js\";\nimport { parseReadonlyDef } from \"./parsers/readonly.js\";\nexport const selectParser = (def, typeName, refs) => {\n    switch (typeName) {\n        case ZodFirstPartyTypeKind.ZodString:\n            return parseStringDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNumber:\n            return parseNumberDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodObject:\n            return parseObjectDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBigInt:\n            return parseBigintDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBoolean:\n            return parseBooleanDef();\n        case ZodFirstPartyTypeKind.ZodDate:\n            return parseDateDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUndefined:\n            return parseUndefinedDef();\n        case ZodFirstPartyTypeKind.ZodNull:\n            return parseNullDef(refs);\n        case ZodFirstPartyTypeKind.ZodArray:\n            return parseArrayDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUnion:\n        case ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n            return parseUnionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodIntersection:\n            return parseIntersectionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodTuple:\n            return parseTupleDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodRecord:\n            return parseRecordDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLiteral:\n            return parseLiteralDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodEnum:\n            return parseEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNativeEnum:\n            return parseNativeEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNullable:\n            return parseNullableDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodOptional:\n            return parseOptionalDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodMap:\n            return parseMapDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodSet:\n            return parseSetDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLazy:\n            return () => def.getter()._def;\n        case ZodFirstPartyTypeKind.ZodPromise:\n            return parsePromiseDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNaN:\n        case ZodFirstPartyTypeKind.ZodNever:\n            return parseNeverDef();\n        case ZodFirstPartyTypeKind.ZodEffects:\n            return parseEffectsDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodAny:\n            return parseAnyDef();\n        case ZodFirstPartyTypeKind.ZodUnknown:\n            return parseUnknownDef();\n        case ZodFirstPartyTypeKind.ZodDefault:\n            return parseDefaultDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBranded:\n            return parseBrandedDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodReadonly:\n            return parseReadonlyDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodCatch:\n            return parseCatchDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodPipeline:\n            return parsePipelineDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodFunction:\n        case ZodFirstPartyTypeKind.ZodVoid:\n        case ZodFirstPartyTypeKind.ZodSymbol:\n            return undefined;\n        default:\n            /* c8 ignore next */\n            return ((_) => undefined)(typeName);\n    }\n};\n","import { ZodFirstPartyTypeKind } from \"zod\";\nimport { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseArrayDef(def, refs) {\n    const res = {\n        type: \"array\",\n    };\n    if (def.type?._def &&\n        def.type?._def?.typeName !== ZodFirstPartyTypeKind.ZodAny) {\n        res.items = parseDef(def.type._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"items\"],\n        });\n    }\n    if (def.minLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.minLength.value, def.minLength.message, refs);\n    }\n    if (def.maxLength) {\n        setResponseValueAndErrors(res, \"maxItems\", def.maxLength.value, def.maxLength.message, refs);\n    }\n    if (def.exactLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.exactLength.value, def.exactLength.message, refs);\n        setResponseValueAndErrors(res, \"maxItems\", def.exactLength.value, def.exactLength.message, refs);\n    }\n    return res;\n}\n","import { ZodFirstPartyTypeKind, } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nimport { parseStringDef } from \"./string.js\";\nimport { parseBrandedDef } from \"./branded.js\";\nexport function parseRecordDef(def, refs) {\n    if (refs.target === \"openAi\") {\n        console.warn(\"Warning: OpenAI may not support records in schemas! Try an array of key-value pairs instead.\");\n    }\n    if (refs.target === \"openApi3\" &&\n        def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: \"object\",\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => ({\n                ...acc,\n                [key]: parseDef(def.valueType._def, {\n                    ...refs,\n                    currentPath: [...refs.currentPath, \"properties\", key],\n                }) ?? {},\n            }), {}),\n            additionalProperties: refs.rejectedAdditionalProperties,\n        };\n    }\n    const schema = {\n        type: \"object\",\n        additionalProperties: parseDef(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        }) ?? refs.allowedAdditionalProperties,\n    };\n    if (refs.target === \"openApi3\") {\n        return schema;\n    }\n    if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.checks?.length) {\n        const { type, ...keyType } = parseStringDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            ...schema,\n            propertyNames: {\n                enum: def.keyType._def.values,\n            },\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodBranded &&\n        def.keyType._def.type._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.type._def.checks?.length) {\n        const { type, ...keyType } = parseBrandedDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    return schema;\n}\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nlet emojiRegex = undefined;\n/**\n * Generated from the regular expressions found here as of 2024-05-22:\n * https://github.com/colinhacks/zod/blob/master/src/types.ts.\n *\n * Expressions with /i flag have been changed accordingly.\n */\nexport const zodPatterns = {\n    /**\n     * `c` was changed to `[cC]` to replicate /i flag\n     */\n    cuid: /^[cC][^\\s-]{8,}$/,\n    cuid2: /^[0-9a-z]+$/,\n    ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n    /**\n     * `a-z` was added to replicate /i flag\n     */\n    email: /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n    /**\n     * Constructed a valid Unicode RegExp\n     *\n     * Lazily instantiate since this type of regex isn't supported\n     * in all envs (e.g. React Native).\n     *\n     * See:\n     * https://github.com/colinhacks/zod/issues/2433\n     * Fix in Zod:\n     * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n     */\n    emoji: () => {\n        if (emojiRegex === undefined) {\n            emojiRegex = RegExp(\"^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$\", \"u\");\n        }\n        return emojiRegex;\n    },\n    /**\n     * Unused\n     */\n    uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n    /**\n     * Unused\n     */\n    ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n    ipv4Cidr: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/,\n    /**\n     * Unused\n     */\n    ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n    ipv6Cidr: /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,\n    base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n    base64url: /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,\n    nanoid: /^[a-zA-Z0-9_-]{21}$/,\n    jwt: /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/,\n};\nexport function parseStringDef(def, refs) {\n    const res = {\n        type: \"string\",\n    };\n    if (def.checks) {\n        for (const check of def.checks) {\n            switch (check.kind) {\n                case \"min\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"max\":\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"email\":\n                    switch (refs.emailStrategy) {\n                        case \"format:email\":\n                            addFormat(res, \"email\", check.message, refs);\n                            break;\n                        case \"format:idn-email\":\n                            addFormat(res, \"idn-email\", check.message, refs);\n                            break;\n                        case \"pattern:zod\":\n                            addPattern(res, zodPatterns.email, check.message, refs);\n                            break;\n                    }\n                    break;\n                case \"url\":\n                    addFormat(res, \"uri\", check.message, refs);\n                    break;\n                case \"uuid\":\n                    addFormat(res, \"uuid\", check.message, refs);\n                    break;\n                case \"regex\":\n                    addPattern(res, check.regex, check.message, refs);\n                    break;\n                case \"cuid\":\n                    addPattern(res, zodPatterns.cuid, check.message, refs);\n                    break;\n                case \"cuid2\":\n                    addPattern(res, zodPatterns.cuid2, check.message, refs);\n                    break;\n                case \"startsWith\":\n                    addPattern(res, RegExp(`^${escapeLiteralCheckValue(check.value, refs)}`), check.message, refs);\n                    break;\n                case \"endsWith\":\n                    addPattern(res, RegExp(`${escapeLiteralCheckValue(check.value, refs)}$`), check.message, refs);\n                    break;\n                case \"datetime\":\n                    addFormat(res, \"date-time\", check.message, refs);\n                    break;\n                case \"date\":\n                    addFormat(res, \"date\", check.message, refs);\n                    break;\n                case \"time\":\n                    addFormat(res, \"time\", check.message, refs);\n                    break;\n                case \"duration\":\n                    addFormat(res, \"duration\", check.message, refs);\n                    break;\n                case \"length\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"includes\": {\n                    addPattern(res, RegExp(escapeLiteralCheckValue(check.value, refs)), check.message, refs);\n                    break;\n                }\n                case \"ip\": {\n                    if (check.version !== \"v6\") {\n                        addFormat(res, \"ipv4\", check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addFormat(res, \"ipv6\", check.message, refs);\n                    }\n                    break;\n                }\n                case \"base64url\":\n                    addPattern(res, zodPatterns.base64url, check.message, refs);\n                    break;\n                case \"jwt\":\n                    addPattern(res, zodPatterns.jwt, check.message, refs);\n                    break;\n                case \"cidr\": {\n                    if (check.version !== \"v6\") {\n                        addPattern(res, zodPatterns.ipv4Cidr, check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addPattern(res, zodPatterns.ipv6Cidr, check.message, refs);\n                    }\n                    break;\n                }\n                case \"emoji\":\n                    addPattern(res, zodPatterns.emoji(), check.message, refs);\n                    break;\n                case \"ulid\": {\n                    addPattern(res, zodPatterns.ulid, check.message, refs);\n                    break;\n                }\n                case \"base64\": {\n                    switch (refs.base64Strategy) {\n                        case \"format:binary\": {\n                            addFormat(res, \"binary\", check.message, refs);\n                            break;\n                        }\n                        case \"contentEncoding:base64\": {\n                            setResponseValueAndErrors(res, \"contentEncoding\", \"base64\", check.message, refs);\n                            break;\n                        }\n                        case \"pattern:zod\": {\n                            addPattern(res, zodPatterns.base64, check.message, refs);\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case \"nanoid\": {\n                    addPattern(res, zodPatterns.nanoid, check.message, refs);\n                }\n                case \"toLowerCase\":\n                case \"toUpperCase\":\n                case \"trim\":\n                    break;\n                default:\n                    /* c8 ignore next */\n                    ((_) => { })(check);\n            }\n        }\n    }\n    return res;\n}\nfunction escapeLiteralCheckValue(literal, refs) {\n    return refs.patternStrategy === \"escape\"\n        ? escapeNonAlphaNumeric(literal)\n        : literal;\n}\nconst ALPHA_NUMERIC = new Set(\"ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvxyz0123456789\");\nfunction escapeNonAlphaNumeric(source) {\n    let result = \"\";\n    for (let i = 0; i < source.length; i++) {\n        if (!ALPHA_NUMERIC.has(source[i])) {\n            result += \"\\\\\";\n        }\n        result += source[i];\n    }\n    return result;\n}\n// Adds a \"format\" keyword to the schema. If a format exists, both formats will be joined in an allOf-node, along with subsequent ones.\nfunction addFormat(schema, value, message, refs) {\n    if (schema.format || schema.anyOf?.some((x) => x.format)) {\n        if (!schema.anyOf) {\n            schema.anyOf = [];\n        }\n        if (schema.format) {\n            schema.anyOf.push({\n                format: schema.format,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { format: schema.errorMessage.format },\n                }),\n            });\n            delete schema.format;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.format;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.anyOf.push({\n            format: value,\n            ...(message &&\n                refs.errorMessages && { errorMessage: { format: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"format\", value, message, refs);\n    }\n}\n// Adds a \"pattern\" keyword to the schema. If a pattern exists, both patterns will be joined in an allOf-node, along with subsequent ones.\nfunction addPattern(schema, regex, message, refs) {\n    if (schema.pattern || schema.allOf?.some((x) => x.pattern)) {\n        if (!schema.allOf) {\n            schema.allOf = [];\n        }\n        if (schema.pattern) {\n            schema.allOf.push({\n                pattern: schema.pattern,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { pattern: schema.errorMessage.pattern },\n                }),\n            });\n            delete schema.pattern;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.pattern;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.allOf.push({\n            pattern: stringifyRegExpWithFlags(regex, refs),\n            ...(message &&\n                refs.errorMessages && { errorMessage: { pattern: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"pattern\", stringifyRegExpWithFlags(regex, refs), message, refs);\n    }\n}\n// Mutate z.string.regex() in a best attempt to accommodate for regex flags when applyRegexFlags is true\nfunction stringifyRegExpWithFlags(regex, refs) {\n    if (!refs.applyRegexFlags || !regex.flags) {\n        return regex.source;\n    }\n    // Currently handled flags\n    const flags = {\n        i: regex.flags.includes(\"i\"),\n        m: regex.flags.includes(\"m\"),\n        s: regex.flags.includes(\"s\"), // `.` matches newlines\n    };\n    // The general principle here is to step through each character, one at a time, applying mutations as flags require. We keep track when the current character is escaped, and when it's inside a group /like [this]/ or (also) a range like /[a-z]/. The following is fairly brittle imperative code; edit at your peril!\n    const source = flags.i ? regex.source.toLowerCase() : regex.source;\n    let pattern = \"\";\n    let isEscaped = false;\n    let inCharGroup = false;\n    let inCharRange = false;\n    for (let i = 0; i < source.length; i++) {\n        if (isEscaped) {\n            pattern += source[i];\n            isEscaped = false;\n            continue;\n        }\n        if (flags.i) {\n            if (inCharGroup) {\n                if (source[i].match(/[a-z]/)) {\n                    if (inCharRange) {\n                        pattern += source[i];\n                        pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n                        inCharRange = false;\n                    }\n                    else if (source[i + 1] === \"-\" && source[i + 2]?.match(/[a-z]/)) {\n                        pattern += source[i];\n                        inCharRange = true;\n                    }\n                    else {\n                        pattern += `${source[i]}${source[i].toUpperCase()}`;\n                    }\n                    continue;\n                }\n            }\n            else if (source[i].match(/[a-z]/)) {\n                pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n                continue;\n            }\n        }\n        if (flags.m) {\n            if (source[i] === \"^\") {\n                pattern += `(^|(?<=[\\r\\n]))`;\n                continue;\n            }\n            else if (source[i] === \"$\") {\n                pattern += `($|(?=[\\r\\n]))`;\n                continue;\n            }\n        }\n        if (flags.s && source[i] === \".\") {\n            pattern += inCharGroup ? `${source[i]}\\r\\n` : `[${source[i]}\\r\\n]`;\n            continue;\n        }\n        pattern += source[i];\n        if (source[i] === \"\\\\\") {\n            isEscaped = true;\n        }\n        else if (inCharGroup && source[i] === \"]\") {\n            inCharGroup = false;\n        }\n        else if (!inCharGroup && source[i] === \"[\") {\n            inCharGroup = true;\n        }\n    }\n    try {\n        new RegExp(pattern);\n    }\n    catch {\n        console.warn(`Could not convert regex pattern at ${refs.currentPath.join(\"/\")} to a flag-independent form! Falling back to the flag-ignorant source`);\n        return regex.source;\n    }\n    return pattern;\n}\n","import { ZodOptional } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseObjectDef(def, refs) {\n    const forceOptionalIntoNullable = refs.target === \"openAi\";\n    const result = {\n        type: \"object\",\n        properties: {},\n    };\n    const required = [];\n    const shape = def.shape();\n    for (const propName in shape) {\n        let propDef = shape[propName];\n        if (propDef === undefined || propDef._def === undefined) {\n            continue;\n        }\n        let propOptional = safeIsOptional(propDef);\n        if (propOptional && forceOptionalIntoNullable) {\n            if (propDef instanceof ZodOptional) {\n                propDef = propDef._def.innerType;\n            }\n            if (!propDef.isNullable()) {\n                propDef = propDef.nullable();\n            }\n            propOptional = false;\n        }\n        const parsedDef = parseDef(propDef._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"properties\", propName],\n            propertyPath: [...refs.currentPath, \"properties\", propName],\n        });\n        if (parsedDef === undefined) {\n            continue;\n        }\n        result.properties[propName] = parsedDef;\n        if (!propOptional) {\n            required.push(propName);\n        }\n    }\n    if (required.length) {\n        result.required = required;\n    }\n    const additionalProperties = decideAdditionalProperties(def, refs);\n    if (additionalProperties !== undefined) {\n        result.additionalProperties = additionalProperties;\n    }\n    return result;\n}\nfunction decideAdditionalProperties(def, refs) {\n    if (def.catchall._def.typeName !== \"ZodNever\") {\n        return parseDef(def.catchall._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        });\n    }\n    switch (def.unknownKeys) {\n        case \"passthrough\":\n            return refs.allowedAdditionalProperties;\n        case \"strict\":\n            return refs.rejectedAdditionalProperties;\n        case \"strip\":\n            return refs.removeAdditionalStrategy === \"strict\"\n                ? refs.allowedAdditionalProperties\n                : refs.rejectedAdditionalProperties;\n    }\n}\nfunction safeIsOptional(schema) {\n    try {\n        return schema.isOptional();\n    }\n    catch {\n        return true;\n    }\n}\n","import { encodePointer } from './pointer.js';\nexport const schemaKeyword = {\n    additionalItems: true,\n    unevaluatedItems: true,\n    items: true,\n    contains: true,\n    additionalProperties: true,\n    unevaluatedProperties: true,\n    propertyNames: true,\n    not: true,\n    if: true,\n    then: true,\n    else: true\n};\nexport const schemaArrayKeyword = {\n    prefixItems: true,\n    items: true,\n    allOf: true,\n    anyOf: true,\n    oneOf: true\n};\nexport const schemaMapKeyword = {\n    $defs: true,\n    definitions: true,\n    properties: true,\n    patternProperties: true,\n    dependentSchemas: true\n};\nexport const ignoredKeyword = {\n    id: true,\n    $id: true,\n    $ref: true,\n    $schema: true,\n    $anchor: true,\n    $vocabulary: true,\n    $comment: true,\n    default: true,\n    enum: true,\n    const: true,\n    required: true,\n    type: true,\n    maximum: true,\n    minimum: true,\n    exclusiveMaximum: true,\n    exclusiveMinimum: true,\n    multipleOf: true,\n    maxLength: true,\n    minLength: true,\n    pattern: true,\n    format: true,\n    maxItems: true,\n    minItems: true,\n    uniqueItems: true,\n    maxProperties: true,\n    minProperties: true\n};\nexport let initialBaseURI = typeof self !== 'undefined' &&\n    self.location &&\n    self.location.origin !== 'null'\n    ?\n        new URL(self.location.origin + self.location.pathname + location.search)\n    : new URL('https://github.com/cfworker');\nexport function dereference(schema, lookup = Object.create(null), baseURI = initialBaseURI, basePointer = '') {\n    if (schema && typeof schema === 'object' && !Array.isArray(schema)) {\n        const id = schema.$id || schema.id;\n        if (id) {\n            const url = new URL(id, baseURI.href);\n            if (url.hash.length > 1) {\n                lookup[url.href] = schema;\n            }\n            else {\n                url.hash = '';\n                if (basePointer === '') {\n                    baseURI = url;\n                }\n                else {\n                    dereference(schema, lookup, baseURI);\n                }\n            }\n        }\n    }\n    else if (schema !== true && schema !== false) {\n        return lookup;\n    }\n    const schemaURI = baseURI.href + (basePointer ? '#' + basePointer : '');\n    if (lookup[schemaURI] !== undefined) {\n        throw new Error(`Duplicate schema URI \"${schemaURI}\".`);\n    }\n    lookup[schemaURI] = schema;\n    if (schema === true || schema === false) {\n        return lookup;\n    }\n    if (schema.__absolute_uri__ === undefined) {\n        Object.defineProperty(schema, '__absolute_uri__', {\n            enumerable: false,\n            value: schemaURI\n        });\n    }\n    if (schema.$ref && schema.__absolute_ref__ === undefined) {\n        const url = new URL(schema.$ref, baseURI.href);\n        url.hash = url.hash;\n        Object.defineProperty(schema, '__absolute_ref__', {\n            enumerable: false,\n            value: url.href\n        });\n    }\n    if (schema.$recursiveRef && schema.__absolute_recursive_ref__ === undefined) {\n        const url = new URL(schema.$recursiveRef, baseURI.href);\n        url.hash = url.hash;\n        Object.defineProperty(schema, '__absolute_recursive_ref__', {\n            enumerable: false,\n            value: url.href\n        });\n    }\n    if (schema.$anchor) {\n        const url = new URL('#' + schema.$anchor, baseURI.href);\n        lookup[url.href] = schema;\n    }\n    for (let key in schema) {\n        if (ignoredKeyword[key]) {\n            continue;\n        }\n        const keyBase = `${basePointer}/${encodePointer(key)}`;\n        const subSchema = schema[key];\n        if (Array.isArray(subSchema)) {\n            if (schemaArrayKeyword[key]) {\n                const length = subSchema.length;\n                for (let i = 0; i < length; i++) {\n                    dereference(subSchema[i], lookup, baseURI, `${keyBase}/${i}`);\n                }\n            }\n        }\n        else if (schemaMapKeyword[key]) {\n            for (let subKey in subSchema) {\n                dereference(subSchema[subKey], lookup, baseURI, `${keyBase}/${encodePointer(subKey)}`);\n            }\n        }\n        else {\n            dereference(subSchema, lookup, baseURI, keyBase);\n        }\n    }\n    return lookup;\n}\n","const DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nconst DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d(?::?\\d\\d)?)?$/i;\nconst HOSTNAME = /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i;\nconst URIREF = /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nconst URITEMPLATE = /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i;\nconst URL_ = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu;\nconst UUID = /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;\nconst JSON_POINTER = /^(?:\\/(?:[^~/]|~0|~1)*)*$/;\nconst JSON_POINTER_URI_FRAGMENT = /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;\nconst RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/;\nconst EMAIL = (input) => {\n    if (input[0] === '\"')\n        return false;\n    const [name, host, ...rest] = input.split('@');\n    if (!name ||\n        !host ||\n        rest.length !== 0 ||\n        name.length > 64 ||\n        host.length > 253)\n        return false;\n    if (name[0] === '.' || name.endsWith('.') || name.includes('..'))\n        return false;\n    if (!/^[a-z0-9.-]+$/i.test(host) ||\n        !/^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+$/i.test(name))\n        return false;\n    return host\n        .split('.')\n        .every(part => /^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$/i.test(part));\n};\nconst IPV4 = /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/;\nconst IPV6 = /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i;\nconst DURATION = (input) => input.length > 1 &&\n    input.length < 80 &&\n    (/^P\\d+([.,]\\d+)?W$/.test(input) ||\n        (/^P[\\dYMDTHS]*(\\d[.,]\\d+)?[YMDHS]$/.test(input) &&\n            /^P([.,\\d]+Y)?([.,\\d]+M)?([.,\\d]+D)?(T([.,\\d]+H)?([.,\\d]+M)?([.,\\d]+S)?)?$/.test(input)));\nfunction bind(r) {\n    return r.test.bind(r);\n}\nexport const format = {\n    date,\n    time: time.bind(undefined, false),\n    'date-time': date_time,\n    duration: DURATION,\n    uri,\n    'uri-reference': bind(URIREF),\n    'uri-template': bind(URITEMPLATE),\n    url: bind(URL_),\n    email: EMAIL,\n    hostname: bind(HOSTNAME),\n    ipv4: bind(IPV4),\n    ipv6: bind(IPV6),\n    regex: regex,\n    uuid: bind(UUID),\n    'json-pointer': bind(JSON_POINTER),\n    'json-pointer-uri-fragment': bind(JSON_POINTER_URI_FRAGMENT),\n    'relative-json-pointer': bind(RELATIVE_JSON_POINTER)\n};\nfunction isLeapYear(year) {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\nfunction date(str) {\n    const matches = str.match(DATE);\n    if (!matches)\n        return false;\n    const year = +matches[1];\n    const month = +matches[2];\n    const day = +matches[3];\n    return (month >= 1 &&\n        month <= 12 &&\n        day >= 1 &&\n        day <= (month == 2 && isLeapYear(year) ? 29 : DAYS[month]));\n}\nfunction time(full, str) {\n    const matches = str.match(TIME);\n    if (!matches)\n        return false;\n    const hour = +matches[1];\n    const minute = +matches[2];\n    const second = +matches[3];\n    const timeZone = !!matches[5];\n    return (((hour <= 23 && minute <= 59 && second <= 59) ||\n        (hour == 23 && minute == 59 && second == 60)) &&\n        (!full || timeZone));\n}\nconst DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction date_time(str) {\n    const dateTime = str.split(DATE_TIME_SEPARATOR);\n    return dateTime.length == 2 && date(dateTime[0]) && time(true, dateTime[1]);\n}\nconst NOT_URI_FRAGMENT = /\\/|:/;\nconst URI_PATTERN = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nfunction uri(str) {\n    return NOT_URI_FRAGMENT.test(str) && URI_PATTERN.test(str);\n}\nconst Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n    if (Z_ANCHOR.test(str))\n        return false;\n    try {\n        new RegExp(str, 'u');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n","export var OutputFormat;\n(function (OutputFormat) {\n    OutputFormat[OutputFormat[\"Flag\"] = 1] = \"Flag\";\n    OutputFormat[OutputFormat[\"Basic\"] = 2] = \"Basic\";\n    OutputFormat[OutputFormat[\"Detailed\"] = 4] = \"Detailed\";\n})(OutputFormat || (OutputFormat = {}));\n","import { parse, parseAsync, globalRegistry, util, clone, _unknown, _never, $ZodUnknown, $ZodNever, $ZodOptional, } from \"zod/v4/core\";\nexport function isZodSchemaV4(schema) {\n    if (typeof schema !== \"object\" || schema === null) {\n        return false;\n    }\n    const obj = schema;\n    if (!(\"_zod\" in obj)) {\n        return false;\n    }\n    const zod = obj._zod;\n    return (typeof zod === \"object\" &&\n        zod !== null &&\n        \"def\" in zod);\n}\nexport function isZodSchemaV3(schema) {\n    if (typeof schema !== \"object\" || schema === null) {\n        return false;\n    }\n    const obj = schema;\n    if (!(\"_def\" in obj) || \"_zod\" in obj) {\n        return false;\n    }\n    const def = obj._def;\n    return (typeof def === \"object\" &&\n        def != null &&\n        \"typeName\" in def);\n}\n/** Backward compatible isZodSchema for Zod 3 */\nexport function isZodSchema(schema) {\n    if (isZodSchemaV4(schema)) {\n        console.warn(\"[WARNING] Attempting to use Zod 4 schema in a context where Zod 3 schema is expected. This may cause unexpected behavior.\");\n    }\n    return isZodSchemaV3(schema);\n}\n/**\n * Given either a Zod schema, or plain object, determine if the input is a Zod schema.\n *\n * @param {unknown} input\n * @returns {boolean} Whether or not the provided input is a Zod schema.\n */\nexport function isInteropZodSchema(input) {\n    if (!input) {\n        return false;\n    }\n    if (typeof input !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(input)) {\n        return false;\n    }\n    if (isZodSchemaV4(input) ||\n        isZodSchemaV3(input)) {\n        return true;\n    }\n    return false;\n}\n/**\n * Asynchronously parses the input using the provided Zod schema (v3 or v4) and returns a safe parse result.\n * This function handles both Zod v3 and v4 schemas, returning a result object indicating success or failure.\n *\n * @template T - The expected output type of the schema.\n * @param {InteropZodType<T>} schema - The Zod schema (v3 or v4) to use for parsing.\n * @param {unknown} input - The input value to parse.\n * @returns {Promise<InteropZodSafeParseResult<T>>} A promise that resolves to a safe parse result object.\n * @throws {Error} If the schema is not a recognized Zod v3 or v4 schema.\n */\nexport async function interopSafeParseAsync(schema, input) {\n    if (isZodSchemaV4(schema)) {\n        try {\n            const data = await parseAsync(schema, input);\n            return {\n                success: true,\n                data,\n            };\n        }\n        catch (error) {\n            return {\n                success: false,\n                error: error,\n            };\n        }\n    }\n    if (isZodSchemaV3(schema)) {\n        return schema.safeParse(input);\n    }\n    throw new Error(\"Schema must be an instance of z3.ZodType or z4.$ZodType\");\n}\n/**\n * Asynchronously parses the input using the provided Zod schema (v3 or v4) and returns the parsed value.\n * Throws an error if parsing fails or if the schema is not a recognized Zod v3 or v4 schema.\n *\n * @template T - The expected output type of the schema.\n * @param {InteropZodType<T>} schema - The Zod schema (v3 or v4) to use for parsing.\n * @param {unknown} input - The input value to parse.\n * @returns {Promise<T>} A promise that resolves to the parsed value.\n * @throws {Error} If parsing fails or the schema is not a recognized Zod v3 or v4 schema.\n */\nexport async function interopParseAsync(schema, input) {\n    if (isZodSchemaV4(schema)) {\n        return parse(schema, input);\n    }\n    if (isZodSchemaV3(schema)) {\n        return schema.parse(input);\n    }\n    throw new Error(\"Schema must be an instance of z3.ZodType or z4.$ZodType\");\n}\n/**\n * Safely parses the input using the provided Zod schema (v3 or v4) and returns a result object\n * indicating success or failure. This function is compatible with both Zod v3 and v4 schemas.\n *\n * @template T - The expected output type of the schema.\n * @param {InteropZodType<T>} schema - The Zod schema (v3 or v4) to use for parsing.\n * @param {unknown} input - The input value to parse.\n * @returns {InteropZodSafeParseResult<T>} An object with either the parsed data (on success)\n *   or the error (on failure).\n * @throws {Error} If the schema is not a recognized Zod v3 or v4 schema.\n */\nexport function interopSafeParse(schema, input) {\n    if (isZodSchemaV4(schema)) {\n        try {\n            const data = parse(schema, input);\n            return {\n                success: true,\n                data,\n            };\n        }\n        catch (error) {\n            return {\n                success: false,\n                error: error,\n            };\n        }\n    }\n    if (isZodSchemaV3(schema)) {\n        return schema.safeParse(input);\n    }\n    throw new Error(\"Schema must be an instance of z3.ZodType or z4.$ZodType\");\n}\n/**\n * Parses the input using the provided Zod schema (v3 or v4) and returns the parsed value.\n * Throws an error if parsing fails or if the schema is not a recognized Zod v3 or v4 schema.\n *\n * @template T - The expected output type of the schema.\n * @param {InteropZodType<T>} schema - The Zod schema (v3 or v4) to use for parsing.\n * @param {unknown} input - The input value to parse.\n * @returns {T} The parsed value.\n * @throws {Error} If parsing fails or the schema is not a recognized Zod v3 or v4 schema.\n */\nexport function interopParse(schema, input) {\n    if (isZodSchemaV4(schema)) {\n        return parse(schema, input);\n    }\n    if (isZodSchemaV3(schema)) {\n        return schema.parse(input);\n    }\n    throw new Error(\"Schema must be an instance of z3.ZodType or z4.$ZodType\");\n}\n/**\n * Retrieves the description from a schema definition (v3, v4, or plain object), if available.\n *\n * @param {unknown} schema - The schema to extract the description from.\n * @returns {string | undefined} The description of the schema, or undefined if not present.\n */\nexport function getSchemaDescription(schema) {\n    if (isZodSchemaV4(schema)) {\n        return globalRegistry.get(schema)?.description;\n    }\n    if (isZodSchemaV3(schema)) {\n        return schema.description;\n    }\n    if (\"description\" in schema && typeof schema.description === \"string\") {\n        return schema.description;\n    }\n    return undefined;\n}\n/**\n * Determines if the provided Zod schema is \"shapeless\".\n * A shapeless schema is one that does not define any object shape,\n * such as ZodString, ZodNumber, ZodBoolean, ZodAny, etc.\n * For ZodObject, it must have no shape keys to be considered shapeless.\n * ZodRecord schemas are considered shapeless since they define dynamic\n * key-value mappings without fixed keys.\n *\n * @param schema The Zod schema to check.\n * @returns {boolean} True if the schema is shapeless, false otherwise.\n */\nexport function isShapelessZodSchema(schema) {\n    if (!isInteropZodSchema(schema)) {\n        return false;\n    }\n    // Check for v3 schemas\n    if (isZodSchemaV3(schema)) {\n        // @ts-expect-error - zod v3 types are not compatible with zod v4 types\n        const def = schema._def;\n        // ZodObject is only shaped if it has actual shape keys\n        if (def.typeName === \"ZodObject\") {\n            const obj = schema;\n            return !obj.shape || Object.keys(obj.shape).length === 0;\n        }\n        // ZodRecord is shapeless (dynamic key-value mapping)\n        if (def.typeName === \"ZodRecord\") {\n            return true;\n        }\n    }\n    // Check for v4 schemas\n    if (isZodSchemaV4(schema)) {\n        const def = schema._zod.def;\n        // Object type is only shaped if it has actual shape keys\n        if (def.type === \"object\") {\n            const obj = schema;\n            return !obj.shape || Object.keys(obj.shape).length === 0;\n        }\n        // Record type is shapeless (dynamic key-value mapping)\n        if (def.type === \"record\") {\n            return true;\n        }\n    }\n    // For other schemas, check if they have a `shape` property\n    // If they don't have shape, they're likely shapeless\n    if (typeof schema === \"object\" && schema !== null && !(\"shape\" in schema)) {\n        return true;\n    }\n    return false;\n}\n/**\n * Determines if the provided Zod schema should be treated as a simple string schema\n * that maps to DynamicTool. This aligns with the type-level constraint of\n * InteropZodType<string | undefined> which only matches basic string schemas.\n * If the provided schema is just z.string(), we can make the determination that\n * the tool is just a generic string tool that doesn't require any input validation.\n *\n * This function only returns true for basic ZodString schemas, including:\n * - Basic string schemas (z.string())\n * - String schemas with validations (z.string().min(1), z.string().email(), etc.)\n *\n * This function returns false for everything else, including:\n * - String schemas with defaults (z.string().default(\"value\"))\n * - Branded string schemas (z.string().brand<\"UserId\">())\n * - String schemas with catch operations (z.string().catch(\"default\"))\n * - Optional/nullable string schemas (z.string().optional())\n * - Transformed schemas (z.string().transform() or z.object().transform())\n * - Object or record schemas, even if they're empty\n * - Any other schema type\n *\n * @param schema The Zod schema to check.\n * @returns {boolean} True if the schema is a basic ZodString, false otherwise.\n */\nexport function isSimpleStringZodSchema(schema) {\n    if (!isInteropZodSchema(schema)) {\n        return false;\n    }\n    // For v3 schemas\n    if (isZodSchemaV3(schema)) {\n        // @ts-expect-error - zod v3 types are not compatible with zod v4 types\n        const def = schema._def;\n        // Only accept basic ZodString\n        return def.typeName === \"ZodString\";\n    }\n    // For v4 schemas\n    if (isZodSchemaV4(schema)) {\n        const def = schema._zod.def;\n        // Only accept basic string type\n        return def.type === \"string\";\n    }\n    return false;\n}\nexport function isZodObjectV3(obj) {\n    // Zod v3 object schemas have _def.typeName === \"ZodObject\"\n    if (typeof obj === \"object\" &&\n        obj !== null &&\n        \"_def\" in obj &&\n        typeof obj._def === \"object\" &&\n        obj._def !== null &&\n        \"typeName\" in obj._def &&\n        obj._def.typeName === \"ZodObject\") {\n        return true;\n    }\n    return false;\n}\nexport function isZodObjectV4(obj) {\n    if (!isZodSchemaV4(obj))\n        return false;\n    // Zod v4 object schemas have _zod.def.type === \"object\"\n    if (typeof obj === \"object\" &&\n        obj !== null &&\n        \"_zod\" in obj &&\n        typeof obj._zod === \"object\" &&\n        obj._zod !== null &&\n        \"def\" in obj._zod &&\n        typeof obj._zod.def === \"object\" &&\n        obj._zod.def !== null &&\n        \"type\" in obj._zod.def &&\n        obj._zod.def.type === \"object\") {\n        return true;\n    }\n    return false;\n}\nexport function isZodArrayV4(obj) {\n    if (!isZodSchemaV4(obj))\n        return false;\n    // Zod v4 array schemas have _zod.def.type === \"array\"\n    if (typeof obj === \"object\" &&\n        obj !== null &&\n        \"_zod\" in obj &&\n        typeof obj._zod === \"object\" &&\n        obj._zod !== null &&\n        \"def\" in obj._zod &&\n        typeof obj._zod.def === \"object\" &&\n        obj._zod.def !== null &&\n        \"type\" in obj._zod.def &&\n        obj._zod.def.type === \"array\") {\n        return true;\n    }\n    return false;\n}\n/**\n * Determines if the provided value is an InteropZodObject (Zod v3 or v4 object schema).\n *\n * @param obj The value to check.\n * @returns {boolean} True if the value is a Zod v3 or v4 object schema, false otherwise.\n */\nexport function isInteropZodObject(obj) {\n    if (isZodObjectV3(obj))\n        return true;\n    if (isZodObjectV4(obj))\n        return true;\n    return false;\n}\n/**\n * Retrieves the shape (fields) of a Zod object schema, supporting both Zod v3 and v4.\n *\n * @template T - The type of the Zod object schema.\n * @param {T} schema - The Zod object schema instance (either v3 or v4).\n * @returns {InteropZodObjectShape<T>} The shape of the object schema.\n * @throws {Error} If the schema is not a Zod v3 or v4 object.\n */\nexport function getInteropZodObjectShape(schema) {\n    if (isZodSchemaV3(schema)) {\n        return schema.shape;\n    }\n    if (isZodSchemaV4(schema)) {\n        return schema._zod.def.shape;\n    }\n    throw new Error(\"Schema must be an instance of z3.ZodObject or z4.$ZodObject\");\n}\n/**\n * Extends a Zod object schema with additional fields, supporting both Zod v3 and v4.\n *\n * @template T - The type of the Zod object schema.\n * @param {T} schema - The Zod object schema instance (either v3 or v4).\n * @param {InteropZodObjectShape} extension - The fields to add to the schema.\n * @returns {InteropZodObject} The extended Zod object schema.\n * @throws {Error} If the schema is not a Zod v3 or v4 object.\n */\nexport function extendInteropZodObject(schema, extension) {\n    if (isZodSchemaV3(schema)) {\n        return schema.extend(extension);\n    }\n    if (isZodSchemaV4(schema)) {\n        return util.extend(schema, extension);\n    }\n    throw new Error(\"Schema must be an instance of z3.ZodObject or z4.$ZodObject\");\n}\n/**\n * Returns a partial version of a Zod object schema, making all fields optional.\n * Supports both Zod v3 and v4.\n *\n * @template T - The type of the Zod object schema.\n * @param {T} schema - The Zod object schema instance (either v3 or v4).\n * @returns {InteropZodObject} The partial Zod object schema.\n * @throws {Error} If the schema is not a Zod v3 or v4 object.\n */\nexport function interopZodObjectPartial(schema) {\n    if (isZodSchemaV3(schema)) {\n        // z3: .partial() exists and works as expected\n        return schema.partial();\n    }\n    if (isZodSchemaV4(schema)) {\n        // z4: util.partial exists and works as expected\n        return util.partial($ZodOptional, schema, undefined);\n    }\n    throw new Error(\"Schema must be an instance of z3.ZodObject or z4.$ZodObject\");\n}\n/**\n * Returns a strict version of a Zod object schema, disallowing unknown keys.\n * Supports both Zod v3 and v4 object schemas. If `recursive` is true, applies strictness\n * recursively to all nested object schemas and arrays of object schemas.\n *\n * @template T - The type of the Zod object schema.\n * @param {T} schema - The Zod object schema instance (either v3 or v4).\n * @param {boolean} [recursive=false] - Whether to apply strictness recursively to nested objects/arrays.\n * @returns {InteropZodObject} The strict Zod object schema.\n * @throws {Error} If the schema is not a Zod v3 or v4 object.\n */\nexport function interopZodObjectStrict(schema, recursive = false) {\n    if (isZodSchemaV3(schema)) {\n        // TODO: v3 schemas aren't recursively handled here\n        // (currently not necessary since zodToJsonSchema handles this)\n        return schema.strict();\n    }\n    if (isZodObjectV4(schema)) {\n        const outputShape = schema._zod.def.shape;\n        if (recursive) {\n            for (const [key, keySchema] of Object.entries(schema._zod.def.shape)) {\n                // If the shape key is a v4 object schema, we need to make it strict\n                if (isZodObjectV4(keySchema)) {\n                    const outputSchema = interopZodObjectStrict(keySchema, recursive);\n                    outputShape[key] = outputSchema;\n                }\n                // If the shape key is a v4 array schema, we need to make the element\n                // schema strict if it's an object schema\n                else if (isZodArrayV4(keySchema)) {\n                    let elementSchema = keySchema._zod.def.element;\n                    if (isZodObjectV4(elementSchema)) {\n                        elementSchema = interopZodObjectStrict(elementSchema, recursive);\n                    }\n                    outputShape[key] = clone(keySchema, {\n                        ...keySchema._zod.def,\n                        element: elementSchema,\n                    });\n                }\n                // Otherwise, just use the keySchema\n                else {\n                    outputShape[key] = keySchema;\n                }\n                // Assign meta fields to the keySchema\n                const meta = globalRegistry.get(keySchema);\n                if (meta)\n                    globalRegistry.add(outputShape[key], meta);\n            }\n        }\n        const modifiedSchema = clone(schema, {\n            ...schema._zod.def,\n            shape: outputShape,\n            catchall: _never($ZodNever),\n        });\n        const meta = globalRegistry.get(schema);\n        if (meta)\n            globalRegistry.add(modifiedSchema, meta);\n        return modifiedSchema;\n    }\n    throw new Error(\"Schema must be an instance of z3.ZodObject or z4.$ZodObject\");\n}\n/**\n * Returns a passthrough version of a Zod object schema, allowing unknown keys.\n * Supports both Zod v3 and v4 object schemas. If `recursive` is true, applies passthrough\n * recursively to all nested object schemas and arrays of object schemas.\n *\n * @template T - The type of the Zod object schema.\n * @param {T} schema - The Zod object schema instance (either v3 or v4).\n * @param {boolean} [recursive=false] - Whether to apply passthrough recursively to nested objects/arrays.\n * @returns {InteropZodObject} The passthrough Zod object schema.\n * @throws {Error} If the schema is not a Zod v3 or v4 object.\n */\nexport function interopZodObjectPassthrough(schema, recursive = false) {\n    if (isZodObjectV3(schema)) {\n        // TODO: v3 schemas aren't recursively handled here\n        // (currently not necessary since zodToJsonSchema handles this)\n        return schema.passthrough();\n    }\n    if (isZodObjectV4(schema)) {\n        const outputShape = schema._zod.def.shape;\n        if (recursive) {\n            for (const [key, keySchema] of Object.entries(schema._zod.def.shape)) {\n                // If the shape key is a v4 object schema, we need to make it passthrough\n                if (isZodObjectV4(keySchema)) {\n                    const outputSchema = interopZodObjectPassthrough(keySchema, recursive);\n                    outputShape[key] = outputSchema;\n                }\n                // If the shape key is a v4 array schema, we need to make the element\n                // schema passthrough if it's an object schema\n                else if (isZodArrayV4(keySchema)) {\n                    let elementSchema = keySchema._zod.def.element;\n                    if (isZodObjectV4(elementSchema)) {\n                        elementSchema = interopZodObjectPassthrough(elementSchema, recursive);\n                    }\n                    outputShape[key] = clone(keySchema, {\n                        ...keySchema._zod.def,\n                        element: elementSchema,\n                    });\n                }\n                // Otherwise, just use the keySchema\n                else {\n                    outputShape[key] = keySchema;\n                }\n                // Assign meta fields to the keySchema\n                const meta = globalRegistry.get(keySchema);\n                if (meta)\n                    globalRegistry.add(outputShape[key], meta);\n            }\n        }\n        const modifiedSchema = clone(schema, {\n            ...schema._zod.def,\n            shape: outputShape,\n            catchall: _unknown($ZodUnknown),\n        });\n        const meta = globalRegistry.get(schema);\n        if (meta)\n            globalRegistry.add(modifiedSchema, meta);\n        return modifiedSchema;\n    }\n    throw new Error(\"Schema must be an instance of z3.ZodObject or z4.$ZodObject\");\n}\n/**\n * Returns a getter function for the default value of a Zod schema, if one is defined.\n * Supports both Zod v3 and v4 schemas. If the schema has a default value,\n * the returned function will return that value when called. If no default is defined,\n * returns undefined.\n *\n * @template T - The type of the Zod schema.\n * @param {T} schema - The Zod schema instance (either v3 or v4).\n * @returns {(() => InferInteropZodOutput<T>) | undefined} A function that returns the default value, or undefined if no default is set.\n */\nexport function getInteropZodDefaultGetter(schema) {\n    if (isZodSchemaV3(schema)) {\n        try {\n            const defaultValue = schema.parse(undefined);\n            return () => defaultValue;\n        }\n        catch {\n            return undefined;\n        }\n    }\n    if (isZodSchemaV4(schema)) {\n        try {\n            const defaultValue = parse(schema, undefined);\n            return () => defaultValue;\n        }\n        catch {\n            return undefined;\n        }\n    }\n    return undefined;\n}\nfunction isZodTransformV3(schema) {\n    return (isZodSchemaV3(schema) &&\n        \"typeName\" in schema._def &&\n        schema._def.typeName === \"ZodEffects\");\n}\nfunction isZodTransformV4(schema) {\n    return isZodSchemaV4(schema) && schema._zod.def.type === \"pipe\";\n}\n/**\n * Returns the input type of a Zod transform schema, for both v3 and v4.\n * If the schema is not a transform, returns undefined. If `recursive` is true,\n * recursively processes nested object schemas and arrays of object schemas.\n *\n * @param schema - The Zod schema instance (v3 or v4)\n * @param {boolean} [recursive=false] - Whether to recursively process nested objects/arrays.\n * @returns The input Zod schema of the transform, or undefined if not a transform\n */\nexport function interopZodTransformInputSchema(schema, recursive = false) {\n    // Zod v3: ._def.schema is the input schema for ZodEffects (transform)\n    if (isZodSchemaV3(schema)) {\n        if (isZodTransformV3(schema)) {\n            return interopZodTransformInputSchema(schema._def.schema, recursive);\n        }\n        // TODO: v3 schemas aren't recursively handled here\n        // (currently not necessary since zodToJsonSchema handles this)\n        return schema;\n    }\n    // Zod v4: _def.type is the input schema for ZodEffects (transform)\n    if (isZodSchemaV4(schema)) {\n        let outputSchema = schema;\n        if (isZodTransformV4(schema)) {\n            outputSchema = interopZodTransformInputSchema(schema._zod.def.in, recursive);\n        }\n        if (recursive) {\n            // Handle nested object schemas\n            if (isZodObjectV4(outputSchema)) {\n                const outputShape = outputSchema._zod.def.shape;\n                for (const [key, keySchema] of Object.entries(outputSchema._zod.def.shape)) {\n                    outputShape[key] = interopZodTransformInputSchema(keySchema, recursive);\n                }\n                outputSchema = clone(outputSchema, {\n                    ...outputSchema._zod.def,\n                    shape: outputShape,\n                });\n            }\n            // Handle nested array schemas\n            else if (isZodArrayV4(outputSchema)) {\n                const elementSchema = interopZodTransformInputSchema(outputSchema._zod.def.element, recursive);\n                outputSchema = clone(outputSchema, {\n                    ...outputSchema._zod.def,\n                    element: elementSchema,\n                });\n            }\n        }\n        const meta = globalRegistry.get(schema);\n        if (meta)\n            globalRegistry.add(outputSchema, meta);\n        return outputSchema;\n    }\n    throw new Error(\"Schema must be an instance of z3.ZodType or z4.$ZodType\");\n}\n","import base64 from 'base64-js';\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/utils.ts\nfunction never(_) {\n}\nfunction bytePairMerge(piece, ranks) {\n  let parts = Array.from(\n    { length: piece.length },\n    (_, i) => ({ start: i, end: i + 1 })\n  );\n  while (parts.length > 1) {\n    let minRank = null;\n    for (let i = 0; i < parts.length - 1; i++) {\n      const slice = piece.slice(parts[i].start, parts[i + 1].end);\n      const rank = ranks.get(slice.join(\",\"));\n      if (rank == null)\n        continue;\n      if (minRank == null || rank < minRank[0]) {\n        minRank = [rank, i];\n      }\n    }\n    if (minRank != null) {\n      const i = minRank[1];\n      parts[i] = { start: parts[i].start, end: parts[i + 1].end };\n      parts.splice(i + 1, 1);\n    } else {\n      break;\n    }\n  }\n  return parts;\n}\nfunction bytePairEncode(piece, ranks) {\n  if (piece.length === 1)\n    return [ranks.get(piece.join(\",\"))];\n  return bytePairMerge(piece, ranks).map((p) => ranks.get(piece.slice(p.start, p.end).join(\",\"))).filter((x) => x != null);\n}\nfunction escapeRegex(str) {\n  return str.replace(/[\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n}\nvar _Tiktoken = class {\n  /** @internal */\n  specialTokens;\n  /** @internal */\n  inverseSpecialTokens;\n  /** @internal */\n  patStr;\n  /** @internal */\n  textEncoder = new TextEncoder();\n  /** @internal */\n  textDecoder = new TextDecoder(\"utf-8\");\n  /** @internal */\n  rankMap = /* @__PURE__ */ new Map();\n  /** @internal */\n  textMap = /* @__PURE__ */ new Map();\n  constructor(ranks, extendedSpecialTokens) {\n    this.patStr = ranks.pat_str;\n    const uncompressed = ranks.bpe_ranks.split(\"\\n\").filter(Boolean).reduce((memo, x) => {\n      const [_, offsetStr, ...tokens] = x.split(\" \");\n      const offset = Number.parseInt(offsetStr, 10);\n      tokens.forEach((token, i) => memo[token] = offset + i);\n      return memo;\n    }, {});\n    for (const [token, rank] of Object.entries(uncompressed)) {\n      const bytes = base64.toByteArray(token);\n      this.rankMap.set(bytes.join(\",\"), rank);\n      this.textMap.set(rank, bytes);\n    }\n    this.specialTokens = { ...ranks.special_tokens, ...extendedSpecialTokens };\n    this.inverseSpecialTokens = Object.entries(this.specialTokens).reduce((memo, [text, rank]) => {\n      memo[rank] = this.textEncoder.encode(text);\n      return memo;\n    }, {});\n  }\n  encode(text, allowedSpecial = [], disallowedSpecial = \"all\") {\n    const regexes = new RegExp(this.patStr, \"ug\");\n    const specialRegex = _Tiktoken.specialTokenRegex(\n      Object.keys(this.specialTokens)\n    );\n    const ret = [];\n    const allowedSpecialSet = new Set(\n      allowedSpecial === \"all\" ? Object.keys(this.specialTokens) : allowedSpecial\n    );\n    const disallowedSpecialSet = new Set(\n      disallowedSpecial === \"all\" ? Object.keys(this.specialTokens).filter(\n        (x) => !allowedSpecialSet.has(x)\n      ) : disallowedSpecial\n    );\n    if (disallowedSpecialSet.size > 0) {\n      const disallowedSpecialRegex = _Tiktoken.specialTokenRegex([\n        ...disallowedSpecialSet\n      ]);\n      const specialMatch = text.match(disallowedSpecialRegex);\n      if (specialMatch != null) {\n        throw new Error(\n          `The text contains a special token that is not allowed: ${specialMatch[0]}`\n        );\n      }\n    }\n    let start = 0;\n    while (true) {\n      let nextSpecial = null;\n      let startFind = start;\n      while (true) {\n        specialRegex.lastIndex = startFind;\n        nextSpecial = specialRegex.exec(text);\n        if (nextSpecial == null || allowedSpecialSet.has(nextSpecial[0]))\n          break;\n        startFind = nextSpecial.index + 1;\n      }\n      const end = nextSpecial?.index ?? text.length;\n      for (const match of text.substring(start, end).matchAll(regexes)) {\n        const piece = this.textEncoder.encode(match[0]);\n        const token2 = this.rankMap.get(piece.join(\",\"));\n        if (token2 != null) {\n          ret.push(token2);\n          continue;\n        }\n        ret.push(...bytePairEncode(piece, this.rankMap));\n      }\n      if (nextSpecial == null)\n        break;\n      let token = this.specialTokens[nextSpecial[0]];\n      ret.push(token);\n      start = nextSpecial.index + nextSpecial[0].length;\n    }\n    return ret;\n  }\n  decode(tokens) {\n    const res = [];\n    let length = 0;\n    for (let i2 = 0; i2 < tokens.length; ++i2) {\n      const token = tokens[i2];\n      const bytes = this.textMap.get(token) ?? this.inverseSpecialTokens[token];\n      if (bytes != null) {\n        res.push(bytes);\n        length += bytes.length;\n      }\n    }\n    const mergedArray = new Uint8Array(length);\n    let i = 0;\n    for (const bytes of res) {\n      mergedArray.set(bytes, i);\n      i += bytes.length;\n    }\n    return this.textDecoder.decode(mergedArray);\n  }\n};\nvar Tiktoken = _Tiktoken;\n__publicField(Tiktoken, \"specialTokenRegex\", (tokens) => {\n  return new RegExp(tokens.map((i) => escapeRegex(i)).join(\"|\"), \"g\");\n});\nfunction getEncodingNameForModel(model) {\n  switch (model) {\n    case \"gpt2\": {\n      return \"gpt2\";\n    }\n    case \"code-cushman-001\":\n    case \"code-cushman-002\":\n    case \"code-davinci-001\":\n    case \"code-davinci-002\":\n    case \"cushman-codex\":\n    case \"davinci-codex\":\n    case \"davinci-002\":\n    case \"text-davinci-002\":\n    case \"text-davinci-003\": {\n      return \"p50k_base\";\n    }\n    case \"code-davinci-edit-001\":\n    case \"text-davinci-edit-001\": {\n      return \"p50k_edit\";\n    }\n    case \"ada\":\n    case \"babbage\":\n    case \"babbage-002\":\n    case \"code-search-ada-code-001\":\n    case \"code-search-babbage-code-001\":\n    case \"curie\":\n    case \"davinci\":\n    case \"text-ada-001\":\n    case \"text-babbage-001\":\n    case \"text-curie-001\":\n    case \"text-davinci-001\":\n    case \"text-search-ada-doc-001\":\n    case \"text-search-babbage-doc-001\":\n    case \"text-search-curie-doc-001\":\n    case \"text-search-davinci-doc-001\":\n    case \"text-similarity-ada-001\":\n    case \"text-similarity-babbage-001\":\n    case \"text-similarity-curie-001\":\n    case \"text-similarity-davinci-001\": {\n      return \"r50k_base\";\n    }\n    case \"gpt-3.5-turbo-instruct-0914\":\n    case \"gpt-3.5-turbo-instruct\":\n    case \"gpt-3.5-turbo-16k-0613\":\n    case \"gpt-3.5-turbo-16k\":\n    case \"gpt-3.5-turbo-0613\":\n    case \"gpt-3.5-turbo-0301\":\n    case \"gpt-3.5-turbo\":\n    case \"gpt-4-32k-0613\":\n    case \"gpt-4-32k-0314\":\n    case \"gpt-4-32k\":\n    case \"gpt-4-0613\":\n    case \"gpt-4-0314\":\n    case \"gpt-4\":\n    case \"gpt-3.5-turbo-1106\":\n    case \"gpt-35-turbo\":\n    case \"gpt-4-1106-preview\":\n    case \"gpt-4-vision-preview\":\n    case \"gpt-3.5-turbo-0125\":\n    case \"gpt-4-turbo\":\n    case \"gpt-4-turbo-2024-04-09\":\n    case \"gpt-4-turbo-preview\":\n    case \"gpt-4-0125-preview\":\n    case \"text-embedding-ada-002\":\n    case \"text-embedding-3-small\":\n    case \"text-embedding-3-large\": {\n      return \"cl100k_base\";\n    }\n    case \"gpt-4o\":\n    case \"gpt-4o-2024-05-13\":\n    case \"gpt-4o-2024-08-06\":\n    case \"gpt-4o-2024-11-20\":\n    case \"gpt-4o-mini-2024-07-18\":\n    case \"gpt-4o-mini\":\n    case \"gpt-4o-search-preview\":\n    case \"gpt-4o-search-preview-2025-03-11\":\n    case \"gpt-4o-mini-search-preview\":\n    case \"gpt-4o-mini-search-preview-2025-03-11\":\n    case \"gpt-4o-audio-preview\":\n    case \"gpt-4o-audio-preview-2024-12-17\":\n    case \"gpt-4o-audio-preview-2024-10-01\":\n    case \"gpt-4o-mini-audio-preview\":\n    case \"gpt-4o-mini-audio-preview-2024-12-17\":\n    case \"o1\":\n    case \"o1-2024-12-17\":\n    case \"o1-mini\":\n    case \"o1-mini-2024-09-12\":\n    case \"o1-preview\":\n    case \"o1-preview-2024-09-12\":\n    case \"o1-pro\":\n    case \"o1-pro-2025-03-19\":\n    case \"o3\":\n    case \"o3-2025-04-16\":\n    case \"o3-mini\":\n    case \"o3-mini-2025-01-31\":\n    case \"o4-mini\":\n    case \"o4-mini-2025-04-16\":\n    case \"chatgpt-4o-latest\":\n    case \"gpt-4o-realtime\":\n    case \"gpt-4o-realtime-preview-2024-10-01\":\n    case \"gpt-4o-realtime-preview-2024-12-17\":\n    case \"gpt-4o-mini-realtime-preview\":\n    case \"gpt-4o-mini-realtime-preview-2024-12-17\":\n    case \"gpt-4.1\":\n    case \"gpt-4.1-2025-04-14\":\n    case \"gpt-4.1-mini\":\n    case \"gpt-4.1-mini-2025-04-14\":\n    case \"gpt-4.1-nano\":\n    case \"gpt-4.1-nano-2025-04-14\":\n    case \"gpt-4.5-preview\":\n    case \"gpt-4.5-preview-2025-02-27\": {\n      return \"o200k_base\";\n    }\n    default:\n      throw new Error(\"Unknown model\");\n  }\n}\n\nexport { Tiktoken, getEncodingNameForModel, never };\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n *\n * Note: This file was originally called `global.ts`, but was changed to unblock users which might be doing\n * string replaces with bundlers like Vite for `global` (would break imports that rely on importing from utils/src/global).\n *\n * Why worldwide?\n *\n * Why not?\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { Carrier } from '../carrier';\nimport type { Client } from '../client';\nimport type { SerializedLog } from '../types-hoist/log';\nimport type { Span } from '../types-hoist/span';\nimport type { SdkSource } from './env';\n\n/** Internal global with common properties and Sentry extensions  */\nexport type InternalGlobal = {\n  navigator?: { userAgent?: string; maxTouchPoints?: number };\n  console: Console;\n  PerformanceObserver?: any;\n  Sentry?: any;\n  onerror?: {\n    (event: object | string, source?: string, lineno?: number, colno?: number, error?: Error): any;\n    __SENTRY_INSTRUMENTED__?: true;\n  };\n  onunhandledrejection?: {\n    (event: unknown): boolean;\n    __SENTRY_INSTRUMENTED__?: true;\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  SENTRY_SDK_SOURCE?: SdkSource;\n  /**\n   * A map of Sentry clients to their log buffers.\n   *\n   * This is used to store logs that are sent to Sentry.\n   */\n  _sentryClientToLogBufferMap?: WeakMap<Client, Array<SerializedLog>>;\n  /**\n   * Debug IDs are indirectly injected by Sentry CLI or bundler plugins to directly reference a particular source map\n   * for resolving of a source file. The injected code will place an entry into the record for each loaded bundle/JS\n   * file.\n   */\n  _sentryDebugIds?: Record<string, string>;\n  /**\n   * Raw module metadata that is injected by bundler plugins.\n   *\n   * Keys are `error.stack` strings, values are the metadata.\n   */\n  _sentryModuleMetadata?: Record<string, any>;\n  _sentryEsmLoaderHookRegistered?: boolean;\n  /**\n   * A map of spans to evaluated feature flags. Populated by feature flag integrations.\n   */\n  _spanToFlagBufferMap?: WeakMap<Span, Set<string>>;\n} & Carrier;\n\n/** Get's the global object for the current JavaScript runtime */\nexport const GLOBAL_OBJ = globalThis as unknown as InternalGlobal;\n","// This is a magic string replaced by rollup\ndeclare const __SENTRY_SDK_VERSION__: string;\n\nexport const SDK_VERSION = typeof __SENTRY_SDK_VERSION__ === 'string' ? __SENTRY_SDK_VERSION__ : '0.0.0-unknown.0';\n","import type { AsyncContextStack } from './asyncContext/stackStrategy';\nimport type { AsyncContextStrategy } from './asyncContext/types';\nimport type { Scope } from './scope';\nimport type { Logger } from './utils/logger';\nimport { SDK_VERSION } from './utils/version';\nimport { GLOBAL_OBJ } from './utils/worldwide';\n\n/**\n * An object that contains globally accessible properties and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: VersionedCarrier;\n}\n\ntype VersionedCarrier = {\n  version?: string;\n} & Record<Exclude<string, 'version'>, SentryCarrier>;\n\nexport interface SentryCarrier {\n  acs?: AsyncContextStrategy;\n  stack?: AsyncContextStack;\n\n  globalScope?: Scope;\n  defaultIsolationScope?: Scope;\n  defaultCurrentScope?: Scope;\n  logger?: Logger;\n\n  /** Overwrites TextEncoder used in `@sentry/core`, need for `react-native@0.73` and older */\n  encodePolyfill?: (input: string) => Uint8Array;\n  /** Overwrites TextDecoder used in `@sentry/core`, need for `react-native@0.73` and older */\n  decodePolyfill?: (input: Uint8Array) => string;\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  // This ensures a Sentry carrier exists\n  getSentryCarrier(GLOBAL_OBJ);\n  return GLOBAL_OBJ;\n}\n\n/** Will either get the existing sentry carrier, or create a new one. */\nexport function getSentryCarrier(carrier: Carrier): SentryCarrier {\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n\n  // For now: First SDK that sets the .version property wins\n  __SENTRY__.version = __SENTRY__.version || SDK_VERSION;\n\n  // Intentionally populating and returning the version of \"this\" SDK instance\n  // rather than what's set in .version so that \"this\" SDK always gets its carrier\n  return (__SENTRY__[SDK_VERSION] = __SENTRY__[SDK_VERSION] || {});\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__[]` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nexport function getGlobalSingleton<Prop extends keyof SentryCarrier>(\n  name: Prop,\n  creator: () => NonNullable<SentryCarrier[Prop]>,\n  obj = GLOBAL_OBJ,\n): NonNullable<SentryCarrier[Prop]> {\n  const __SENTRY__ = (obj.__SENTRY__ = obj.__SENTRY__ || {});\n  const carrier = (__SENTRY__[SDK_VERSION] = __SENTRY__[SDK_VERSION] || {});\n  // Note: We do not want to set `carrier.version` here, as this may be called before any `init` is called, e.g. for the default scopes\n  return carrier[name] || (carrier[name] = creator());\n}\n","import { getGlobalSingleton } from '../carrier';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ConsoleLevel } from '../types-hoist/instrument';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nexport const CONSOLE_LEVELS: readonly ConsoleLevel[] = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] as const;\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<ConsoleLevel, LoggerMethod>;\n\n/** This may be mutated by the console instrumentation. */\nexport const originalConsoleMethods: {\n  [key in ConsoleLevel]?: (...args: unknown[]) => void;\n} = {};\n\n/** A Sentry Logger instance. */\nexport interface Logger extends LoggerConsoleMethods {\n  disable(): void;\n  enable(): void;\n  isEnabled(): boolean;\n}\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console as Console;\n  const wrappedFuncs: Partial<LoggerConsoleMethods> = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) as ConsoleLevel[];\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] as LoggerMethod;\n    wrappedFuncs[level] = console[level] as LoggerMethod | undefined;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] as LoggerMethod;\n    });\n  }\n}\n\nfunction makeLogger(): Logger {\n  let enabled = false;\n  const logger: Partial<Logger> = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = (...args: Parameters<(typeof GLOBAL_OBJ.console)[typeof name]>) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger as Logger;\n}\n\n/**\n * This is a logger singleton which either logs things or no-ops if logging is not enabled.\n * The logger is a singleton on the carrier, to ensure that a consistent logger is used throughout the SDK.\n */\nexport const logger = getGlobalSingleton('logger', makeLogger);\n","import type { Event } from '../types-hoist/event';\nimport type { StackFrame } from '../types-hoist/stackframe';\nimport type { StackLineParser, StackParser } from '../types-hoist/stacktrace';\n\nconst STACKTRACE_FRAME_LIMIT = 50;\nexport const UNKNOWN_FUNCTION = '?';\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack: string, skipFirstLines: number = 0, framesToPop: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirstLines; i < lines.length; i++) {\n      const line = lines[i] as string;\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT + framesToPop) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames.slice(framesToPop));\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nexport function stackParserFromStackParserOptions(stackParser: StackParser | StackLineParser[]): StackParser {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack: ReadonlyArray<StackFrame>): StackFrame[] {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(getLastStackFrame(localStack).function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(getLastStackFrame(localStack).function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the scope itself, making it:\n    //\n    //   Sentry.captureException()\n    //   scope.captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(getLastStackFrame(localStack).function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || getLastStackFrame(localStack).filename,\n    function: frame.function || UNKNOWN_FUNCTION,\n  }));\n}\n\nfunction getLastStackFrame(arr: StackFrame[]): StackFrame {\n  return arr[arr.length - 1] || {};\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Get's stack frames from an event without needing to check for undefined properties.\n */\nexport function getFramesFromEvent(event: Event): StackFrame[] | undefined {\n  const exception = event.exception;\n\n  if (exception) {\n    const frames: StackFrame[] = [];\n    try {\n      // @ts-expect-error Object could be undefined\n      exception.values.forEach(value => {\n        // @ts-expect-error Value could be undefined\n        if (value.stacktrace.frames) {\n          // @ts-expect-error Value could be undefined\n          frames.push(...value.stacktrace.frames);\n        }\n      });\n      return frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport { logger } from '../utils/logger';\nimport { getFunctionName } from '../utils/stacktrace';\n\nexport type InstrumentHandlerType =\n  | 'console'\n  | 'dom'\n  | 'fetch'\n  | 'fetch-body-resolved'\n  | 'history'\n  | 'xhr'\n  | 'error'\n  | 'unhandledrejection';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type InstrumentHandlerCallback = (data: any) => void;\n\n// We keep the handlers globally\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Add a handler function. */\nexport function addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nexport function resetInstrumentationHandlers(): void {\n  Object.keys(handlers).forEach(key => {\n    handlers[key as InstrumentHandlerType] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nexport function maybeInstrument(type: InstrumentHandlerType, instrumentFn: () => void): void {\n  if (!instrumented[type]) {\n    instrumented[type] = true;\n    try {\n      instrumentFn();\n    } catch (e) {\n      DEBUG_BUILD && logger.error(`Error while instrumenting ${type}`, e);\n    }\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nexport function triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n","import type { HandlerDataError } from '../types-hoist/instrument';\nimport { GLOBAL_OBJ } from '../utils/worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers';\n\nlet _oldOnErrorHandler: (typeof GLOBAL_OBJ)['onerror'] | null = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalErrorInstrumentationHandler(handler: (data: HandlerDataError) => void): void {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError(): void {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  // Note: The reason we are doing window.onerror instead of window.addEventListener('error')\n  // is that we are using this handler in the Loader Script, to handle buffered errors consistently\n  GLOBAL_OBJ.onerror = function (\n    msg: string | object,\n    url?: string,\n    line?: number,\n    column?: number,\n    error?: Error,\n  ): boolean {\n    const handlerData: HandlerDataError = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n","import type { HandlerDataUnhandledRejection } from '../types-hoist/instrument';\nimport { GLOBAL_OBJ } from '../utils/worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers';\n\nlet _oldOnUnhandledRejectionHandler: (typeof GLOBAL_OBJ)['onunhandledrejection'] | null = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalUnhandledRejectionInstrumentationHandler(\n  handler: (data: HandlerDataUnhandledRejection) => void,\n): void {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  // Note: The reason we are doing window.onunhandledrejection instead of window.addEventListener('unhandledrejection')\n  // is that we are using this handler in the Loader Script, to handle buffered rejections consistently\n  GLOBAL_OBJ.onunhandledrejection = function (e: unknown): boolean {\n    const handlerData: HandlerDataUnhandledRejection = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { Primitive } from '../types-hoist/misc';\nimport type { ParameterizedString } from '../types-hoist/parameterize';\nimport type { PolymorphicEvent } from '../types-hoist/polymorphics';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n    case '[object WebAssembly.Exception]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat: unknown, className: string): boolean {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isParameterizedString(wat: unknown): wat is ParameterizedString {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat?.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\ninterface VueViewModel {\n  // Vue3\n  __isVue?: boolean;\n  // Vue2\n  _isVue?: boolean;\n}\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isVueViewModel(wat: unknown): boolean {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat as VueViewModel).__isVue || (wat as VueViewModel)._isVue));\n}\n\n/**\n * Checks whether the given parameter is a Standard Web API Request instance.\n *\n * Returns false if Request is not available in the current runtime.\n */\nexport function isRequest(request: unknown): request is Request {\n  return typeof Request !== 'undefined' && isInstanceOf(request, Request);\n}\n","import { isString } from './is';\nimport { GLOBAL_OBJ } from './worldwide';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\ntype SimpleNode = {\n  parentNode: SimpleNode;\n} | null;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(\n  elem: unknown,\n  options: string[] | { keyAttrs?: string[]; maxStringLength?: number } = {},\n): string {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n\n  if (!elem?.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset) {\n      if (elem.dataset['sentryComponent']) {\n        return elem.dataset['sentryComponent'];\n      }\n      if (elem.dataset['sentryElement']) {\n        return elem.dataset['sentryElement'];\n      }\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs = keyAttrs?.length\n    ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n    : null;\n\n  if (keyAttrPairs?.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    const className = elem.className;\n    if (className && isString(className)) {\n      const classes = className.split(/\\s+/);\n      for (const c of classes) {\n        out.push(`.${c}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (const k of allowedAttrs) {\n    const attr = elem.getAttribute(k);\n    if (attr) {\n      out.push(`[${k}=\"${attr}\"]`);\n    }\n  }\n\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` or `data-sentry-element` attribute with `data-sentry-component` taking\n * precedence. This attribute is added at build-time by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nexport function getComponentName(elem: unknown): string | null {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem as SimpleNode;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement) {\n      if (currentElem.dataset['sentryComponent']) {\n        return currentElem.dataset['sentryComponent'];\n      }\n      if (currentElem.dataset['sentryElement']) {\n        return currentElem.dataset['sentryElement'];\n      }\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n","import { isRegExp, isString, isVueViewModel } from './is';\n\nexport { escapeStringForRegex } from '../vendor/escapeStringForRegex';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nexport function safeJoin(input: unknown[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nexport function isMatchingPattern(\n  value: string,\n  pattern: RegExp | string,\n  requireExactStringMatch: boolean = false,\n): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nexport function stringMatchesSomePattern(\n  testString: string,\n  patterns: Array<string | RegExp> = [],\n  requireExactStringMatch: boolean = false,\n): boolean {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { WrappedFunction } from '../types-hoist/wrappedfunction';\nimport { htmlTreeAsString } from './browser';\nimport { isElement, isError, isEvent, isInstanceOf, isPrimitive } from './is';\nimport { logger } from './logger';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * If the method on the passed object is not a function, the wrapper will not be applied.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  // explicitly casting to unknown because we don't know the type of the method initially at all\n  const original = source[name] as unknown;\n\n  if (typeof original !== 'function') {\n    return;\n  }\n\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  try {\n    source[name] = wrapped;\n  } catch {\n    DEBUG_BUILD && logger.log(`Failed to replace method \"${name}\" in object`, source);\n  }\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nexport function addNonEnumerableProperty(obj: object, name: string, value: unknown): void {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    DEBUG_BUILD && logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function getOriginalFunction<T extends Function>(func: WrappedFunction<T>): T | undefined {\n  return func.__sentry_original__;\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argument itself, when value is neither an Event nor\n *  an Error.\n */\nexport function convertToPlainObject<V>(value: V):\n  | {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    }\n  | {\n      [ownProps: string]: unknown;\n      message: string;\n      name: string;\n      stack?: string;\n    }\n  | V {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj: {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    } = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: unknown): { [key: string]: unknown } {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps: { [key: string]: unknown } = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj as Record<string, unknown>)[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception: Record<string, unknown>, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  const firstKey = keys[0];\n\n  if (!firstKey) {\n    return '[object has no keys]';\n  }\n\n  if (firstKey.length >= maxLength) {\n    return truncate(firstKey, maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n *\n * @deprecated This function is no longer used by the SDK and will be removed in a future major version.\n */\nexport function dropUndefinedKeys<T>(inputValue: T): T {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map<unknown, unknown>();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys<T>(inputValue: T, memoizationMap: Map<unknown, unknown>): T {\n  // Early return for primitive values\n  if (inputValue === null || typeof inputValue !== 'object') {\n    return inputValue;\n  }\n\n  // Check memo map first for all object types\n  const memoVal = memoizationMap.get(inputValue);\n  if (memoVal !== undefined) {\n    return memoVal as T;\n  }\n\n  // handle arrays\n  if (Array.isArray(inputValue)) {\n    const returnValue: unknown[] = [];\n    // Store mapping to handle circular references\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach(value => {\n      returnValue.push(_dropUndefinedKeys(value, memoizationMap));\n    });\n\n    return returnValue as unknown as T;\n  }\n\n  if (isPojo(inputValue)) {\n    const returnValue: { [key: string]: unknown } = {};\n    // Store mapping to handle circular references\n    memoizationMap.set(inputValue, returnValue);\n\n    const keys = Object.keys(inputValue);\n\n    keys.forEach(key => {\n      const val = inputValue[key];\n      if (val !== undefined) {\n        returnValue[key] = _dropUndefinedKeys(val, memoizationMap);\n      }\n    });\n\n    return returnValue as T;\n  }\n\n  // For other object types, return as is\n  return inputValue;\n}\n\nfunction isPojo(input: unknown): input is Record<string, unknown> {\n  // Plain objects have Object as constructor or no constructor\n  const constructor = (input as object).constructor;\n  return constructor === Object || constructor === undefined;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat: unknown): typeof Object {\n  let objectified;\n  switch (true) {\n    // this will catch both undefined and null\n    case wat == undefined:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat as any).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n","import type { Event } from '../types-hoist/event';\nimport type { Exception } from '../types-hoist/exception';\nimport type { Mechanism } from '../types-hoist/mechanism';\nimport type { StackFrame } from '../types-hoist/stackframe';\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\nimport { GLOBAL_OBJ } from './worldwide';\n\ninterface CryptoInternal {\n  getRandomValues(array: Uint8Array): Uint8Array;\n  randomUUID?(): string;\n}\n\n/** An interface for common properties on global */\ninterface CryptoGlobal {\n  msCrypto?: CryptoInternal;\n  crypto?: CryptoInternal;\n}\n\nfunction getCrypto(): CryptoInternal | undefined {\n  const gbl = GLOBAL_OBJ as typeof GLOBAL_OBJ & CryptoGlobal;\n  return gbl.crypto || gbl.msCrypto;\n}\n\n/**\n * UUID4 generator\n * @param crypto Object that provides the crypto API.\n * @returns string Generated UUID4.\n */\nexport function uuid4(crypto = getCrypto()): string {\n  let getRandomByte = (): number => Math.random() * 16;\n  try {\n    if (crypto?.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto?.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return typedArray[0]!;\n      };\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] as unknown as string) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c as unknown as number) ^ ((getRandomByte() & 15) >> ((c as unknown as number) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception?.values?.[0];\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...currentMechanism?.data, ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\nfunction _parseInt(input: string | undefined): number {\n  return parseInt(input || '', 10);\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = _parseInt(match[1]);\n  const minor = _parseInt(match[2]);\n  const patch = _parseInt(match[3]);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  // We guard here to ensure this is not larger than the existing number of lines\n  const lineIndex = Math.min(maxLines - 1, sourceLine);\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  frame.context_line = snipLine(lines[lineIndex]!, frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  if (isAlreadyCaptured(exception)) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\nfunction isAlreadyCaptured(exception: unknown): boolean | void {\n  try {\n    return (exception as { __sentry_captured__?: boolean }).__sentry_captured__;\n  } catch {} // eslint-disable-line no-empty\n}\n","import { GLOBAL_OBJ } from './worldwide';\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nexport function dateTimestampInSeconds(): number {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc(): () => number {\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & { performance?: Performance };\n  if (!performance?.now) {\n    return dateTimestampInSeconds;\n  }\n\n  // Some browser and environments don't have a timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  const approxStartingTimeOrigin = Date.now() - performance.now();\n  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds = createUnixTimestampInSecondsFunc();\n\n/**\n * Cached result of getBrowserTimeOrigin.\n */\nlet cachedTimeOrigin: [number | undefined, string] | undefined;\n\n/**\n * Gets the time origin and the mode used to determine it.\n */\nfunction getBrowserTimeOrigin(): [number | undefined, string] {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n  if (!performance?.now) {\n    return [undefined, 'none'];\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing?.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      return [performance.timeOrigin, 'timeOrigin'];\n    } else {\n      return [navigationStart, 'navigationStart'];\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  return [dateNow, 'dateNow'];\n}\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport function browserPerformanceTimeOrigin(): number | undefined {\n  if (!cachedTimeOrigin) {\n    cachedTimeOrigin = getBrowserTimeOrigin();\n  }\n\n  return cachedTimeOrigin[0];\n}\n","import type { SerializedSession, Session, SessionContext, SessionStatus } from './types-hoist/session';\nimport { uuid4 } from './utils/misc';\nimport { timestampInSeconds } from './utils/time';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nexport function makeSession(context?: Omit<SessionContext, 'started' | 'status'>): Session {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session: Session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see Client.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nexport function updateSession(session: Session, context: SessionContext = {}): void {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nexport function closeSession(session: Session, status?: Exclude<SessionStatus, 'ok'>): void {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session: Session): SerializedSession {\n  return {\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  };\n}\n","/**\n * Shallow merge two objects.\n * Does not mutate the passed in objects.\n * Undefined/empty values in the merge object will overwrite existing values.\n *\n * By default, this merges 2 levels deep.\n */\nexport function merge<T>(initialObj: T, mergeObj: T, levels = 2): T {\n  // If the merge value is not an object, or we have no merge levels left,\n  // we just set the value to the merge value\n  if (!mergeObj || typeof mergeObj !== 'object' || levels <= 0) {\n    return mergeObj;\n  }\n\n  // If the merge object is an empty object, and the initial object is not undefined, we return the initial object\n  if (initialObj && Object.keys(mergeObj).length === 0) {\n    return initialObj;\n  }\n\n  // Clone object\n  const output = { ...initialObj };\n\n  // Merge values into output, resursively\n  for (const key in mergeObj) {\n    if (Object.prototype.hasOwnProperty.call(mergeObj, key)) {\n      output[key] = merge(output[key], mergeObj[key], levels - 1);\n    }\n  }\n\n  return output;\n}\n","import { uuid4 } from './misc';\n\n/**\n * Generate a random, valid trace ID.\n */\nexport function generateTraceId(): string {\n  return uuid4();\n}\n\n/**\n * Generate a random, valid span ID.\n */\nexport function generateSpanId(): string {\n  return uuid4().substring(16);\n}\n","import type { Scope } from '../scope';\nimport type { Span } from '../types-hoist/span';\nimport { addNonEnumerableProperty } from '../utils/object';\n\nconst SCOPE_SPAN_FIELD = '_sentrySpan';\n\ntype ScopeWithMaybeSpan = Scope & {\n  [SCOPE_SPAN_FIELD]?: Span;\n};\n\n/**\n * Set the active span for a given scope.\n * NOTE: This should NOT be used directly, but is only used internally by the trace methods.\n */\nexport function _setSpanForScope(scope: Scope, span: Span | undefined): void {\n  if (span) {\n    addNonEnumerableProperty(scope as ScopeWithMaybeSpan, SCOPE_SPAN_FIELD, span);\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n    delete (scope as ScopeWithMaybeSpan)[SCOPE_SPAN_FIELD];\n  }\n}\n\n/**\n * Get the active span for a given scope.\n * NOTE: This should NOT be used directly, but is only used internally by the trace methods.\n */\nexport function _getSpanForScope(scope: ScopeWithMaybeSpan): Span | undefined {\n  return scope[SCOPE_SPAN_FIELD];\n}\n","/* eslint-disable max-lines */\nimport type { Client } from './client';\nimport { updateSession } from './session';\nimport type { Attachment } from './types-hoist/attachment';\nimport type { Breadcrumb } from './types-hoist/breadcrumb';\nimport type { Context, Contexts } from './types-hoist/context';\nimport type { DynamicSamplingContext } from './types-hoist/envelope';\nimport type { Event, EventHint } from './types-hoist/event';\nimport type { EventProcessor } from './types-hoist/eventprocessor';\nimport type { Extra, Extras } from './types-hoist/extra';\nimport type { Primitive } from './types-hoist/misc';\nimport type { RequestEventData } from './types-hoist/request';\nimport type { Session } from './types-hoist/session';\nimport type { SeverityLevel } from './types-hoist/severity';\nimport type { Span } from './types-hoist/span';\nimport type { PropagationContext } from './types-hoist/tracing';\nimport type { User } from './types-hoist/user';\nimport { isPlainObject } from './utils/is';\nimport { logger } from './utils/logger';\nimport { merge } from './utils/merge';\nimport { uuid4 } from './utils/misc';\nimport { generateTraceId } from './utils/propagationContext';\nimport { _getSpanForScope, _setSpanForScope } from './utils/spanOnScope';\nimport { truncate } from './utils/string';\nimport { dateTimestampInSeconds } from './utils/time';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * A context to be used for capturing an event.\n * This can either be a Scope, or a partial ScopeContext,\n * or a callback that receives the current scope and returns a new scope to use.\n */\nexport type CaptureContext = Scope | Partial<ScopeContext> | ((scope: Scope) => Scope);\n\n/**\n * Data that can be converted to a Scope.\n */\nexport interface ScopeContext {\n  user: User;\n  level: SeverityLevel;\n  extra: Extras;\n  contexts: Contexts;\n  tags: { [key: string]: Primitive };\n  fingerprint: string[];\n  propagationContext: PropagationContext;\n}\n\nexport interface SdkProcessingMetadata {\n  [key: string]: unknown;\n  requestSession?: {\n    status: 'ok' | 'errored' | 'crashed';\n  };\n  normalizedRequest?: RequestEventData;\n  dynamicSamplingContext?: Partial<DynamicSamplingContext>;\n  capturedSpanScope?: Scope;\n  capturedSpanIsolationScope?: Scope;\n  spanCountBeforeProcessing?: number;\n  ipAddress?: string;\n}\n\n/**\n * Normalized data of the Scope, ready to be used.\n */\nexport interface ScopeData {\n  eventProcessors: EventProcessor[];\n  breadcrumbs: Breadcrumb[];\n  user: User;\n  tags: { [key: string]: Primitive };\n  extra: Extras;\n  contexts: Contexts;\n  attachments: Attachment[];\n  propagationContext: PropagationContext;\n  sdkProcessingMetadata: SdkProcessingMetadata;\n  fingerprint: string[];\n  level?: SeverityLevel;\n  transactionName?: string;\n  span?: Span;\n}\n\n/**\n * Holds additional event information.\n */\nexport class Scope {\n  /** Flag if notifying is happening. */\n  protected _notifyingListeners: boolean;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void>;\n\n  /** Callback list that will be called during event processing. */\n  protected _eventProcessors: EventProcessor[];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[];\n\n  /** User */\n  protected _user: User;\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive };\n\n  /** Extra */\n  protected _extra: Extras;\n\n  /** Contexts */\n  protected _contexts: Contexts;\n\n  /** Attachments */\n  protected _attachments: Attachment[];\n\n  /** Propagation Context for distributed tracing */\n  protected _propagationContext: PropagationContext;\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  protected _sdkProcessingMetadata: SdkProcessingMetadata;\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  protected _level?: SeverityLevel;\n\n  /**\n   * Transaction Name\n   *\n   * IMPORTANT: The transaction name on the scope has nothing to do with root spans/transaction objects.\n   * It's purpose is to assign a transaction to the scope that's added to non-transaction events.\n   */\n  protected _transactionName?: string;\n\n  /** Session */\n  protected _session?: Session;\n\n  /** The client on this scope */\n  protected _client?: Client;\n\n  /** Contains the last event id of a captured event.  */\n  protected _lastEventId?: string;\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n  public constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = {\n      traceId: generateTraceId(),\n      sampleRand: Math.random(),\n    };\n  }\n\n  /**\n   * Clone all data from this scope into a new scope.\n   */\n  public clone(): Scope {\n    const newScope = new Scope();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    if (this._contexts.flags) {\n      // We need to copy the `values` array so insertions on a cloned scope\n      // won't affect the original array.\n      newScope._contexts.flags = {\n        values: [...this._contexts.flags.values],\n      };\n    }\n\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n    newScope._lastEventId = this._lastEventId;\n\n    _setSpanForScope(newScope, _getSpanForScope(this));\n\n    return newScope;\n  }\n\n  /**\n   * Update the client assigned to this scope.\n   * Note that not every scope will have a client assigned - isolation scopes & the global scope will generally not have a client,\n   * as well as manually created scopes.\n   */\n  public setClient(client: Client | undefined): void {\n    this._client = client;\n  }\n\n  /**\n   * Set the ID of the last captured error event.\n   * This is generally only captured on the isolation scope.\n   */\n  public setLastEventId(lastEventId: string | undefined): void {\n    this._lastEventId = lastEventId;\n  }\n\n  /**\n   * Get the client assigned to this scope.\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this._client as C | undefined;\n  }\n\n  /**\n   * Get the ID of the last captured error event.\n   * This is generally only available on the isolation scope.\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * Add an event processor that will be called before an event is sent.\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * Set the user for this scope.\n   * Set to `null` to unset the user.\n   */\n  public setUser(user: User | null): this {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Get the user from this scope.\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * Set an object that will be merged into existing tags on the scope,\n   * and will be sent as tags data with the event.\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Set a single tag that will be sent as tags data with the event.\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Set an object that will be merged into existing extra on the scope,\n   * and will be sent as extra data with the event.\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Set a single key:value extra entry that will be sent as extra data with the event.\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the fingerprint on the scope to send with the events.\n   * @param {string[]} fingerprint Fingerprint to group events in Sentry.\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the level on the scope for future events.\n   */\n  public setLevel(level: SeverityLevel): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the transaction name on the scope so that the name of e.g. taken server route or\n   * the page location is attached to future events.\n   *\n   * IMPORTANT: Calling this function does NOT change the name of the currently active\n   * root span. If you want to change the name of the active root span, use\n   * `Sentry.updateSpanName(rootSpan, 'new name')` instead.\n   *\n   * By default, the SDK updates the scope's transaction name automatically on sensible\n   * occasions, such as a page navigation or when handling a new request on the server.\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets context data with the given name.\n   * Data passed as context will be normalized. You can also pass `null` to unset the context.\n   * Note that context data will not be merged - calling `setContext` will overwrite an existing context with the same key.\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Set the session for the scope.\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Get the session from the scope.\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * Updates the scope with provided data. Can work in three variations:\n   * - plain object containing updatable attributes\n   * - Scope instance that'll extract the attributes from\n   * - callback function that'll receive the current scope as an argument and allow for modifications\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    const scopeInstance =\n      scopeToMerge instanceof Scope\n        ? scopeToMerge.getScopeData()\n        : isPlainObject(scopeToMerge)\n          ? (captureContext as ScopeContext)\n          : undefined;\n\n    const { tags, extra, user, contexts, level, fingerprint = [], propagationContext } = scopeInstance || {};\n\n    this._tags = { ...this._tags, ...tags };\n    this._extra = { ...this._extra, ...extra };\n    this._contexts = { ...this._contexts, ...contexts };\n\n    if (user && Object.keys(user).length) {\n      this._user = user;\n    }\n\n    if (level) {\n      this._level = level;\n    }\n\n    if (fingerprint.length) {\n      this._fingerprint = fingerprint;\n    }\n\n    if (propagationContext) {\n      this._propagationContext = propagationContext;\n    }\n\n    return this;\n  }\n\n  /**\n   * Clears the current scope and resets its properties.\n   * Note: The client will not be cleared.\n   */\n  public clear(): this {\n    // client is not cleared here on purpose!\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._session = undefined;\n    _setSpanForScope(this, undefined);\n    this._attachments = [];\n    this.setPropagationContext({ traceId: generateTraceId(), sampleRand: Math.random() });\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Adds a breadcrumb to the scope.\n   * By default, the last 100 breadcrumbs are kept.\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb: Breadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n      // Breadcrumb messages can theoretically be infinitely large and they're held in memory so we truncate them not to leak (too much) memory\n      message: breadcrumb.message ? truncate(breadcrumb.message, 2048) : breadcrumb.message,\n    };\n\n    this._breadcrumbs.push(mergedBreadcrumb);\n    if (this._breadcrumbs.length > maxCrumbs) {\n      this._breadcrumbs = this._breadcrumbs.slice(-maxCrumbs);\n      this._client?.recordDroppedEvent('buffer_overflow', 'log_item');\n    }\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * Get the last breadcrumb of the scope.\n   */\n  public getLastBreadcrumb(): Breadcrumb | undefined {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * Clear all breadcrumbs from the scope.\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Add an attachment to the scope.\n   */\n  public addAttachment(attachment: Attachment): this {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * Clear all attachments from the scope.\n   */\n  public clearAttachments(): this {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Get the data of this scope, which should be applied to an event during processing.\n   */\n  public getScopeData(): ScopeData {\n    return {\n      breadcrumbs: this._breadcrumbs,\n      attachments: this._attachments,\n      contexts: this._contexts,\n      tags: this._tags,\n      extra: this._extra,\n      user: this._user,\n      level: this._level,\n      fingerprint: this._fingerprint || [],\n      eventProcessors: this._eventProcessors,\n      propagationContext: this._propagationContext,\n      sdkProcessingMetadata: this._sdkProcessingMetadata,\n      transactionName: this._transactionName,\n      span: _getSpanForScope(this),\n    };\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry.\n   */\n  public setSDKProcessingMetadata(newData: SdkProcessingMetadata): this {\n    this._sdkProcessingMetadata = merge(this._sdkProcessingMetadata, newData, 2);\n    return this;\n  }\n\n  /**\n   * Add propagation context to the scope, used for distributed tracing\n   */\n  public setPropagationContext(context: PropagationContext): this {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * Get propagation context from the scope, used for distributed tracing\n   */\n  public getPropagationContext(): PropagationContext {\n    return this._propagationContext;\n  }\n\n  /**\n   * Capture an exception for this scope.\n   *\n   * @returns {string} The id of the captured Sentry event.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = hint?.event_id || uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a message for this scope.\n   *\n   * @returns {string} The id of the captured message.\n   */\n  public captureMessage(message: string, level?: SeverityLevel, hint?: EventHint): string {\n    const eventId = hint?.event_id || uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a Sentry event for this scope.\n   *\n   * @returns {string} The id of the captured event.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint?.event_id || uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n","import { getGlobalSingleton } from './carrier';\nimport { Scope } from './scope';\n\n/** Get the default current scope. */\nexport function getDefaultCurrentScope(): Scope {\n  return getGlobalSingleton('defaultCurrentScope', () => new Scope());\n}\n\n/** Get the default isolation scope. */\nexport function getDefaultIsolationScope(): Scope {\n  return getGlobalSingleton('defaultIsolationScope', () => new Scope());\n}\n","import type { Client } from '../client';\nimport { getDefaultCurrentScope, getDefaultIsolationScope } from '../defaultScopes';\nimport { Scope } from '../scope';\nimport { isThenable } from '../utils/is';\nimport { getMainCarrier, getSentryCarrier } from './../carrier';\nimport type { AsyncContextStrategy } from './types';\n\ninterface Layer {\n  client?: Client;\n  scope: Scope;\n}\n\n/**\n * This is an object that holds a stack of scopes.\n */\nexport class AsyncContextStack {\n  private readonly _stack: [Layer, ...Layer[]];\n  private _isolationScope: Scope;\n\n  public constructor(scope?: Scope, isolationScope?: Scope) {\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new Scope();\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new Scope();\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    // scope stack for domains or the process\n    this._stack = [{ scope: assignedScope }];\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Fork a scope for the stack.\n   */\n  public withScope<T>(callback: (scope: Scope) => T): T {\n    const scope = this._pushScope();\n\n    let maybePromiseResult: T;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      this._popScope();\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          this._popScope();\n          return res;\n        },\n        e => {\n          this._popScope();\n          throw e;\n        },\n      );\n    }\n\n    this._popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * Get the client of the stack.\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   */\n  public getScope(): Scope {\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * Get the isolation scope for the stack.\n   */\n  public getIsolationScope(): Scope {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1] as Layer;\n  }\n\n  /**\n   * Push a scope to the stack.\n   */\n  private _pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const scope = this.getScope().clone();\n    this._stack.push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * Pop a scope from the stack.\n   */\n  private _popScope(): boolean {\n    if (this._stack.length <= 1) return false;\n    return !!this._stack.pop();\n  }\n}\n\n/**\n * Get the global async context stack.\n * This will be removed during the v8 cycle and is only here to make migration easier.\n */\nfunction getAsyncContextStack(): AsyncContextStack {\n  const registry = getMainCarrier();\n  const sentry = getSentryCarrier(registry);\n\n  return (sentry.stack = sentry.stack || new AsyncContextStack(getDefaultCurrentScope(), getDefaultIsolationScope()));\n}\n\nfunction withScope<T>(callback: (scope: Scope) => T): T {\n  return getAsyncContextStack().withScope(callback);\n}\n\nfunction withSetScope<T>(scope: Scope, callback: (scope: Scope) => T): T {\n  const stack = getAsyncContextStack() as AsyncContextStack;\n  return stack.withScope(() => {\n    stack.getStackTop().scope = scope;\n    return callback(scope);\n  });\n}\n\nfunction withIsolationScope<T>(callback: (isolationScope: Scope) => T): T {\n  return getAsyncContextStack().withScope(() => {\n    return callback(getAsyncContextStack().getIsolationScope());\n  });\n}\n\n/**\n * Get the stack-based async context strategy.\n */\nexport function getStackAsyncContextStrategy(): AsyncContextStrategy {\n  return {\n    withIsolationScope,\n    withScope,\n    withSetScope,\n    withSetIsolationScope: <T>(_isolationScope: Scope, callback: (isolationScope: Scope) => T) => {\n      return withIsolationScope(callback);\n    },\n    getCurrentScope: () => getAsyncContextStack().getScope(),\n    getIsolationScope: () => getAsyncContextStack().getIsolationScope(),\n  };\n}\n","import type { Carrier } from './../carrier';\nimport { getMainCarrier, getSentryCarrier } from './../carrier';\nimport { getStackAsyncContextStrategy } from './stackStrategy';\nimport type { AsyncContextStrategy } from './types';\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nexport function setAsyncContextStrategy(strategy: AsyncContextStrategy | undefined): void {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  const sentry = getSentryCarrier(registry);\n  sentry.acs = strategy;\n}\n\n/**\n * Get the current async context strategy.\n * If none has been setup, the default will be used.\n */\nexport function getAsyncContextStrategy(carrier: Carrier): AsyncContextStrategy {\n  const sentry = getSentryCarrier(carrier);\n\n  if (sentry.acs) {\n    return sentry.acs;\n  }\n\n  // Otherwise, use the default one (stack)\n  return getStackAsyncContextStrategy();\n}\n","import { getAsyncContextStrategy } from './asyncContext';\nimport { getGlobalSingleton, getMainCarrier } from './carrier';\nimport type { Client } from './client';\nimport { Scope } from './scope';\nimport type { TraceContext } from './types-hoist/context';\nimport { generateSpanId } from './utils/propagationContext';\n\n/**\n * Get the currently active scope.\n */\nexport function getCurrentScope(): Scope {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  return acs.getCurrentScope();\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current execution context.\n */\nexport function getIsolationScope(): Scope {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  return acs.getIsolationScope();\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nexport function getGlobalScope(): Scope {\n  return getGlobalSingleton('globalScope', () => new Scope());\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n */\nexport function withScope<T>(callback: (scope: Scope) => T): T;\n/**\n * Set the given scope as the active scope in the callback.\n */\nexport function withScope<T>(scope: Scope | undefined, callback: (scope: Scope) => T): T;\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nexport function withScope<T>(\n  ...rest: [callback: (scope: Scope) => T] | [scope: Scope | undefined, callback: (scope: Scope) => T]\n): T {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n\n    if (!scope) {\n      return acs.withScope(callback);\n    }\n\n    return acs.withSetScope(scope, callback);\n  }\n\n  return acs.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n */\nexport function withIsolationScope<T>(callback: (isolationScope: Scope) => T): T;\n/**\n * Set the provided isolation scope as active in the given callback. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n *\n * If you pass in `undefined` as a scope, it will fork a new isolation scope, the same as if no scope is passed.\n */\nexport function withIsolationScope<T>(isolationScope: Scope | undefined, callback: (isolationScope: Scope) => T): T;\n/**\n * Either creates a new active isolation scope, or sets the given isolation scope as active scope in the given callback.\n */\nexport function withIsolationScope<T>(\n  ...rest:\n    | [callback: (isolationScope: Scope) => T]\n    | [isolationScope: Scope | undefined, callback: (isolationScope: Scope) => T]\n): T {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [isolationScope, callback] = rest;\n\n    if (!isolationScope) {\n      return acs.withIsolationScope(callback);\n    }\n\n    return acs.withSetIsolationScope(isolationScope, callback);\n  }\n\n  return acs.withIsolationScope(rest[0]);\n}\n\n/**\n * Get the currently active client.\n */\nexport function getClient<C extends Client>(): C | undefined {\n  return getCurrentScope().getClient<C>();\n}\n\n/**\n * Get a trace context for the given scope.\n */\nexport function getTraceContextFromScope(scope: Scope): TraceContext {\n  const propagationContext = scope.getPropagationContext();\n\n  const { traceId, parentSpanId, propagationSpanId } = propagationContext;\n\n  const traceContext: TraceContext = {\n    trace_id: traceId,\n    span_id: propagationSpanId || generateSpanId(),\n  };\n\n  if (parentSpanId) {\n    traceContext.parent_span_id = parentSpanId;\n  }\n\n  return traceContext;\n}\n","/**\n * Use this attribute to represent the source of a span.\n * Should be one of: custom, url, route, view, component, task, unknown\n *\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = 'sentry.source';\n\n/**\n * Attributes that holds the sample rate that was locally applied to a span.\n * If this attribute is not defined, it means that the span inherited a sampling decision.\n *\n * NOTE: Is only defined on root spans.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = 'sentry.sample_rate';\n\n/**\n * Attribute holding the sample rate of the previous trace.\n * This is used to sample consistently across subsequent traces in the browser SDK.\n *\n * Note: Only defined on root spans, if opted into consistent sampling\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE = 'sentry.previous_trace_sample_rate';\n\n/**\n * Use this attribute to represent the operation of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_OP = 'sentry.op';\n\n/**\n * Use this attribute to represent the origin of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = 'sentry.origin';\n\n/** The reason why an idle span finished. */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON = 'sentry.idle_span_finish_reason';\n\n/** The unit of a measurement, which may be stored as a TimedEvent. */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT = 'sentry.measurement_unit';\n\n/** The value of a measurement, which may be stored as a TimedEvent. */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE = 'sentry.measurement_value';\n\n/**\n * A custom span name set by users guaranteed to be taken over any automatically\n * inferred name. This attribute is removed before the span is sent.\n *\n * @internal only meant for internal SDK usage\n * @hidden\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME = 'sentry.custom_span_name';\n\n/**\n * The id of the profile that this span occurred in.\n */\nexport const SEMANTIC_ATTRIBUTE_PROFILE_ID = 'sentry.profile_id';\n\nexport const SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME = 'sentry.exclusive_time';\n\nexport const SEMANTIC_ATTRIBUTE_CACHE_HIT = 'cache.hit';\n\nexport const SEMANTIC_ATTRIBUTE_CACHE_KEY = 'cache.key';\n\nexport const SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE = 'cache.item_size';\n\n/** TODO: Remove these once we update to latest semantic conventions */\nexport const SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD = 'http.request.method';\nexport const SEMANTIC_ATTRIBUTE_URL_FULL = 'url.full';\n\n/**\n * A span link attribute to mark the link as a special span link.\n *\n * Known values:\n * - `previous_trace`: The span links to the frontend root span of the previous trace.\n * - `next_trace`: The span links to the frontend root span of the next trace. (Not set by the SDK)\n *\n * Other values may be set as appropriate.\n * @see https://develop.sentry.dev/sdk/telemetry/traces/span-links/#link-types\n */\nexport const SEMANTIC_LINK_ATTRIBUTE_LINK_TYPE = 'sentry.link.type';\n","import type { Span } from '../types-hoist/span';\nimport type { SpanStatus } from '../types-hoist/spanStatus';\n\nexport const SPAN_STATUS_UNSET = 0;\nexport const SPAN_STATUS_OK = 1;\nexport const SPAN_STATUS_ERROR = 2;\n\n/**\n * Converts a HTTP status code into a sentry status with a message.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\n// https://develop.sentry.dev/sdk/event-payloads/span/\nexport function getSpanStatusFromHttpCode(httpStatus: number): SpanStatus {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return { code: SPAN_STATUS_OK };\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return { code: SPAN_STATUS_ERROR, message: 'unauthenticated' };\n      case 403:\n        return { code: SPAN_STATUS_ERROR, message: 'permission_denied' };\n      case 404:\n        return { code: SPAN_STATUS_ERROR, message: 'not_found' };\n      case 409:\n        return { code: SPAN_STATUS_ERROR, message: 'already_exists' };\n      case 413:\n        return { code: SPAN_STATUS_ERROR, message: 'failed_precondition' };\n      case 429:\n        return { code: SPAN_STATUS_ERROR, message: 'resource_exhausted' };\n      case 499:\n        return { code: SPAN_STATUS_ERROR, message: 'cancelled' };\n      default:\n        return { code: SPAN_STATUS_ERROR, message: 'invalid_argument' };\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return { code: SPAN_STATUS_ERROR, message: 'unimplemented' };\n      case 503:\n        return { code: SPAN_STATUS_ERROR, message: 'unavailable' };\n      case 504:\n        return { code: SPAN_STATUS_ERROR, message: 'deadline_exceeded' };\n      default:\n        return { code: SPAN_STATUS_ERROR, message: 'internal_error' };\n    }\n  }\n\n  return { code: SPAN_STATUS_ERROR, message: 'unknown_error' };\n}\n\n/**\n * Sets the Http status attributes on the current span based on the http code.\n * Additionally, the span's status is updated, depending on the http code.\n */\nexport function setHttpStatus(span: Span, httpStatus: number): void {\n  span.setAttribute('http.response.status_code', httpStatus);\n\n  const spanStatus = getSpanStatusFromHttpCode(httpStatus);\n  if (spanStatus.message !== 'unknown_error') {\n    span.setStatus(spanStatus);\n  }\n}\n","import type { Scope } from '../scope';\nimport type { Span } from '../types-hoist/span';\nimport { addNonEnumerableProperty } from '../utils/object';\n\nconst SCOPE_ON_START_SPAN_FIELD = '_sentryScope';\nconst ISOLATION_SCOPE_ON_START_SPAN_FIELD = '_sentryIsolationScope';\n\ntype SpanWithScopes = Span & {\n  [SCOPE_ON_START_SPAN_FIELD]?: Scope;\n  [ISOLATION_SCOPE_ON_START_SPAN_FIELD]?: Scope;\n};\n\n/** Store the scope & isolation scope for a span, which can the be used when it is finished. */\nexport function setCapturedScopesOnSpan(span: Span | undefined, scope: Scope, isolationScope: Scope): void {\n  if (span) {\n    addNonEnumerableProperty(span, ISOLATION_SCOPE_ON_START_SPAN_FIELD, isolationScope);\n    addNonEnumerableProperty(span, SCOPE_ON_START_SPAN_FIELD, scope);\n  }\n}\n\n/**\n * Grabs the scope and isolation scope off a span that were active when the span was started.\n */\nexport function getCapturedScopesOnSpan(span: Span): { scope?: Scope; isolationScope?: Scope } {\n  return {\n    scope: (span as SpanWithScopes)[SCOPE_ON_START_SPAN_FIELD],\n    isolationScope: (span as SpanWithScopes)[ISOLATION_SCOPE_ON_START_SPAN_FIELD],\n  };\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport type { DynamicSamplingContext } from '../types-hoist/envelope';\nimport { isString } from './is';\nimport { logger } from './logger';\n\nexport const SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nexport const SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nexport const MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nexport function baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader: string | string[] | number | null | undefined | boolean,\n): Partial<DynamicSamplingContext> | undefined {\n  const baggageObject = parseBaggageHeader(baggageHeader);\n\n  if (!baggageObject) {\n    return undefined;\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce<Record<string, string>>((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext as Partial<DynamicSamplingContext>;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nexport function dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext?: Partial<DynamicSamplingContext>,\n): string | undefined {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce<Record<string, string>>(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Take a baggage header and parse it into an object.\n */\nexport function parseBaggageHeader(\n  baggageHeader: string | string[] | number | null | undefined | boolean,\n): Record<string, string> | undefined {\n  if (!baggageHeader || (!isString(baggageHeader) && !Array.isArray(baggageHeader))) {\n    return undefined;\n  }\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    return baggageHeader.reduce<Record<string, string>>((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      Object.entries(currBaggageObject).forEach(([key, value]) => {\n        acc[key] = value;\n      });\n      return acc;\n    }, {});\n  }\n\n  return baggageHeaderToObject(baggageHeader);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader: string): Record<string, string> {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry =>\n      baggageEntry.split('=').map(keyOrValue => {\n        try {\n          return decodeURIComponent(keyOrValue.trim());\n        } catch {\n          // We ignore errors here, e.g. if the value cannot be URL decoded.\n          // This will then be skipped in the next step\n          return;\n        }\n      }),\n    )\n    .reduce<Record<string, string>>((acc, [key, value]) => {\n      if (key && value) {\n        acc[key] = value;\n      }\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nexport function objectToBaggageHeader(object: Record<string, string>): string | undefined {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n","/**\n * Parse a sample rate from a given value.\n * This will either return a boolean or number sample rate, if the sample rate is valid (between 0 and 1).\n * If a string is passed, we try to convert it to a number.\n *\n * Any invalid sample rate will return `undefined`.\n */\nexport function parseSampleRate(sampleRate: unknown): number | undefined {\n  if (typeof sampleRate === 'boolean') {\n    return Number(sampleRate);\n  }\n\n  const rate = typeof sampleRate === 'string' ? parseFloat(sampleRate) : sampleRate;\n  if (typeof rate !== 'number' || isNaN(rate) || rate < 0 || rate > 1) {\n    return undefined;\n  }\n\n  return rate;\n}\n","import { getAsyncContextStrategy } from '../asyncContext';\nimport { getMainCarrier } from '../carrier';\nimport { getCurrentScope } from '../currentScopes';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n} from '../semanticAttributes';\nimport type { SentrySpan } from '../tracing/sentrySpan';\nimport { SPAN_STATUS_OK, SPAN_STATUS_UNSET } from '../tracing/spanstatus';\nimport { getCapturedScopesOnSpan } from '../tracing/utils';\nimport type { TraceContext } from '../types-hoist/context';\nimport type { SpanLink, SpanLinkJSON } from '../types-hoist/link';\nimport type { Span, SpanAttributes, SpanJSON, SpanOrigin, SpanTimeInput } from '../types-hoist/span';\nimport type { SpanStatus } from '../types-hoist/spanStatus';\nimport { consoleSandbox } from '../utils/logger';\nimport { addNonEnumerableProperty } from '../utils/object';\nimport { generateSpanId } from '../utils/propagationContext';\nimport { timestampInSeconds } from '../utils/time';\nimport { generateSentryTraceHeader } from '../utils/tracing';\nimport { _getSpanForScope } from './spanOnScope';\n\n// These are aligned with OpenTelemetry trace flags\nexport const TRACE_FLAG_NONE = 0x0;\nexport const TRACE_FLAG_SAMPLED = 0x1;\n\nlet hasShownSpanDropWarning = false;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n * By default, this will only include trace_id, span_id & parent_span_id.\n * If `includeAllData` is true, it will also include data, op, status & origin.\n */\nexport function spanToTransactionTraceContext(span: Span): TraceContext {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, origin, links } = spanToJSON(span);\n\n  return {\n    parent_span_id,\n    span_id,\n    trace_id,\n    data,\n    op,\n    status,\n    origin,\n    links,\n  };\n}\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in a non-transaction event.\n */\nexport function spanToTraceContext(span: Span): TraceContext {\n  const { spanId, traceId: trace_id, isRemote } = span.spanContext();\n\n  // If the span is remote, we use a random/virtual span as span_id to the trace context,\n  // and the remote span as parent_span_id\n  const parent_span_id = isRemote ? spanId : spanToJSON(span).parent_span_id;\n  const scope = getCapturedScopesOnSpan(span).scope;\n\n  const span_id = isRemote ? scope?.getPropagationContext().propagationSpanId || generateSpanId() : spanId;\n\n  return {\n    parent_span_id,\n    span_id,\n    trace_id,\n  };\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nexport function spanToTraceHeader(span: Span): string {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\n/**\n *  Converts the span links array to a flattened version to be sent within an envelope.\n *\n *  If the links array is empty, it returns `undefined` so the empty value can be dropped before it's sent.\n */\nexport function convertSpanLinksForEnvelope(links?: SpanLink[]): SpanLinkJSON[] | undefined {\n  if (links && links.length > 0) {\n    return links.map(({ context: { spanId, traceId, traceFlags, ...restContext }, attributes }) => ({\n      span_id: spanId,\n      trace_id: traceId,\n      sampled: traceFlags === TRACE_FLAG_SAMPLED,\n      attributes,\n      ...restContext,\n    }));\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Convert a span time input into a timestamp in seconds.\n */\nexport function spanTimeInputToSeconds(input: SpanTimeInput | undefined): number {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return timestampInSeconds();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n */\n// Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n// This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n// And `spanToJSON` needs the Span class from `span.ts` to check here.\nexport function spanToJSON(span: Span): SpanJSON {\n  if (spanIsSentrySpan(span)) {\n    return span.getSpanJSON();\n  }\n\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n\n  // Handle a span from @opentelemetry/sdk-base-trace's `Span` class\n  if (spanIsOpenTelemetrySdkTraceBaseSpan(span)) {\n    const { attributes, startTime, name, endTime, status, links } = span;\n\n    // In preparation for the next major of OpenTelemetry, we want to support\n    // looking up the parent span id according to the new API\n    // In OTel v1, the parent span id is accessed as `parentSpanId`\n    // In OTel v2, the parent span id is accessed as `spanId` on the `parentSpanContext`\n    const parentSpanId =\n      'parentSpanId' in span\n        ? span.parentSpanId\n        : 'parentSpanContext' in span\n          ? (span.parentSpanContext as { spanId?: string } | undefined)?.spanId\n          : undefined;\n\n    return {\n      span_id,\n      trace_id,\n      data: attributes,\n      description: name,\n      parent_span_id: parentSpanId,\n      start_timestamp: spanTimeInputToSeconds(startTime),\n      // This is [0,0] by default in OTEL, in which case we want to interpret this as no end time\n      timestamp: spanTimeInputToSeconds(endTime) || undefined,\n      status: getStatusMessage(status),\n      op: attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP],\n      origin: attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] as SpanOrigin | undefined,\n      links: convertSpanLinksForEnvelope(links),\n    };\n  }\n\n  // Finally, at least we have `spanContext()`....\n  // This should not actually happen in reality, but we need to handle it for type safety.\n  return {\n    span_id,\n    trace_id,\n    start_timestamp: 0,\n    data: {},\n  };\n}\n\nfunction spanIsOpenTelemetrySdkTraceBaseSpan(span: Span): span is OpenTelemetrySdkTraceBaseSpan {\n  const castSpan = span as Partial<OpenTelemetrySdkTraceBaseSpan>;\n  return !!castSpan.attributes && !!castSpan.startTime && !!castSpan.name && !!castSpan.endTime && !!castSpan.status;\n}\n\n/** Exported only for tests. */\nexport interface OpenTelemetrySdkTraceBaseSpan extends Span {\n  attributes: SpanAttributes;\n  startTime: SpanTimeInput;\n  name: string;\n  status: SpanStatus;\n  endTime: SpanTimeInput;\n  parentSpanId?: string;\n  links?: SpanLink[];\n}\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSentrySpan(span: Span): span is SentrySpan {\n  return typeof (span as SentrySpan).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nexport function spanIsSampled(span: Span): boolean {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  return traceFlags === TRACE_FLAG_SAMPLED;\n}\n\n/** Get the status message to use for a JSON representation of a span. */\nexport function getStatusMessage(status: SpanStatus | undefined): string | undefined {\n  if (!status || status.code === SPAN_STATUS_UNSET) {\n    return undefined;\n  }\n\n  if (status.code === SPAN_STATUS_OK) {\n    return 'ok';\n  }\n\n  return status.message || 'unknown_error';\n}\n\nconst CHILD_SPANS_FIELD = '_sentryChildSpans';\nconst ROOT_SPAN_FIELD = '_sentryRootSpan';\n\ntype SpanWithPotentialChildren = Span & {\n  [CHILD_SPANS_FIELD]?: Set<Span>;\n  [ROOT_SPAN_FIELD]?: Span;\n};\n\n/**\n * Adds an opaque child span reference to a span.\n */\nexport function addChildSpanToSpan(span: SpanWithPotentialChildren, childSpan: Span): void {\n  // We store the root span reference on the child span\n  // We need this for `getRootSpan()` to work\n  const rootSpan = span[ROOT_SPAN_FIELD] || span;\n  addNonEnumerableProperty(childSpan as SpanWithPotentialChildren, ROOT_SPAN_FIELD, rootSpan);\n\n  // We store a list of child spans on the parent span\n  // We need this for `getSpanDescendants()` to work\n  if (span[CHILD_SPANS_FIELD]) {\n    span[CHILD_SPANS_FIELD].add(childSpan);\n  } else {\n    addNonEnumerableProperty(span, CHILD_SPANS_FIELD, new Set([childSpan]));\n  }\n}\n\n/** This is only used internally by Idle Spans. */\nexport function removeChildSpanFromSpan(span: SpanWithPotentialChildren, childSpan: Span): void {\n  if (span[CHILD_SPANS_FIELD]) {\n    span[CHILD_SPANS_FIELD].delete(childSpan);\n  }\n}\n\n/**\n * Returns an array of the given span and all of its descendants.\n */\nexport function getSpanDescendants(span: SpanWithPotentialChildren): Span[] {\n  const resultSet = new Set<Span>();\n\n  function addSpanChildren(span: SpanWithPotentialChildren): void {\n    // This exit condition is required to not infinitely loop in case of a circular dependency.\n    if (resultSet.has(span)) {\n      return;\n      // We want to ignore unsampled spans (e.g. non recording spans)\n    } else if (spanIsSampled(span)) {\n      resultSet.add(span);\n      const childSpans = span[CHILD_SPANS_FIELD] ? Array.from(span[CHILD_SPANS_FIELD]) : [];\n      for (const childSpan of childSpans) {\n        addSpanChildren(childSpan);\n      }\n    }\n  }\n\n  addSpanChildren(span);\n\n  return Array.from(resultSet);\n}\n\n/**\n * Returns the root span of a given span.\n */\nexport function getRootSpan(span: SpanWithPotentialChildren): Span {\n  return span[ROOT_SPAN_FIELD] || span;\n}\n\n/**\n * Returns the currently active span.\n */\nexport function getActiveSpan(): Span | undefined {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  if (acs.getActiveSpan) {\n    return acs.getActiveSpan();\n  }\n\n  return _getSpanForScope(getCurrentScope());\n}\n\n/**\n * Logs a warning once if `beforeSendSpan` is used to drop spans.\n */\nexport function showSpanDropWarning(): void {\n  if (!hasShownSpanDropWarning) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Sentry] Returning null from `beforeSendSpan` is disallowed. To drop certain spans, configure the respective integrations directly.',\n      );\n    });\n    hasShownSpanDropWarning = true;\n  }\n}\n\n/**\n * Updates the name of the given span and ensures that the span name is not\n * overwritten by the Sentry SDK.\n *\n * Use this function instead of `span.updateName()` if you want to make sure that\n * your name is kept. For some spans, for example root `http.server` spans the\n * Sentry SDK would otherwise overwrite the span name with a high-quality name\n * it infers when the span ends.\n *\n * Use this function in server code or when your span is started on the server\n * and on the client (browser). If you only update a span name on the client,\n * you can also use `span.updateName()` the SDK does not overwrite the name.\n *\n * @param span - The span to update the name of.\n * @param name - The name to set on the span.\n */\nexport function updateSpanName(span: Span, name: string): void {\n  span.updateName(name);\n  span.setAttributes({\n    [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'custom',\n    [SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME]: name,\n  });\n}\n","import { getClient } from '../currentScopes';\nimport type { Options } from '../types-hoist/options';\n\n// Treeshakable guard to remove all code related to tracing\ndeclare const __SENTRY_TRACING__: boolean | undefined;\n\n/**\n * Determines if span recording is currently enabled.\n *\n * Spans are recorded when at least one of `tracesSampleRate` and `tracesSampler`\n * is defined in the SDK config. This function does not make any assumption about\n * sampling decisions, it only checks if the SDK is configured to record spans.\n *\n * Important: This function only determines if span recording is enabled. Trace\n * continuation and propagation is separately controlled and not covered by this function.\n * If this function returns `false`, traces can still be propagated (which is what\n * we refer to by \"Tracing without Performance\")\n * @see https://develop.sentry.dev/sdk/telemetry/traces/tracing-without-performance/\n *\n * @param maybeOptions An SDK options object to be passed to this function.\n * If this option is not provided, the function will use the current client's options.\n */\nexport function hasSpansEnabled(\n  maybeOptions?: Pick<Options, 'tracesSampleRate' | 'tracesSampler'> | undefined,\n): boolean {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const options = maybeOptions || getClient()?.getOptions();\n  return (\n    !!options &&\n    // Note: This check is `!= null`, meaning \"nullish\". `0` is not \"nullish\", `undefined` and `null` are. (This comment was brought to you by 15 minutes of questioning life)\n    (options.tracesSampleRate != null || !!options.tracesSampler)\n  );\n}\n\n/**\n * @see JSDoc of `hasSpansEnabled`\n * @deprecated Use `hasSpansEnabled` instead, which is a more accurately named version of this function.\n * This function will be removed in the next major version of the SDK.\n */\n// TODO(v10): Remove this export\nexport const hasTracingEnabled = hasSpansEnabled;\n","export const DEFAULT_ENVIRONMENT = 'production';\n","import { DEBUG_BUILD } from '../debug-build';\nimport type { DsnComponents, DsnLike, DsnProtocol } from '../types-hoist/dsn';\nimport { consoleSandbox, logger } from './logger';\n\n/** Regular expression used to extract org ID from a DSN host. */\nconst ORG_ID_REGEX = /^o(\\d+)\\./;\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol?: string): protocol is DsnProtocol {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nexport function dsnToString(dsn: DsnComponents, withPassword: boolean = false): string {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nexport function dsnFromString(str: string): DsnComponents | undefined {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host = '', port = '', lastPath = ''] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() as string;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n}\n\nfunction dsnFromComponents(components: DsnComponents): DsnComponents {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn: DsnComponents): boolean {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents: ReadonlyArray<keyof DsnComponents> = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Extract the org ID from a DSN host.\n *\n * @param host The host from a DSN\n * @returns The org ID if found, undefined otherwise\n */\nexport function extractOrgIdFromDsnHost(host: string): string | undefined {\n  const match = host.match(ORG_ID_REGEX);\n\n  return match?.[1];\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nexport function makeDsn(from: DsnLike): DsnComponents | undefined {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n","import type { Client } from '../client';\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getClient } from '../currentScopes';\nimport type { Scope } from '../scope';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE,\n  SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n} from '../semanticAttributes';\nimport type { DynamicSamplingContext } from '../types-hoist/envelope';\nimport type { Span } from '../types-hoist/span';\nimport { baggageHeaderToDynamicSamplingContext, dynamicSamplingContextToSentryBaggageHeader } from '../utils/baggage';\nimport { extractOrgIdFromDsnHost } from '../utils/dsn';\nimport { hasSpansEnabled } from '../utils/hasSpansEnabled';\nimport { addNonEnumerableProperty } from '../utils/object';\nimport { getRootSpan, spanIsSampled, spanToJSON } from '../utils/spanUtils';\nimport { getCapturedScopesOnSpan } from './utils';\n\n/**\n * If you change this value, also update the terser plugin config to\n * avoid minification of the object property!\n */\nconst FROZEN_DSC_FIELD = '_frozenDsc';\n\ntype SpanWithMaybeDsc = Span & {\n  [FROZEN_DSC_FIELD]?: Partial<DynamicSamplingContext> | undefined;\n};\n\n/**\n * Freeze the given DSC on the given span.\n */\nexport function freezeDscOnSpan(span: Span, dsc: Partial<DynamicSamplingContext>): void {\n  const spanWithMaybeDsc = span as SpanWithMaybeDsc;\n  addNonEnumerableProperty(spanWithMaybeDsc, FROZEN_DSC_FIELD, dsc);\n}\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nexport function getDynamicSamplingContextFromClient(trace_id: string, client: Client): DynamicSamplingContext {\n  const options = client.getOptions();\n\n  const { publicKey: public_key, host } = client.getDsn() || {};\n\n  let org_id: string | undefined;\n  if (options.orgId) {\n    org_id = String(options.orgId);\n  } else if (host) {\n    org_id = extractOrgIdFromDsnHost(host);\n  }\n\n  // Instead of conditionally adding non-undefined values, we add them and then remove them if needed\n  // otherwise, the order of baggage entries changes, which \"breaks\" a bunch of tests etc.\n  const dsc: DynamicSamplingContext = {\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    public_key,\n    trace_id,\n    org_id,\n  };\n\n  client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * Get the dynamic sampling context for the currently active scopes.\n */\nexport function getDynamicSamplingContextFromScope(client: Client, scope: Scope): Partial<DynamicSamplingContext> {\n  const propagationContext = scope.getPropagationContext();\n  return propagationContext.dsc || getDynamicSamplingContextFromClient(propagationContext.traceId, client);\n}\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nexport function getDynamicSamplingContextFromSpan(span: Span): Readonly<Partial<DynamicSamplingContext>> {\n  const client = getClient();\n  if (!client) {\n    return {};\n  }\n\n  const rootSpan = getRootSpan(span);\n  const rootSpanJson = spanToJSON(rootSpan);\n  const rootSpanAttributes = rootSpanJson.data;\n  const traceState = rootSpan.spanContext().traceState;\n\n  // The span sample rate that was locally applied to the root span should also always be applied to the DSC, even if the DSC is frozen.\n  // This is so that the downstream traces/services can use parentSampleRate in their `tracesSampler` to make consistent sampling decisions across the entire trace.\n  const rootSpanSampleRate =\n    traceState?.get('sentry.sample_rate') ??\n    rootSpanAttributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] ??\n    rootSpanAttributes[SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE];\n\n  function applyLocalSampleRateToDsc(dsc: Partial<DynamicSamplingContext>): Partial<DynamicSamplingContext> {\n    if (typeof rootSpanSampleRate === 'number' || typeof rootSpanSampleRate === 'string') {\n      dsc.sample_rate = `${rootSpanSampleRate}`;\n    }\n    return dsc;\n  }\n\n  // For core implementation, we freeze the DSC onto the span as a non-enumerable property\n  const frozenDsc = (rootSpan as SpanWithMaybeDsc)[FROZEN_DSC_FIELD];\n  if (frozenDsc) {\n    return applyLocalSampleRateToDsc(frozenDsc);\n  }\n\n  // For OpenTelemetry, we freeze the DSC on the trace state\n  const traceStateDsc = traceState?.get('sentry.dsc');\n\n  // If the span has a DSC, we want it to take precedence\n  const dscOnTraceState = traceStateDsc && baggageHeaderToDynamicSamplingContext(traceStateDsc);\n\n  if (dscOnTraceState) {\n    return applyLocalSampleRateToDsc(dscOnTraceState);\n  }\n\n  // Else, we generate it from the span\n  const dsc = getDynamicSamplingContextFromClient(span.spanContext().traceId, client);\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const source = rootSpanAttributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  const name = rootSpanJson.description;\n  if (source !== 'url' && name) {\n    dsc.transaction = name;\n  }\n\n  // How can we even land here with hasSpansEnabled() returning false?\n  // Otel creates a Non-recording span in Tracing Without Performance mode when handling incoming requests\n  // So we end up with an active span that is not sampled (neither positively nor negatively)\n  if (hasSpansEnabled()) {\n    dsc.sampled = String(spanIsSampled(rootSpan));\n    dsc.sample_rand =\n      // In OTEL we store the sample rand on the trace state because we cannot access scopes for NonRecordingSpans\n      // The Sentry OTEL SpanSampler takes care of writing the sample rand on the root span\n      traceState?.get('sentry.sample_rand') ??\n      // On all other platforms we can actually get the scopes from a root span (we use this as a fallback)\n      getCapturedScopesOnSpan(rootSpan).scope?.getPropagationContext().sampleRand.toString();\n  }\n\n  applyLocalSampleRateToDsc(dsc);\n\n  client.emit('createDsc', dsc, rootSpan);\n\n  return dsc;\n}\n\n/**\n * Convert a Span to a baggage header.\n */\nexport function spanToBaggageHeader(span: Span): string | undefined {\n  const dsc = getDynamicSamplingContextFromSpan(span);\n  return dynamicSamplingContextToSentryBaggageHeader(dsc);\n}\n","import type { Primitive } from '../types-hoist/misc';\nimport { isSyntheticEvent, isVueViewModel } from './is';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor?: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\ntype MemoFunc = [\n  // memoize\n  (obj: object) => boolean,\n  // unmemoize\n  (obj: object) => void,\n];\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normalized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function normalize(input: unknown, depth: number = 100, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    ['boolean', 'string'].includes(typeof value) ||\n    (typeof value === 'number' && Number.isFinite(value))\n  ) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value as ObjOrArray<unknown>)['__sentry_skip_normalization__']) {\n    return value as ObjOrArray<unknown>;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] as number)\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value as unknown & { toJSON?: () => unknown };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value as ObjOrArray<unknown>);\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && !Number.isFinite(value)) {\n      return `[${value}]`;\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value: unknown): string {\n  const prototype: Prototype | null = Object.getPrototypeOf(value);\n\n  return prototype?.constructor ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nexport function normalizeUrlToBase(url: string, basePath: string): string {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch (_Oo) {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder(): MemoFunc {\n  const inner = new WeakSet<object>();\n  function memoize(obj: object): boolean {\n    if (inner.has(obj)) {\n      return true;\n    }\n    inner.add(obj);\n    return false;\n  }\n\n  function unmemoize(obj: object): void {\n    inner.delete(obj);\n  }\n  return [memoize, unmemoize];\n}\n","import { getSentryCarrier } from '../carrier';\nimport type { Attachment } from '../types-hoist/attachment';\nimport type { DataCategory } from '../types-hoist/datacategory';\nimport type { DsnComponents } from '../types-hoist/dsn';\nimport type {\n  AttachmentItem,\n  BaseEnvelopeHeaders,\n  BaseEnvelopeItemHeaders,\n  Envelope,\n  EnvelopeItemType,\n  EventEnvelopeHeaders,\n  SpanItem,\n} from '../types-hoist/envelope';\nimport type { Event } from '../types-hoist/event';\nimport type { SdkInfo } from '../types-hoist/sdkinfo';\nimport type { SdkMetadata } from '../types-hoist/sdkmetadata';\nimport type { SpanJSON } from '../types-hoist/span';\nimport { dsnToString } from './dsn';\nimport { normalize } from './normalize';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function createEnvelope<E extends Envelope>(headers: E[0], items: E[1] = []): E {\n  return [headers, items] as E;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function addItemToEnvelope<E extends Envelope>(envelope: E, newItem: E[1][number]): E {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] as unknown as E;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nexport function forEachEnvelopeItem<E extends Envelope>(\n  envelope: Envelope,\n  callback: (envelopeItem: E[1][number], envelopeItemType: E[1][number][0]['type']) => boolean | void,\n): boolean {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nexport function envelopeContainsItemType(envelope: Envelope, types: EnvelopeItemType[]): boolean {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8 array.\n */\nfunction encodeUTF8(input: string): Uint8Array {\n  const carrier = getSentryCarrier(GLOBAL_OBJ);\n  return carrier.encodePolyfill ? carrier.encodePolyfill(input) : new TextEncoder().encode(input);\n}\n\n/**\n * Decode a UTF8 array to string.\n */\nfunction decodeUTF8(input: Uint8Array): string {\n  const carrier = getSentryCarrier(GLOBAL_OBJ);\n  return carrier.decodePolyfill ? carrier.decodePolyfill(input) : new TextDecoder().decode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nexport function serializeEnvelope(envelope: Envelope): string | Uint8Array {\n  const [envHeaders, items] = envelope;\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts: string | Uint8Array[] = JSON.stringify(envHeaders);\n\n  function append(next: string | Uint8Array): void {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload: string;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.stringify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers: Uint8Array[]): Uint8Array {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nexport function parseEnvelope(env: string | Uint8Array): Envelope {\n  let buffer = typeof env === 'string' ? encodeUTF8(env) : env;\n\n  function readBinary(length: number): Uint8Array {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson<T>(): T {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(decodeUTF8(readBinary(i))) as T;\n  }\n\n  const envelopeHeader = readJson<BaseEnvelopeHeaders>();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items: [any, any][] = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson<BaseEnvelopeItemHeaders>();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates envelope item for a single span\n */\nexport function createSpanEnvelopeItem(spanJson: Partial<SpanJSON>): SpanItem {\n  const spanHeaders: SpanItem[0] = {\n    type: 'span',\n  };\n\n  return [spanHeaders, spanJson];\n}\n\n/**\n * Creates attachment envelope items\n */\nexport function createAttachmentEnvelopeItem(attachment: Attachment): AttachmentItem {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data) : attachment.data;\n\n  return [\n    {\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    },\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP: Record<EnvelopeItemType, DataCategory> = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  profile_chunk: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  raw_security: 'security',\n  log: 'log_item',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nexport function envelopeItemTypeToDataCategory(type: EnvelopeItemType): DataCategory {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nexport function getSdkMetadataForEnvelopeHeader(metadataOrEvent?: SdkMetadata | Event): SdkInfo | undefined {\n  if (!metadataOrEvent?.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nexport function createEventEnvelopeHeaders(\n  event: Event,\n  sdkInfo: SdkInfo | undefined,\n  tunnel: string | undefined,\n  dsn?: DsnComponents,\n): EventEnvelopeHeaders {\n  const dynamicSamplingContext = event.sdkProcessingMetadata?.dynamicSamplingContext;\n  return {\n    event_id: event.event_id as string,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dynamicSamplingContext,\n    }),\n  };\n}\n","import type { Client } from './client';\nimport { getDynamicSamplingContextFromSpan } from './tracing/dynamicSamplingContext';\nimport type { SentrySpan } from './tracing/sentrySpan';\nimport type { LegacyCSPReport } from './types-hoist/csp';\nimport type { DsnComponents } from './types-hoist/dsn';\nimport type {\n  DynamicSamplingContext,\n  EventEnvelope,\n  EventItem,\n  RawSecurityEnvelope,\n  RawSecurityItem,\n  SessionEnvelope,\n  SessionItem,\n  SpanEnvelope,\n  SpanItem,\n} from './types-hoist/envelope';\nimport type { Event } from './types-hoist/event';\nimport type { SdkInfo } from './types-hoist/sdkinfo';\nimport type { SdkMetadata } from './types-hoist/sdkmetadata';\nimport type { Session, SessionAggregates } from './types-hoist/session';\nimport { dsnToString } from './utils/dsn';\nimport {\n  createEnvelope,\n  createEventEnvelopeHeaders,\n  createSpanEnvelopeItem,\n  getSdkMetadataForEnvelopeHeader,\n} from './utils/envelope';\nimport { uuid4 } from './utils/misc';\nimport { showSpanDropWarning, spanToJSON } from './utils/spanUtils';\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event: Event, sdkInfo?: SdkInfo): Event {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nexport function createSessionEnvelope(\n  session: Session | SessionAggregates,\n  dsn?: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): SessionEnvelope {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const envelopeItem: SessionItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];\n\n  return createEnvelope<SessionEnvelope>(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nexport function createEventEnvelope(\n  event: Event,\n  dsn?: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): EventEnvelope {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjust a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata?.sdk);\n\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem: EventItem = [{ type: eventType }, event];\n  return createEnvelope<EventEnvelope>(envelopeHeaders, [eventItem]);\n}\n\n/**\n * Create envelope from Span item.\n *\n * Takes an optional client and runs spans through `beforeSendSpan` if available.\n */\nexport function createSpanEnvelope(spans: [SentrySpan, ...SentrySpan[]], client?: Client): SpanEnvelope {\n  function dscHasRequiredProps(dsc: Partial<DynamicSamplingContext>): dsc is DynamicSamplingContext {\n    return !!dsc.trace_id && !!dsc.public_key;\n  }\n\n  // For the moment we'll obtain the DSC from the first span in the array\n  // This might need to be changed if we permit sending multiple spans from\n  // different segments in one envelope\n  const dsc = getDynamicSamplingContextFromSpan(spans[0]);\n\n  const dsn = client?.getDsn();\n  const tunnel = client?.getOptions().tunnel;\n\n  const headers: SpanEnvelope[0] = {\n    sent_at: new Date().toISOString(),\n    ...(dscHasRequiredProps(dsc) && { trace: dsc }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const beforeSendSpan = client?.getOptions().beforeSendSpan;\n  const convertToSpanJSON = beforeSendSpan\n    ? (span: SentrySpan) => {\n        const spanJson = spanToJSON(span);\n        const processedSpan = beforeSendSpan(spanJson);\n\n        if (!processedSpan) {\n          showSpanDropWarning();\n          return spanJson;\n        }\n\n        return processedSpan;\n      }\n    : spanToJSON;\n\n  const items: SpanItem[] = [];\n  for (const span of spans) {\n    const spanJson = convertToSpanJSON(span);\n    if (spanJson) {\n      items.push(createSpanEnvelopeItem(spanJson));\n    }\n  }\n\n  return createEnvelope<SpanEnvelope>(headers, items);\n}\n\n/**\n * Create an Envelope from a CSP report.\n */\nexport function createRawSecurityEnvelope(\n  report: LegacyCSPReport,\n  dsn: DsnComponents,\n  tunnel?: string,\n  release?: string,\n  environment?: string,\n): RawSecurityEnvelope {\n  const envelopeHeaders = {\n    event_id: uuid4(),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const eventItem: RawSecurityItem = [\n    { type: 'raw_security', sentry_release: release, sentry_environment: environment },\n    report,\n  ];\n\n  return createEnvelope<RawSecurityEnvelope>(envelopeHeaders, [eventItem]);\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst enum States {\n  /** Pending */\n  PENDING = 0,\n  /** Resolved / OK */\n  RESOLVED = 1,\n  /** Rejected / Error */\n  REJECTED = 2,\n}\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\nexport function resolvedSyncPromise(): PromiseLike<void>;\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T>;\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value?: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\ntype Executor<T> = (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void;\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nexport class SyncPromise<T> implements PromiseLike<T> {\n  private _state: States;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]>;\n  private _value: any;\n\n  public constructor(executor: Executor<T>) {\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    this._runExecutor(executor);\n  }\n\n  /** @inheritdoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** @inheritdoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** @inheritdoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** Excute the resolve/reject handlers. */\n  private _executeHandlers(): void {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  }\n\n  /** Run the executor for the SyncPromise. */\n  private _runExecutor(executor: Executor<T>): void {\n    const setResult = (state: States, value?: T | PromiseLike<T> | any): void => {\n      if (this._state !== States.PENDING) {\n        return;\n      }\n\n      if (isThenable(value)) {\n        void (value as PromiseLike<T>).then(resolve, reject);\n        return;\n      }\n\n      this._state = state;\n      this._value = value;\n\n      this._executeHandlers();\n    };\n\n    const resolve = (value: unknown): void => {\n      setResult(States.RESOLVED, value);\n    };\n\n    const reject = (reason: unknown): void => {\n      setResult(States.REJECTED, reason);\n    };\n\n    try {\n      executor(resolve, reject);\n    } catch (e) {\n      reject(e);\n    }\n  }\n}\n","import { DEBUG_BUILD } from './debug-build';\nimport type { Event, EventHint } from './types-hoist/event';\nimport type { EventProcessor } from './types-hoist/eventprocessor';\nimport { isThenable } from './utils/is';\nimport { logger } from './utils/logger';\nimport { SyncPromise } from './utils/syncpromise';\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nexport function notifyEventProcessors(\n  processors: EventProcessor[],\n  event: Event | null,\n  hint: EventHint,\n  index: number = 0,\n): PromiseLike<Event | null> {\n  return new SyncPromise<Event | null>((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) as Event | null;\n\n      DEBUG_BUILD && processor.id && result === null && logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n","import type { ScopeData } from '../scope';\nimport { getDynamicSamplingContextFromSpan } from '../tracing/dynamicSamplingContext';\nimport type { Breadcrumb } from '../types-hoist/breadcrumb';\nimport type { Event } from '../types-hoist/event';\nimport type { Span } from '../types-hoist/span';\nimport { merge } from './merge';\nimport { getRootSpan, spanToJSON, spanToTraceContext } from './spanUtils';\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nexport function applyScopeDataToEvent(event: Event, data: ScopeData): void {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nexport function mergeScopeData(data: ScopeData, mergeData: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n\n  data.sdkProcessingMetadata = merge(data.sdkProcessingMetadata, sdkProcessingMetadata, 2);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nexport function mergeAndOverwriteScopeData<\n  Prop extends 'extra' | 'tags' | 'user' | 'contexts' | 'sdkProcessingMetadata',\n  Data extends ScopeData,\n>(data: Data, prop: Prop, mergeVal: Data[Prop]): void {\n  data[prop] = merge(data[prop], mergeVal, 1);\n}\n\n/** Exported only for tests */\nexport function mergeArray<Prop extends 'breadcrumbs' | 'fingerprint'>(\n  event: Event,\n  prop: Prop,\n  mergeVal: ScopeData[Prop],\n): void {\n  const prevVal = event[prop];\n  // If we are not merging any new values,\n  // we only need to proceed if there was an empty array before (as we want to replace it with undefined)\n  if (!mergeVal.length && (!prevVal || prevVal.length)) {\n    return;\n  }\n\n  const merged = [...(prevVal || []), ...mergeVal] as ScopeData[Prop];\n  event[prop] = merged.length ? merged : undefined;\n}\n\nfunction applyDataToEvent(event: Event, data: ScopeData): void {\n  const { extra, tags, user, contexts, level, transactionName } = data;\n\n  if (Object.keys(extra).length) {\n    event.extra = { ...extra, ...event.extra };\n  }\n\n  if (Object.keys(tags).length) {\n    event.tags = { ...tags, ...event.tags };\n  }\n\n  if (Object.keys(user).length) {\n    event.user = { ...user, ...event.user };\n  }\n\n  if (Object.keys(contexts).length) {\n    event.contexts = { ...contexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  // transaction events get their `transaction` from the root span name\n  if (transactionName && event.type !== 'transaction') {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event: Event, breadcrumbs: Breadcrumb[]): void {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event: Event, sdkProcessingMetadata: ScopeData['sdkProcessingMetadata']): void {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event: Event, span: Span): void {\n  event.contexts = {\n    trace: spanToTraceContext(span),\n    ...event.contexts,\n  };\n\n  event.sdkProcessingMetadata = {\n    dynamicSamplingContext: getDynamicSamplingContextFromSpan(span),\n    ...event.sdkProcessingMetadata,\n  };\n\n  const rootSpan = getRootSpan(span);\n  const transactionName = spanToJSON(rootSpan).description;\n  if (transactionName && !event.transaction && event.type === 'transaction') {\n    event.transaction = transactionName;\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event: Event, fingerprint: ScopeData['fingerprint'] | undefined): void {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint\n    ? Array.isArray(event.fingerprint)\n      ? event.fingerprint\n      : [event.fingerprint]\n    : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (!event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n","import type { DebugImage } from '../types-hoist/debugMeta';\nimport type { StackParser } from '../types-hoist/stacktrace';\nimport { GLOBAL_OBJ } from './worldwide';\n\ntype StackString = string;\ntype CachedResult = [string, string];\n\nlet parsedStackResults: Record<StackString, CachedResult> | undefined;\nlet lastKeysCount: number | undefined;\nlet cachedFilenameDebugIds: Record<string, string> | undefined;\n\n/**\n * Returns a map of filenames to debug identifiers.\n */\nexport function getFilenameToDebugIdMap(stackParser: StackParser): Record<string, string> {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n  if (!debugIdMap) {\n    return {};\n  }\n\n  const debugIdKeys = Object.keys(debugIdMap);\n\n  // If the count of registered globals hasn't changed since the last call, we\n  // can just return the cached result.\n  if (cachedFilenameDebugIds && debugIdKeys.length === lastKeysCount) {\n    return cachedFilenameDebugIds;\n  }\n\n  lastKeysCount = debugIdKeys.length;\n\n  // Build a map of filename -> debug_id.\n  cachedFilenameDebugIds = debugIdKeys.reduce<Record<string, string>>((acc, stackKey) => {\n    if (!parsedStackResults) {\n      parsedStackResults = {};\n    }\n\n    const result = parsedStackResults[stackKey];\n\n    if (result) {\n      acc[result[0]] = result[1];\n    } else {\n      const parsedStack = stackParser(stackKey);\n\n      for (let i = parsedStack.length - 1; i >= 0; i--) {\n        const stackFrame = parsedStack[i];\n        const filename = stackFrame?.filename;\n        const debugId = debugIdMap[stackKey];\n\n        if (filename && debugId) {\n          acc[filename] = debugId;\n          parsedStackResults[stackKey] = [filename, debugId];\n          break;\n        }\n      }\n    }\n\n    return acc;\n  }, {});\n\n  return cachedFilenameDebugIds;\n}\n\n/**\n * Returns a list of debug images for the given resources.\n */\nexport function getDebugImagesForResources(\n  stackParser: StackParser,\n  resource_paths: ReadonlyArray<string>,\n): DebugImage[] {\n  const filenameDebugIdMap = getFilenameToDebugIdMap(stackParser);\n\n  if (!filenameDebugIdMap) {\n    return [];\n  }\n\n  const images: DebugImage[] = [];\n  for (const path of resource_paths) {\n    if (path && filenameDebugIdMap[path]) {\n      images.push({\n        type: 'sourcemap',\n        code_file: path,\n        debug_id: filenameDebugIdMap[path] as string,\n      });\n    }\n  }\n\n  return images;\n}\n","import type { Client } from '../client';\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getGlobalScope } from '../currentScopes';\nimport { notifyEventProcessors } from '../eventProcessors';\nimport type { CaptureContext, ScopeContext } from '../scope';\nimport { Scope } from '../scope';\nimport type { Event, EventHint } from '../types-hoist/event';\nimport type { ClientOptions } from '../types-hoist/options';\nimport type { StackParser } from '../types-hoist/stacktrace';\nimport { applyScopeDataToEvent, mergeScopeData } from './applyScopeDataToEvent';\nimport { getFilenameToDebugIdMap } from './debug-ids';\nimport { addExceptionMechanism, uuid4 } from './misc';\nimport { normalize } from './normalize';\nimport { truncate } from './string';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\nexport type ExclusiveEventHintOrCaptureContext =\n  | (CaptureContext & Partial<{ [key in keyof EventHint]: never }>)\n  | (EventHint & Partial<{ [key in keyof ScopeContext]: never }>);\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nexport function prepareEvent(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n  scope?: Scope,\n  client?: Client,\n  isolationScope?: Scope,\n): PromiseLike<Event | null> {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1_000 } = options;\n  const prepared: Event = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  if (client) {\n    client.emit('applyFrameMetadata', event);\n  }\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    addExceptionMechanism(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Scope.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = getGlobalScope().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    mergeScopeData(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    mergeScopeData(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  applyScopeDataToEvent(prepared, data);\n\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = notifyEventProcessors(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n * Enhances event using the client configuration.\n * It takes care of all \"static\" values like environment, release and `dist`,\n * as well as truncating overly long values.\n *\n * Only exported for tests.\n *\n * @param event event instance to be enhanced\n */\nexport function applyClientOptions(event: Event, options: ClientOptions): void {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  // empty strings do not make sense for environment, release, and dist\n  // so we handle them the same as if they were not provided\n  event.environment = event.environment || environment || DEFAULT_ENVIRONMENT;\n\n  if (!event.release && release) {\n    event.release = release;\n  }\n\n  if (!event.dist && dist) {\n    event.dist = dist;\n  }\n\n  const request = event.request;\n  if (request?.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nexport function applyDebugIds(event: Event, stackParser: StackParser): void {\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = getFilenameToDebugIdMap(stackParser);\n\n  event.exception?.values?.forEach(exception => {\n    exception.stacktrace?.frames?.forEach(frame => {\n      if (frame.filename) {\n        frame.debug_id = filenameDebugIdMap[frame.filename];\n      }\n    });\n  });\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nexport function applyDebugMeta(event: Event): void {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap: Record<string, string> = {};\n  event.exception?.values?.forEach(exception => {\n    exception.stacktrace?.frames?.forEach(frame => {\n      if (frame.debug_id) {\n        if (frame.abs_path) {\n          filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n        } else if (frame.filename) {\n          filenameDebugIdMap[frame.filename] = frame.debug_id;\n        }\n        delete frame.debug_id;\n      }\n    });\n  });\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.entries(filenameDebugIdMap).forEach(([filename, debug_id]) => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id,\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event: Event, integrationNames: string[]): void {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event: Event | null, depth: number, maxBreadth: number): Event | null {\n  if (!event) {\n    return null;\n  }\n\n  const normalized: Event = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts?.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      return {\n        ...span,\n        ...(span.data && {\n          data: normalize(span.data, depth, maxBreadth),\n        }),\n      };\n    });\n  }\n\n  // event.contexts.flags (FeatureFlagContext) stores context for our feature\n  // flag integrations. It has a greater nesting depth than our other typed\n  // Contexts, so we re-normalize with a fixed depth of 3 here. We do not want\n  // to skip this in case of conflicting, user-provided context.\n  if (event.contexts?.flags && normalized.contexts) {\n    normalized.contexts.flags = normalize(event.contexts.flags, 3, maxBreadth);\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(scope: Scope | undefined, captureContext: CaptureContext | undefined): Scope | undefined {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nexport function parseEventHintOrCaptureContext(\n  hint: ExclusiveEventHintOrCaptureContext | undefined,\n): EventHint | undefined {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(hint: CaptureContext | EventHint): hint is Scope | ((scope: Scope) => Scope) {\n  return hint instanceof Scope || typeof hint === 'function';\n}\n\ntype ScopeContextProperty = keyof ScopeContext;\nconst captureContextKeys: readonly ScopeContextProperty[] = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'propagationContext',\n] as const;\n\nfunction hintIsScopeContext(hint: Partial<ScopeContext> | EventHint): hint is Partial<ScopeContext> {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key as ScopeContextProperty));\n}\n","import { getClient, getCurrentScope, getIsolationScope, withIsolationScope } from './currentScopes';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { CaptureContext } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport type { CheckIn, FinishedCheckIn, MonitorConfig } from './types-hoist/checkin';\nimport type { Event, EventHint } from './types-hoist/event';\nimport type { EventProcessor } from './types-hoist/eventprocessor';\nimport type { Extra, Extras } from './types-hoist/extra';\nimport type { Primitive } from './types-hoist/misc';\nimport type { Session, SessionContext } from './types-hoist/session';\nimport type { SeverityLevel } from './types-hoist/severity';\nimport type { User } from './types-hoist/user';\nimport { isThenable } from './utils/is';\nimport { logger } from './utils/logger';\nimport { uuid4 } from './utils/misc';\nimport type { ExclusiveEventHintOrCaptureContext } from './utils/prepareEvent';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent';\nimport { timestampInSeconds } from './utils/time';\nimport { GLOBAL_OBJ } from './utils/worldwide';\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nexport function captureException(exception: unknown, hint?: ExclusiveEventHintOrCaptureContext): string {\n  return getCurrentScope().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nexport function captureMessage(message: string, captureContext?: CaptureContext | SeverityLevel): string {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentScope().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nexport function captureEvent(event: Event, hint?: EventHint): string {\n  return getCurrentScope().captureEvent(event, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\nexport function setContext(name: string, context: { [key: string]: unknown } | null): void {\n  getIsolationScope().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nexport function setExtras(extras: Extras): void {\n  getIsolationScope().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nexport function setExtra(key: string, extra: Extra): void {\n  getIsolationScope().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nexport function setTags(tags: { [key: string]: Primitive }): void {\n  getIsolationScope().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nexport function setTag(key: string, value: Primitive): void {\n  getIsolationScope().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nexport function setUser(user: User | null): void {\n  getIsolationScope().setUser(user);\n}\n\n/**\n * The last error event id of the isolation scope.\n *\n * Warning: This function really returns the last recorded error event id on the current\n * isolation scope. If you call this function after handling a certain error and another error\n * is captured in between, the last one is returned instead of the one you might expect.\n * Also, ids of events that were never sent to Sentry (for example because\n * they were dropped in `beforeSend`) could be returned.\n *\n * @returns The last event id of the isolation scope.\n */\nexport function lastEventId(): string | undefined {\n  return getIsolationScope().lastEventId();\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function captureCheckIn(checkIn: CheckIn, upsertMonitorConfig?: MonitorConfig): string {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function withMonitor<T>(\n  monitorSlug: CheckIn['monitorSlug'],\n  callback: () => T,\n  upsertMonitorConfig?: MonitorConfig,\n): T {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status: FinishedCheckIn['status']): void {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  return withIsolationScope(() => {\n    let maybePromiseResult: T;\n    try {\n      maybePromiseResult = callback();\n    } catch (e) {\n      finishCheckIn('error');\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      Promise.resolve(maybePromiseResult).then(\n        () => {\n          finishCheckIn('ok');\n        },\n        e => {\n          finishCheckIn('error');\n          throw e;\n        },\n      );\n    } else {\n      finishCheckIn('ok');\n    }\n\n    return maybePromiseResult;\n  });\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function flush(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function close(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nexport function isInitialized(): boolean {\n  return !!getClient();\n}\n\n/** If the SDK is initialized & enabled. */\nexport function isEnabled(): boolean {\n  const client = getClient();\n  return client?.getOptions().enabled !== false && !!client?.getTransport();\n}\n\n/**\n * Add an event processor.\n * This will be added to the current isolation scope, ensuring any event that is processed in the current execution\n * context will have the processor applied.\n */\nexport function addEventProcessor(callback: EventProcessor): void {\n  getIsolationScope().addEventProcessor(callback);\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nexport function startSession(context?: SessionContext): Session {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n  const session = makeSession({\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession?.status === 'ok') {\n    updateSession(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nexport function endSession(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    closeSession(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate(): void {\n  const isolationScope = getIsolationScope();\n  const client = getClient();\n  const session = isolationScope.getSession();\n  if (session && client) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nexport function captureSession(end: boolean = false): void {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n","import type { ReportDialogOptions } from './report-dialog';\nimport type { DsnComponents, DsnLike } from './types-hoist/dsn';\nimport type { SdkInfo } from './types-hoist/sdkinfo';\nimport { dsnToString, makeDsn } from './utils/dsn';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn: DsnComponents): string {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn: DsnComponents): string {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn: DsnComponents, sdkInfo: SdkInfo | undefined): string {\n  const params: Record<string, string> = {\n    sentry_version: SENTRY_API_VERSION,\n  };\n\n  if (dsn.publicKey) {\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    params.sentry_key = dsn.publicKey;\n  }\n\n  if (sdkInfo) {\n    params.sentry_client = `${sdkInfo.name}/${sdkInfo.version}`;\n  }\n\n  return new URLSearchParams(params).toString();\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nexport function getEnvelopeEndpointWithUrlEncodedAuth(dsn: DsnComponents, tunnel?: string, sdkInfo?: SdkInfo): string {\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nexport function getReportDialogEndpoint(dsnLike: DsnLike, dialogOptions: ReportDialogOptions): string {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n","import type { Client } from './client';\nimport { getClient } from './currentScopes';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { Event, EventHint } from './types-hoist/event';\nimport type { Integration, IntegrationFn } from './types-hoist/integration';\nimport type { Options } from './types-hoist/options';\nimport { logger } from './utils/logger';\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport type IntegrationIndex = {\n  [key: string]: Integration;\n};\n\ntype IntegrationWithDefaultInstance = Integration & { isDefaultInstance?: true };\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preserve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations: Integration[]): Integration[] {\n  const integrationsByName: { [key: string]: Integration } = {};\n\n  integrations.forEach((currentInstance: IntegrationWithDefaultInstance) => {\n    const { name } = currentInstance;\n\n    const existingInstance: IntegrationWithDefaultInstance | undefined = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.values(integrationsByName);\n}\n\n/** Gets integrations to install */\nexport function getIntegrationsToSetup(options: Pick<Options, 'defaultIntegrations' | 'integrations'>): Integration[] {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach((integration: IntegrationWithDefaultInstance) => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations: Integration[];\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    const resolvedUserIntegrations = userIntegrations(defaultIntegrations);\n    integrations = Array.isArray(resolvedUserIntegrations) ? resolvedUserIntegrations : [resolvedUserIntegrations];\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  return filterDuplicates(integrations);\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(client: Client, integrations: Integration[]): IntegrationIndex {\n  const integrationIndex: IntegrationIndex = {};\n\n  integrations.forEach((integration: Integration | undefined) => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nexport function afterSetupIntegrations(client: Client, integrations: Integration[]): void {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration?.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nexport function setupIntegration(client: Client, integration: Integration, integrationIndex: IntegrationIndex): void {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && logger.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1 && typeof integration.setupOnce === 'function') {\n    integration.setupOnce();\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) as typeof integration.preprocessEvent;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) as typeof integration.processEvent;\n\n    const processor = Object.assign((event: Event, hint: EventHint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current scope's client. */\nexport function addIntegration(integration: Integration): void {\n  const client = getClient();\n\n  if (!client) {\n    DEBUG_BUILD && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nexport function defineIntegration<Fn extends IntegrationFn>(fn: Fn): (...args: Parameters<Fn>) => Integration {\n  return fn;\n}\n","import type { ClientReport } from '../types-hoist/clientreport';\nimport type { ClientReportEnvelope, ClientReportItem } from '../types-hoist/envelope';\nimport { createEnvelope } from './envelope';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nexport function createClientReportEnvelope(\n  discarded_events: ClientReport['discarded_events'],\n  dsn?: string,\n  timestamp?: number,\n): ClientReportEnvelope {\n  const clientReportItem: ClientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope<ClientReportEnvelope>(dsn ? { dsn } : {}, [clientReportItem]);\n}\n","import type { Event } from '../types-hoist/event';\n\n/**\n * Get a list of possible event messages from a Sentry event.\n */\nexport function getPossibleEventMessages(event: Event): string[] {\n  const possibleMessages: string[] = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    const lastException = event.exception.values[event.exception.values.length - 1];\n    if (lastException?.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  } catch (e) {\n    // ignore errors here\n  }\n\n  return possibleMessages;\n}\n","import { SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_PROFILE_ID } from '../semanticAttributes';\nimport type { TransactionEvent } from '../types-hoist/event';\nimport type { SpanJSON } from '../types-hoist/span';\n\n/**\n * Converts a transaction event to a span JSON object.\n */\nexport function convertTransactionEventToSpanJson(event: TransactionEvent): SpanJSON {\n  const { trace_id, parent_span_id, span_id, status, origin, data, op } = event.contexts?.trace ?? {};\n\n  return {\n    data: data ?? {},\n    description: event.transaction,\n    op,\n    parent_span_id,\n    span_id: span_id ?? '',\n    start_timestamp: event.start_timestamp ?? 0,\n    status,\n    timestamp: event.timestamp,\n    trace_id: trace_id ?? '',\n    origin,\n    profile_id: data?.[SEMANTIC_ATTRIBUTE_PROFILE_ID] as string | undefined,\n    exclusive_time: data?.[SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME] as number | undefined,\n    measurements: event.measurements,\n    is_segment: true,\n  };\n}\n\n/**\n * Converts a span JSON object to a transaction event.\n */\nexport function convertSpanJsonToTransactionEvent(span: SpanJSON): TransactionEvent {\n  return {\n    type: 'transaction',\n    timestamp: span.timestamp,\n    start_timestamp: span.start_timestamp,\n    transaction: span.description,\n    contexts: {\n      trace: {\n        trace_id: span.trace_id,\n        span_id: span.span_id,\n        parent_span_id: span.parent_span_id,\n        op: span.op,\n        status: span.status,\n        origin: span.origin,\n        data: {\n          ...span.data,\n          ...(span.profile_id && { [SEMANTIC_ATTRIBUTE_PROFILE_ID]: span.profile_id }),\n          ...(span.exclusive_time && { [SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: span.exclusive_time }),\n        },\n      },\n    },\n    measurements: span.measurements,\n  };\n}\n","/* eslint-disable max-lines */\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api';\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { getCurrentScope, getIsolationScope, getTraceContextFromScope, withScope } from './currentScopes';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope';\nimport type { IntegrationIndex } from './integration';\nimport { afterSetupIntegrations, setupIntegration, setupIntegrations } from './integration';\nimport type { Scope } from './scope';\nimport { updateSession } from './session';\nimport {\n  getDynamicSamplingContextFromScope,\n  getDynamicSamplingContextFromSpan,\n} from './tracing/dynamicSamplingContext';\nimport type { Breadcrumb, BreadcrumbHint, FetchBreadcrumbHint, XhrBreadcrumbHint } from './types-hoist/breadcrumb';\nimport type { CheckIn, MonitorConfig } from './types-hoist/checkin';\nimport type { EventDropReason, Outcome } from './types-hoist/clientreport';\nimport type { TraceContext } from './types-hoist/context';\nimport type { DataCategory } from './types-hoist/datacategory';\nimport type { DsnComponents } from './types-hoist/dsn';\nimport type { DynamicSamplingContext, Envelope } from './types-hoist/envelope';\nimport type { ErrorEvent, Event, EventHint, TransactionEvent } from './types-hoist/event';\nimport type { EventProcessor } from './types-hoist/eventprocessor';\nimport type { FeedbackEvent } from './types-hoist/feedback';\nimport type { Integration } from './types-hoist/integration';\nimport type { Log } from './types-hoist/log';\nimport type { ClientOptions } from './types-hoist/options';\nimport type { ParameterizedString } from './types-hoist/parameterize';\nimport type { SdkMetadata } from './types-hoist/sdkmetadata';\nimport type { Session, SessionAggregates } from './types-hoist/session';\nimport type { SeverityLevel } from './types-hoist/severity';\nimport type { Span, SpanAttributes, SpanContextData, SpanJSON } from './types-hoist/span';\nimport type { StartSpanOptions } from './types-hoist/startSpanOptions';\nimport type { Transport, TransportMakeRequestResponse } from './types-hoist/transport';\nimport { createClientReportEnvelope } from './utils/clientreport';\nimport { dsnToString, makeDsn } from './utils/dsn';\nimport { addItemToEnvelope, createAttachmentEnvelopeItem } from './utils/envelope';\nimport { getPossibleEventMessages } from './utils/eventUtils';\nimport { isParameterizedString, isPlainObject, isPrimitive, isThenable } from './utils/is';\nimport { logger } from './utils/logger';\nimport { merge } from './utils/merge';\nimport { checkOrSetAlreadyCaught, uuid4 } from './utils/misc';\nimport { parseSampleRate } from './utils/parseSampleRate';\nimport { prepareEvent } from './utils/prepareEvent';\nimport { getActiveSpan, showSpanDropWarning, spanToTraceContext } from './utils/spanUtils';\nimport { rejectedSyncPromise, resolvedSyncPromise, SyncPromise } from './utils/syncpromise';\nimport { convertSpanJsonToTransactionEvent, convertTransactionEventToSpanJson } from './utils/transactionEvent';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\nconst MISSING_RELEASE_FOR_SESSION_ERROR = 'Discarded session because of missing or non-string release';\n\nconst INTERNAL_ERROR_SYMBOL = Symbol.for('SentryInternalError');\nconst DO_NOT_SEND_EVENT_SYMBOL = Symbol.for('SentryDoNotSendEventError');\n\ninterface InternalError {\n  message: string;\n  [INTERNAL_ERROR_SYMBOL]: true;\n}\n\ninterface DoNotSendEventError {\n  message: string;\n  [DO_NOT_SEND_EVENT_SYMBOL]: true;\n}\n\nfunction _makeInternalError(message: string): InternalError {\n  return {\n    message,\n    [INTERNAL_ERROR_SYMBOL]: true,\n  };\n}\n\nfunction _makeDoNotSendEventError(message: string): DoNotSendEventError {\n  return {\n    message,\n    [DO_NOT_SEND_EVENT_SYMBOL]: true,\n  };\n}\n\nfunction _isInternalError(error: unknown): error is InternalError {\n  return !!error && typeof error === 'object' && INTERNAL_ERROR_SYMBOL in error;\n}\n\nfunction _isDoNotSendEventError(error: unknown): error is DoNotSendEventError {\n  return !!error && typeof error === 'object' && DO_NOT_SEND_EVENT_SYMBOL in error;\n}\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link Client._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends Client<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class Client<O extends ClientOptions = ClientOptions> {\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: DsnComponents;\n\n  protected readonly _transport?: Transport;\n\n  /** Array of set up integrations. */\n  protected _integrations: IntegrationIndex;\n\n  /** Number of calls being processed */\n  protected _numProcessing: number;\n\n  protected _eventProcessors: EventProcessor[];\n\n  /** Holds flushable  */\n  private _outcomes: { [key: string]: number };\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _hooks: Record<string, Function[]>;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n  protected constructor(options: O) {\n    this._options = options;\n    this._integrations = {};\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(\n        this._dsn,\n        options.tunnel,\n        options._metadata ? options._metadata.sdk : undefined,\n      );\n      this._transport = options.transport({\n        tunnel: this._options.tunnel,\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * Captures an exception event and sends it to Sentry.\n   *\n   * Unlike `captureException` exported from every SDK, this method requires that you pass it the current scope.\n   */\n  public captureException(exception: unknown, hint?: EventHint, scope?: Scope): string {\n    const eventId = uuid4();\n\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return eventId;\n    }\n\n    const hintWithEventId = {\n      event_id: eventId,\n      ...hint,\n    };\n\n    this._process(\n      this.eventFromException(exception, hintWithEventId).then(event =>\n        this._captureEvent(event, hintWithEventId, scope),\n      ),\n    );\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * Captures a message event and sends it to Sentry.\n   *\n   * Unlike `captureMessage` exported from every SDK, this method requires that you pass it the current scope.\n   */\n  public captureMessage(\n    message: ParameterizedString,\n    level?: SeverityLevel,\n    hint?: EventHint,\n    currentScope?: Scope,\n  ): string {\n    const hintWithEventId = {\n      event_id: uuid4(),\n      ...hint,\n    };\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hintWithEventId)\n      : this.eventFromException(message, hintWithEventId);\n\n    this._process(promisedEvent.then(event => this._captureEvent(event, hintWithEventId, currentScope)));\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * Captures a manually created event and sends it to Sentry.\n   *\n   * Unlike `captureEvent` exported from every SDK, this method requires that you pass it the current scope.\n   */\n  public captureEvent(event: Event, hint?: EventHint, currentScope?: Scope): string {\n    const eventId = uuid4();\n\n    // ensure we haven't captured this very object before\n    if (hint?.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return eventId;\n    }\n\n    const hintWithEventId = {\n      event_id: eventId,\n      ...hint,\n    };\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope: Scope | undefined = sdkProcessingMetadata.capturedSpanScope;\n    const capturedSpanIsolationScope: Scope | undefined = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    this._process(\n      this._captureEvent(event, hintWithEventId, capturedSpanScope || currentScope, capturedSpanIsolationScope),\n    );\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * Captures a session.\n   */\n  public captureSession(session: Session): void {\n    this.sendSession(session);\n    // After sending, we set init false to indicate it's not the first occurrence\n    updateSession(session, { init: false });\n  }\n\n  /**\n   * Create a cron monitor check in and send it to Sentry. This method is not available on all clients.\n   *\n   * @param checkIn An object that describes a check in.\n   * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n   * to create a monitor automatically when sending a check in.\n   * @param scope An optional scope containing event metadata.\n   * @returns A string representing the id of the check in.\n   */\n  public captureCheckIn?(checkIn: CheckIn, monitorConfig?: MonitorConfig, scope?: Scope): string;\n\n  /**\n   * Get the current Dsn.\n   */\n  public getDsn(): DsnComponents | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * Get the current options.\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * Get the SDK metadata.\n   * @see SdkMetadata\n   */\n  public getSdkMetadata(): SdkMetadata | undefined {\n    return this._options._metadata;\n  }\n\n  /**\n   * Returns the transport that is used by the client.\n   * Please note that the transport gets lazy initialized so it will only be there once the first event has been sent.\n   */\n  public getTransport(): Transport | undefined {\n    return this._transport;\n  }\n\n  /**\n   * Wait for all events to be sent or the timeout to expire, whichever comes first.\n   *\n   * @param timeout Maximum time in ms the client should wait for events to be flushed. Omitting this parameter will\n   *   cause the client to wait until all events are sent before resolving the promise.\n   * @returns A promise that will resolve with `true` if all events are sent before the timeout, or `false` if there are\n   * still events in the queue when the timeout is reached.\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    const transport = this._transport;\n    if (transport) {\n      this.emit('flush');\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * Flush the event queue and set the client to `enabled = false`. See {@link Client.flush}.\n   *\n   * @param {number} timeout Maximum time in ms the client should wait before shutting down. Omitting this parameter will cause\n   *   the client to wait until all events are sent before disabling itself.\n   * @returns {Promise<boolean>} A promise which resolves to `true` if the flush completes successfully before the timeout, or `false` if\n   * it doesn't.\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      this.emit('close');\n      return result;\n    });\n  }\n\n  /**\n   * Get all installed event processors.\n   */\n  public getEventProcessors(): EventProcessor[] {\n    return this._eventProcessors;\n  }\n\n  /**\n   * Adds an event processor that applies to any event processed by this client.\n   */\n  public addEventProcessor(eventProcessor: EventProcessor): void {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * Initialize this client.\n   * Call this after the client was set on a scope.\n   */\n  public init(): void {\n    if (\n      this._isEnabled() ||\n      // Force integrations to be setup even if no DSN was set when we have\n      // Spotlight enabled. This is particularly important for browser as we\n      // don't support the `spotlight` option there and rely on the users\n      // adding the `spotlightBrowserIntegration()` to their integrations which\n      // wouldn't get initialized with the check below when there's no DSN set.\n      this._options.integrations.some(({ name }) => name.startsWith('Spotlight'))\n    ) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns {Integration|undefined} The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n  public getIntegrationByName<T extends Integration = Integration>(integrationName: string): T | undefined {\n    return this._integrations[integrationName] as T | undefined;\n  }\n\n  /**\n   * Add an integration to the client.\n   * This can be used to e.g. lazy load integrations.\n   * In most cases, this should not be necessary,\n   * and you're better off just passing the integrations via `integrations: []` at initialization time.\n   * However, if you find the need to conditionally load & add an integration, you can use `addIntegration` to do so.\n   */\n  public addIntegration(integration: Integration): void {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * Send a fully prepared event to Sentry.\n   */\n  public sendEvent(event: Event, hint: EventHint = {}): void {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(env, createAttachmentEnvelopeItem(attachment));\n    }\n\n    const promise = this.sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * Send a session or session aggregrates to Sentry.\n   */\n  public sendSession(session: Session | SessionAggregates): void {\n    // Backfill release and environment on session\n    const { release: clientReleaseOption, environment: clientEnvironmentOption = DEFAULT_ENVIRONMENT } = this._options;\n    if ('aggregates' in session) {\n      const sessionAttrs = session.attrs || {};\n      if (!sessionAttrs.release && !clientReleaseOption) {\n        DEBUG_BUILD && logger.warn(MISSING_RELEASE_FOR_SESSION_ERROR);\n        return;\n      }\n      sessionAttrs.release = sessionAttrs.release || clientReleaseOption;\n      sessionAttrs.environment = sessionAttrs.environment || clientEnvironmentOption;\n      session.attrs = sessionAttrs;\n    } else {\n      if (!session.release && !clientReleaseOption) {\n        DEBUG_BUILD && logger.warn(MISSING_RELEASE_FOR_SESSION_ERROR);\n        return;\n      }\n      session.release = session.release || clientReleaseOption;\n      session.environment = session.environment || clientEnvironmentOption;\n    }\n\n    this.emit('beforeSendSession', session);\n\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(env);\n  }\n\n  /**\n   * Record on the client that an event got dropped (ie, an event that will not be sent to Sentry).\n   */\n  public recordDroppedEvent(reason: EventDropReason, category: DataCategory, count: number = 1): void {\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && logger.log(`Recording outcome: \"${key}\"${count > 1 ? ` (${count} times)` : ''}`);\n      this._outcomes[key] = (this._outcomes[key] || 0) + count;\n    }\n  }\n\n  /* eslint-disable @typescript-eslint/unified-signatures */\n  /**\n   * Register a callback for whenever a span is started.\n   * Receives the span as argument.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'spanStart', callback: (span: Span) => void): () => void;\n\n  /**\n   * Register a callback before span sampling runs. Receives a `samplingDecision` object argument with a `decision`\n   * property that can be used to make a sampling decision that will be enforced, before any span sampling runs.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'beforeSampling',\n    callback: (\n      samplingData: {\n        spanAttributes: SpanAttributes;\n        spanName: string;\n        parentSampled?: boolean;\n        parentSampleRate?: number;\n        parentContext?: SpanContextData;\n      },\n      samplingDecision: { decision: boolean },\n    ) => void,\n  ): void;\n\n  /**\n   * Register a callback for whenever a span is ended.\n   * Receives the span as argument.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'spanEnd', callback: (span: Span) => void): () => void;\n\n  /**\n   * Register a callback for when an idle span is allowed to auto-finish.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'idleSpanEnableAutoFinish', callback: (span: Span) => void): () => void;\n\n  /**\n   * Register a callback for transaction start and finish.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'beforeEnvelope', callback: (envelope: Envelope) => void): () => void;\n\n  /**\n   * Register a callback that runs when stack frame metadata should be applied to an event.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'applyFrameMetadata', callback: (event: Event) => void): () => void;\n\n  /**\n   * Register a callback for before sending an event.\n   * This is called right before an event is sent and should not be used to mutate the event.\n   * Receives an Event & EventHint as arguments.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'beforeSendEvent', callback: (event: Event, hint?: EventHint | undefined) => void): () => void;\n\n  /**\n   * Register a callback for before sending a session or session aggregrates..\n   * Receives the session/aggregate as second argument.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'beforeSendSession', callback: (session: Session | SessionAggregates) => void): () => void;\n\n  /**\n   * Register a callback for preprocessing an event,\n   * before it is passed to (global) event processors.\n   * Receives an Event & EventHint as arguments.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'preprocessEvent', callback: (event: Event, hint?: EventHint | undefined) => void): () => void;\n\n  /**\n   * Register a callback for postprocessing an event,\n   * after it was passed to (global) event processors, before it is being sent.\n   * Receives an Event & EventHint as arguments.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'postprocessEvent', callback: (event: Event, hint?: EventHint | undefined) => void): () => void;\n\n  /**\n   * Register a callback for when an event has been sent.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'afterSendEvent',\n    callback: (event: Event, sendResponse: TransportMakeRequestResponse) => void,\n  ): () => void;\n\n  /**\n   * Register a callback before a breadcrumb is added.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'beforeAddBreadcrumb', callback: (breadcrumb: Breadcrumb, hint?: BreadcrumbHint) => void): () => void;\n\n  /**\n   * Register a callback when a DSC (Dynamic Sampling Context) is created.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'createDsc', callback: (dsc: DynamicSamplingContext, rootSpan?: Span) => void): () => void;\n\n  /**\n   * Register a callback when a Feedback event has been prepared.\n   * This should be used to mutate the event. The options argument can hint\n   * about what kind of mutation it expects.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'beforeSendFeedback',\n    callback: (feedback: FeedbackEvent, options?: { includeReplay?: boolean }) => void,\n  ): () => void;\n\n  /**\n   * Register a callback when the feedback widget is opened in a user's browser\n   */\n  public on(hook: 'openFeedbackWidget', callback: () => void): () => void;\n\n  /**\n   * A hook for the browser tracing integrations to trigger a span start for a page load.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'startPageLoadSpan',\n    callback: (\n      options: StartSpanOptions,\n      traceOptions?: { sentryTrace?: string | undefined; baggage?: string | undefined },\n    ) => void,\n  ): () => void;\n\n  /**\n   * A hook for browser tracing integrations to trigger a span for a navigation.\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'startNavigationSpan', callback: (options: StartSpanOptions) => void): () => void;\n\n  /**\n   * A hook for GraphQL client integration to enhance a span with request data.\n   * @returns A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'beforeOutgoingRequestSpan',\n    callback: (span: Span, hint: XhrBreadcrumbHint | FetchBreadcrumbHint) => void,\n  ): () => void;\n\n  /**\n   * A hook for GraphQL client integration to enhance a breadcrumb with request data.\n   * @returns A function that, when executed, removes the registered callback.\n   */\n  public on(\n    hook: 'beforeOutgoingRequestBreadcrumb',\n    callback: (breadcrumb: Breadcrumb, hint: XhrBreadcrumbHint | FetchBreadcrumbHint) => void,\n  ): () => void;\n\n  /**\n   * A hook that is called when the client is flushing\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'flush', callback: () => void): () => void;\n\n  /**\n   * A hook that is called when the client is closing\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'close', callback: () => void): () => void;\n\n  /**\n   * A hook that is called before a log is captured. This hooks runs before `beforeSendLog` is fired.\n   *\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'beforeCaptureLog', callback: (log: Log) => void): () => void;\n\n  /**\n   * A hook that is called after a log is captured\n   *\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'afterCaptureLog', callback: (log: Log) => void): () => void;\n\n  /**\n   * A hook that is called when the client is flushing logs\n   *\n   * @returns {() => void} A function that, when executed, removes the registered callback.\n   */\n  public on(hook: 'flushLogs', callback: () => void): () => void;\n\n  /**\n   * Register a hook on this client.\n   */\n  public on(hook: string, callback: unknown): () => void {\n    const hooks = (this._hooks[hook] = this._hooks[hook] || []);\n\n    // @ts-expect-error We assume the types are correct\n    hooks.push(callback);\n\n    // This function returns a callback execution handler that, when invoked,\n    // deregisters a callback. This is crucial for managing instances where callbacks\n    // need to be unregistered to prevent self-referencing in callback closures,\n    // ensuring proper garbage collection.\n    return () => {\n      // @ts-expect-error We assume the types are correct\n      const cbIndex = hooks.indexOf(callback);\n      if (cbIndex > -1) {\n        hooks.splice(cbIndex, 1);\n      }\n    };\n  }\n\n  /** Fire a hook whenever a span starts. */\n  public emit(hook: 'spanStart', span: Span): void;\n\n  /** A hook that is called every time before a span is sampled. */\n  public emit(\n    hook: 'beforeSampling',\n    samplingData: {\n      spanAttributes: SpanAttributes;\n      spanName: string;\n      parentSampled?: boolean;\n      parentSampleRate?: number;\n      parentContext?: SpanContextData;\n    },\n    samplingDecision: { decision: boolean },\n  ): void;\n\n  /** Fire a hook whenever a span ends. */\n  public emit(hook: 'spanEnd', span: Span): void;\n\n  /**\n   * Fire a hook indicating that an idle span is allowed to auto finish.\n   */\n  public emit(hook: 'idleSpanEnableAutoFinish', span: Span): void;\n\n  /*\n   * Fire a hook event for envelope creation and sending. Expects to be given an envelope as the\n   * second argument.\n   */\n  public emit(hook: 'beforeEnvelope', envelope: Envelope): void;\n\n  /*\n   * Fire a hook indicating that stack frame metadata should be applied to the event passed to the hook.\n   */\n  public emit(hook: 'applyFrameMetadata', event: Event): void;\n\n  /**\n   * Fire a hook event before sending an event.\n   * This is called right before an event is sent and should not be used to mutate the event.\n   * Expects to be given an Event & EventHint as the second/third argument.\n   */\n  public emit(hook: 'beforeSendEvent', event: Event, hint?: EventHint): void;\n\n  /**\n   * Fire a hook event before sending a session/aggregates.\n   * Expects to be given the prepared session/aggregates as second argument.\n   */\n  public emit(hook: 'beforeSendSession', session: Session | SessionAggregates): void;\n\n  /**\n   * Fire a hook event to process events before they are passed to (global) event processors.\n   * Expects to be given an Event & EventHint as the second/third argument.\n   */\n  public emit(hook: 'preprocessEvent', event: Event, hint?: EventHint): void;\n\n  /**\n   * Fire a hook event to process a user on an event before it is sent to Sentry, after all other processors have run.\n   * Expects to be given an Event & EventHint as the second/third argument.\n   */\n  public emit(hook: 'postprocessEvent', event: Event, hint?: EventHint): void;\n\n  /*\n   * Fire a hook event after sending an event. Expects to be given an Event as the\n   * second argument.\n   */\n  public emit(hook: 'afterSendEvent', event: Event, sendResponse: TransportMakeRequestResponse): void;\n\n  /**\n   * Fire a hook for when a breadcrumb is added. Expects the breadcrumb as second argument.\n   */\n  public emit(hook: 'beforeAddBreadcrumb', breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void;\n\n  /**\n   * Fire a hook for when a DSC (Dynamic Sampling Context) is created. Expects the DSC as second argument.\n   */\n  public emit(hook: 'createDsc', dsc: DynamicSamplingContext, rootSpan?: Span): void;\n\n  /**\n   * Fire a hook event for after preparing a feedback event. Events to be given\n   * a feedback event as the second argument, and an optional options object as\n   * third argument.\n   */\n  public emit(hook: 'beforeSendFeedback', feedback: FeedbackEvent, options?: { includeReplay?: boolean }): void;\n\n  /**\n   * Fire a hook event for when the feedback widget is opened in a user's browser\n   */\n  public emit(hook: 'openFeedbackWidget'): void;\n\n  /**\n   * Emit a hook event for browser tracing integrations to trigger a span start for a page load.\n   */\n  public emit(\n    hook: 'startPageLoadSpan',\n    options: StartSpanOptions,\n    traceOptions?: { sentryTrace?: string | undefined; baggage?: string | undefined },\n  ): void;\n\n  /**\n   * Emit a hook event for browser tracing integrations to trigger a span for a navigation.\n   */\n  public emit(hook: 'startNavigationSpan', options: StartSpanOptions): void;\n\n  /**\n   * Emit a hook event for GraphQL client integration to enhance a span with request data.\n   */\n  public emit(hook: 'beforeOutgoingRequestSpan', span: Span, hint: XhrBreadcrumbHint | FetchBreadcrumbHint): void;\n\n  /**\n   * Emit a hook event for GraphQL client integration to enhance a breadcrumb with request data.\n   */\n  public emit(\n    hook: 'beforeOutgoingRequestBreadcrumb',\n    breadcrumb: Breadcrumb,\n    hint: XhrBreadcrumbHint | FetchBreadcrumbHint,\n  ): void;\n\n  /**\n   * Emit a hook event for client flush\n   */\n  public emit(hook: 'flush'): void;\n\n  /**\n   * Emit a hook event for client close\n   */\n  public emit(hook: 'close'): void;\n\n  /**\n   * Emit a hook event for client before capturing a log. This hooks runs before `beforeSendLog` is fired.\n   */\n  public emit(hook: 'beforeCaptureLog', log: Log): void;\n\n  /**\n   * Emit a hook event for client after capturing a log.\n   */\n  public emit(hook: 'afterCaptureLog', log: Log): void;\n\n  /**\n   * Emit a hook event for client flush logs\n   */\n  public emit(hook: 'flushLogs'): void;\n\n  /**\n   * Emit a hook that was previously registered via `on()`.\n   */\n  public emit(hook: string, ...rest: unknown[]): void {\n    const callbacks = this._hooks[hook];\n    if (callbacks) {\n      callbacks.forEach(callback => callback(...rest));\n    }\n  }\n\n  /**\n   * Send an envelope to Sentry.\n   */\n  public sendEnvelope(envelope: Envelope): PromiseLike<TransportMakeRequestResponse> {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && logger.error('Error while sending envelope:', reason);\n        return reason;\n      });\n    }\n\n    DEBUG_BUILD && logger.error('Transport disabled');\n\n    return resolvedSyncPromise({});\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n  protected _setupIntegrations(): void {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n  }\n\n  /** Updates existing session based on the provided event */\n  protected _updateSessionFromEvent(session: Session, event: Event): void {\n    let crashed = event.level === 'fatal';\n    let errored = false;\n    const exceptions = event.exception?.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism?.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n  protected _isClientDoneProcessing(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param currentScope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(\n    event: Event,\n    hint: EventHint,\n    currentScope: Scope,\n    isolationScope: Scope,\n  ): PromiseLike<Event | null> {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations?.length) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    if (!event.type) {\n      isolationScope.setLastEventId(event.event_id || hint.event_id);\n    }\n\n    return prepareEvent(options, event, hint, currentScope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      this.emit('postprocessEvent', evt, hint);\n\n      evt.contexts = {\n        trace: getTraceContextFromScope(currentScope),\n        ...evt.contexts,\n      };\n\n      const dynamicSamplingContext = getDynamicSamplingContextFromScope(this, currentScope);\n\n      evt.sdkProcessingMetadata = {\n        dynamicSamplingContext,\n        ...evt.sdkProcessingMetadata,\n      };\n\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n  protected _captureEvent(\n    event: Event,\n    hint: EventHint = {},\n    currentScope = getCurrentScope(),\n    isolationScope = getIsolationScope(),\n  ): PromiseLike<string | undefined> {\n    if (DEBUG_BUILD && isErrorEvent(event)) {\n      logger.log(`Captured error event \\`${getPossibleEventMessages(event)[0] || '<unknown>'}\\``);\n    }\n\n    return this._processEvent(event, hint, currentScope, isolationScope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          if (_isDoNotSendEventError(reason)) {\n            logger.log(reason.message);\n          } else if (_isInternalError(reason)) {\n            logger.warn(reason.message);\n          } else {\n            logger.warn(reason);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param currentScope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(\n    event: Event,\n    hint: EventHint,\n    currentScope: Scope,\n    isolationScope: Scope,\n  ): PromiseLike<Event> {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    const parsedSampleRate = typeof sampleRate === 'undefined' ? undefined : parseSampleRate(sampleRate);\n    if (isError && typeof parsedSampleRate === 'number' && Math.random() > parsedSampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error');\n      return rejectedSyncPromise(\n        _makeDoNotSendEventError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n        ),\n      );\n    }\n\n    const dataCategory = (eventType === 'replay_event' ? 'replay' : eventType) satisfies DataCategory;\n\n    return this._prepareEvent(event, hint, currentScope, isolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory);\n          throw _makeDoNotSendEventError('An event processor returned `null`, will not send event.');\n        }\n\n        const isInternalException = hint.data && (hint.data as { __sentry__: boolean }).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(this, options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory);\n          if (isTransaction) {\n            const spans = event.spans || [];\n            // the transaction itself counts as one span, plus all the child spans that are added\n            const spanCount = 1 + spans.length;\n            this.recordDroppedEvent('before_send', 'span', spanCount);\n          }\n          throw _makeDoNotSendEventError(`${beforeSendLabel} returned \\`null\\`, will not send event.`);\n        }\n\n        const session = currentScope.getSession() || isolationScope.getSession();\n        if (isError && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        if (isTransaction) {\n          const spanCountBefore = processedEvent.sdkProcessingMetadata?.spanCountBeforeProcessing || 0;\n          const spanCountAfter = processedEvent.spans ? processedEvent.spans.length : 0;\n\n          const droppedSpanCount = spanCountBefore - spanCountAfter;\n          if (droppedSpanCount > 0) {\n            this.recordDroppedEvent('before_send', 'span', droppedSpanCount);\n          }\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (_isDoNotSendEventError(reason) || _isInternalError(reason)) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw _makeInternalError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n  protected _process<T>(promise: PromiseLike<T>): void {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n  protected _clearOutcomes(): Outcome[] {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.entries(outcomes).map(([key, quantity]) => {\n      const [reason, category] = key.split(':') as [EventDropReason, DataCategory];\n      return {\n        reason,\n        category,\n        quantity,\n      };\n    });\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n  protected _flushOutcomes(): void {\n    DEBUG_BUILD && logger.log('Flushing outcomes...');\n\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && logger.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(envelope);\n  }\n\n  /**\n   * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n   */\n  public abstract eventFromException(_exception: unknown, _hint?: EventHint): PromiseLike<Event>;\n\n  /**\n   * Creates an {@link Event} from primitive inputs to `captureMessage`.\n   */\n  public abstract eventFromMessage(\n    _message: ParameterizedString,\n    _level?: SeverityLevel,\n    _hint?: EventHint,\n  ): PromiseLike<Event>;\n}\n\n/**\n * @deprecated Use `Client` instead. This alias may be removed in a future major version.\n */\n// TODO(v10): Remove\nexport type BaseClient = Client;\n\n/**\n * @deprecated Use `Client` instead. This alias may be removed in a future major version.\n */\n// TODO(v10): Remove\nexport const BaseClient = Client;\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult: PromiseLike<Event | null> | Event | null,\n  beforeSendLabel: string,\n): PromiseLike<Event | null> | Event | null {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw _makeInternalError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw _makeInternalError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw _makeInternalError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  client: Client,\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n): PromiseLike<Event | null> | Event | null {\n  const { beforeSend, beforeSendTransaction, beforeSendSpan } = options;\n  let processedEvent = event;\n\n  if (isErrorEvent(processedEvent) && beforeSend) {\n    return beforeSend(processedEvent, hint);\n  }\n\n  if (isTransactionEvent(processedEvent)) {\n    if (beforeSendSpan) {\n      // process root span\n      const processedRootSpanJson = beforeSendSpan(convertTransactionEventToSpanJson(processedEvent));\n      if (!processedRootSpanJson) {\n        showSpanDropWarning();\n      } else {\n        // update event with processed root span values\n        processedEvent = merge(event, convertSpanJsonToTransactionEvent(processedRootSpanJson));\n      }\n\n      // process child spans\n      if (processedEvent.spans) {\n        const processedSpans: SpanJSON[] = [];\n        for (const span of processedEvent.spans) {\n          const processedSpan = beforeSendSpan(span);\n          if (!processedSpan) {\n            showSpanDropWarning();\n            processedSpans.push(span);\n          } else {\n            processedSpans.push(processedSpan);\n          }\n        }\n        processedEvent.spans = processedSpans;\n      }\n    }\n\n    if (beforeSendTransaction) {\n      if (processedEvent.spans) {\n        // We store the # of spans before processing in SDK metadata,\n        // so we can compare it afterwards to determine how many spans were dropped\n        const spanCountBefore = processedEvent.spans.length;\n        processedEvent.sdkProcessingMetadata = {\n          ...event.sdkProcessingMetadata,\n          spanCountBeforeProcessing: spanCountBefore,\n        };\n      }\n      return beforeSendTransaction(processedEvent as TransactionEvent, hint);\n    }\n  }\n\n  return processedEvent;\n}\n\nfunction isErrorEvent(event: Event): event is ErrorEvent {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/** Extract trace information from scope */\nexport function _getTraceInfoFromScope(\n  client: Client,\n  scope: Scope | undefined,\n): [dynamicSamplingContext: Partial<DynamicSamplingContext> | undefined, traceContext: TraceContext | undefined] {\n  if (!scope) {\n    return [undefined, undefined];\n  }\n\n  return withScope(scope, () => {\n    const span = getActiveSpan();\n    const traceContext = span ? spanToTraceContext(span) : getTraceContextFromScope(scope);\n    const dynamicSamplingContext = span\n      ? getDynamicSamplingContextFromSpan(span)\n      : getDynamicSamplingContextFromScope(client, scope);\n    return [dynamicSamplingContext, traceContext];\n  });\n}\n","import type { DsnComponents } from '../types-hoist/dsn';\nimport type { LogContainerItem, LogEnvelope } from '../types-hoist/envelope';\nimport type { SerializedLog } from '../types-hoist/log';\nimport type { SdkMetadata } from '../types-hoist/sdkmetadata';\nimport { dsnToString } from '../utils/dsn';\nimport { createEnvelope } from '../utils/envelope';\n\n/**\n * Creates a log container envelope item for a list of logs.\n *\n * @param items - The logs to include in the envelope.\n * @returns The created log container envelope item.\n */\nexport function createLogContainerEnvelopeItem(items: Array<SerializedLog>): LogContainerItem {\n  return [\n    {\n      type: 'log',\n      item_count: items.length,\n      content_type: 'application/vnd.sentry.items.log+json',\n    },\n    {\n      items,\n    },\n  ];\n}\n\n/**\n * Creates an envelope for a list of logs.\n *\n * Logs from multiple traces can be included in the same envelope.\n *\n * @param logs - The logs to include in the envelope.\n * @param metadata - The metadata to include in the envelope.\n * @param tunnel - The tunnel to include in the envelope.\n * @param dsn - The DSN to include in the envelope.\n * @returns The created envelope.\n */\nexport function createLogEnvelope(\n  logs: Array<SerializedLog>,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n  dsn?: DsnComponents,\n): LogEnvelope {\n  const headers: LogEnvelope[0] = {};\n\n  if (metadata?.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && !!dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  return createEnvelope<LogEnvelope>(headers, [createLogContainerEnvelopeItem(logs)]);\n}\n","import type { Client } from '../client';\nimport { _getTraceInfoFromScope } from '../client';\nimport { getClient, getCurrentScope, getGlobalScope, getIsolationScope } from '../currentScopes';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { Scope, ScopeData } from '../scope';\nimport type { Log, SerializedLog, SerializedLogAttributeValue } from '../types-hoist/log';\nimport { mergeScopeData } from '../utils/applyScopeDataToEvent';\nimport { isParameterizedString } from '../utils/is';\nimport { logger } from '../utils/logger';\nimport { _getSpanForScope } from '../utils/spanOnScope';\nimport { timestampInSeconds } from '../utils/time';\nimport { GLOBAL_OBJ } from '../utils/worldwide';\nimport { SEVERITY_TEXT_TO_SEVERITY_NUMBER } from './constants';\nimport { createLogEnvelope } from './envelope';\n\nconst MAX_LOG_BUFFER_SIZE = 100;\n\n// The reference to the Client <> LogBuffer map is stored to ensure it's always the same\nGLOBAL_OBJ._sentryClientToLogBufferMap = new WeakMap<Client, Array<SerializedLog>>();\n\n/**\n * Converts a log attribute to a serialized log attribute.\n *\n * @param key - The key of the log attribute.\n * @param value - The value of the log attribute.\n * @returns The serialized log attribute.\n */\nexport function logAttributeToSerializedLogAttribute(value: unknown): SerializedLogAttributeValue {\n  switch (typeof value) {\n    case 'number':\n      if (Number.isInteger(value)) {\n        return {\n          value,\n          type: 'integer',\n        };\n      }\n      return {\n        value,\n        type: 'double',\n      };\n    case 'boolean':\n      return {\n        value,\n        type: 'boolean',\n      };\n    case 'string':\n      return {\n        value,\n        type: 'string',\n      };\n    default: {\n      let stringValue = '';\n      try {\n        stringValue = JSON.stringify(value) ?? '';\n      } catch {\n        // Do nothing\n      }\n      return {\n        value: stringValue,\n        type: 'string',\n      };\n    }\n  }\n}\n\n/**\n * Sets a log attribute if the value exists and the attribute key is not already present.\n *\n * @param logAttributes - The log attributes object to modify.\n * @param key - The attribute key to set.\n * @param value - The value to set (only sets if truthy and key not present).\n * @param setEvenIfPresent - Whether to set the attribute if it is present. Defaults to true.\n */\nfunction setLogAttribute(\n  logAttributes: Record<string, unknown>,\n  key: string,\n  value: unknown,\n  setEvenIfPresent = true,\n): void {\n  if (value && (!logAttributes[key] || setEvenIfPresent)) {\n    logAttributes[key] = value;\n  }\n}\n\n/**\n * Captures a serialized log event and adds it to the log buffer for the given client.\n *\n * @param client - A client. Uses the current client if not provided.\n * @param serializedLog - The serialized log event to capture.\n *\n * @experimental This method will experience breaking changes. This is not yet part of\n * the stable Sentry SDK API and can be changed or removed without warning.\n */\nexport function _INTERNAL_captureSerializedLog(client: Client, serializedLog: SerializedLog): void {\n  const logBuffer = _INTERNAL_getLogBuffer(client);\n  if (logBuffer === undefined) {\n    GLOBAL_OBJ._sentryClientToLogBufferMap?.set(client, [serializedLog]);\n  } else {\n    GLOBAL_OBJ._sentryClientToLogBufferMap?.set(client, [...logBuffer, serializedLog]);\n    if (logBuffer.length >= MAX_LOG_BUFFER_SIZE) {\n      _INTERNAL_flushLogsBuffer(client, logBuffer);\n    }\n  }\n}\n\n/**\n * Captures a log event and sends it to Sentry.\n *\n * @param log - The log event to capture.\n * @param scope - A scope. Uses the current scope if not provided.\n * @param client - A client. Uses the current client if not provided.\n * @param captureSerializedLog - A function to capture the serialized log.\n *\n * @experimental This method will experience breaking changes. This is not yet part of\n * the stable Sentry SDK API and can be changed or removed without warning.\n */\nexport function _INTERNAL_captureLog(\n  beforeLog: Log,\n  client: Client | undefined = getClient(),\n  currentScope = getCurrentScope(),\n  captureSerializedLog: (client: Client, log: SerializedLog) => void = _INTERNAL_captureSerializedLog,\n): void {\n  if (!client) {\n    DEBUG_BUILD && logger.warn('No client available to capture log.');\n    return;\n  }\n\n  const { _experiments, release, environment } = client.getOptions();\n  const { enableLogs = false, beforeSendLog } = _experiments ?? {};\n  if (!enableLogs) {\n    DEBUG_BUILD && logger.warn('logging option not enabled, log will not be captured.');\n    return;\n  }\n\n  const [, traceContext] = _getTraceInfoFromScope(client, currentScope);\n\n  const processedLogAttributes = {\n    ...beforeLog.attributes,\n  };\n\n  const {\n    user: { id, email, username },\n  } = getMergedScopeData(currentScope);\n  setLogAttribute(processedLogAttributes, 'user.id', id, false);\n  setLogAttribute(processedLogAttributes, 'user.email', email, false);\n  setLogAttribute(processedLogAttributes, 'user.name', username, false);\n\n  setLogAttribute(processedLogAttributes, 'sentry.release', release);\n  setLogAttribute(processedLogAttributes, 'sentry.environment', environment);\n\n  const { name, version } = client.getSdkMetadata()?.sdk ?? {};\n  setLogAttribute(processedLogAttributes, 'sentry.sdk.name', name);\n  setLogAttribute(processedLogAttributes, 'sentry.sdk.version', version);\n\n  const beforeLogMessage = beforeLog.message;\n  if (isParameterizedString(beforeLogMessage)) {\n    const { __sentry_template_string__, __sentry_template_values__ = [] } = beforeLogMessage;\n    processedLogAttributes['sentry.message.template'] = __sentry_template_string__;\n    __sentry_template_values__.forEach((param, index) => {\n      processedLogAttributes[`sentry.message.parameter.${index}`] = param;\n    });\n  }\n\n  const span = _getSpanForScope(currentScope);\n  // Add the parent span ID to the log attributes for trace context\n  setLogAttribute(processedLogAttributes, 'sentry.trace.parent_span_id', span?.spanContext().spanId);\n\n  const processedLog = { ...beforeLog, attributes: processedLogAttributes };\n\n  client.emit('beforeCaptureLog', processedLog);\n\n  const log = beforeSendLog ? beforeSendLog(processedLog) : processedLog;\n  if (!log) {\n    client.recordDroppedEvent('before_send', 'log_item', 1);\n    DEBUG_BUILD && logger.warn('beforeSendLog returned null, log will not be captured.');\n    return;\n  }\n\n  const { level, message, attributes = {}, severityNumber } = log;\n\n  const serializedLog: SerializedLog = {\n    timestamp: timestampInSeconds(),\n    level,\n    body: message,\n    trace_id: traceContext?.trace_id,\n    severity_number: severityNumber ?? SEVERITY_TEXT_TO_SEVERITY_NUMBER[level],\n    attributes: Object.keys(attributes).reduce(\n      (acc, key) => {\n        acc[key] = logAttributeToSerializedLogAttribute(attributes[key]);\n        return acc;\n      },\n      {} as Record<string, SerializedLogAttributeValue>,\n    ),\n  };\n\n  captureSerializedLog(client, serializedLog);\n\n  client.emit('afterCaptureLog', log);\n}\n\n/**\n * Flushes the logs buffer to Sentry.\n *\n * @param client - A client.\n * @param maybeLogBuffer - A log buffer. Uses the log buffer for the given client if not provided.\n *\n * @experimental This method will experience breaking changes. This is not yet part of\n * the stable Sentry SDK API and can be changed or removed without warning.\n */\nexport function _INTERNAL_flushLogsBuffer(client: Client, maybeLogBuffer?: Array<SerializedLog>): void {\n  const logBuffer = maybeLogBuffer ?? _INTERNAL_getLogBuffer(client) ?? [];\n  if (logBuffer.length === 0) {\n    return;\n  }\n\n  const clientOptions = client.getOptions();\n  const envelope = createLogEnvelope(logBuffer, clientOptions._metadata, clientOptions.tunnel, client.getDsn());\n\n  // Clear the log buffer after envelopes have been constructed.\n  GLOBAL_OBJ._sentryClientToLogBufferMap?.set(client, []);\n\n  client.emit('flushLogs');\n\n  // sendEnvelope should not throw\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  client.sendEnvelope(envelope);\n}\n\n/**\n * Returns the log buffer for a given client.\n *\n * Exported for testing purposes.\n *\n * @param client - The client to get the log buffer for.\n * @returns The log buffer for the given client.\n */\nexport function _INTERNAL_getLogBuffer(client: Client): Array<SerializedLog> | undefined {\n  return GLOBAL_OBJ._sentryClientToLogBufferMap?.get(client);\n}\n\n/**\n * Get the scope data for the current scope after merging with the\n * global scope and isolation scope.\n *\n * @param currentScope - The current scope.\n * @returns The scope data.\n */\nfunction getMergedScopeData(currentScope: Scope): ScopeData {\n  const scopeData = getGlobalScope().getScopeData();\n  mergeScopeData(scopeData, getIsolationScope().getScopeData());\n  mergeScopeData(scopeData, currentScope.getScopeData());\n  return scopeData;\n}\n","import type { Client } from './client';\nimport { getCurrentScope } from './currentScopes';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { ClientOptions } from './types-hoist/options';\nimport { consoleSandbox, logger } from './utils/logger';\n\n/** A class object that can instantiate Client objects. */\nexport type ClientClass<F extends Client, O extends ClientOptions> = new (options: O) => F;\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind<F extends Client, O extends ClientOptions>(\n  clientClass: ClientClass<F, O>,\n  options: O,\n): Client {\n  if (options.debug === true) {\n    if (DEBUG_BUILD) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n      });\n    }\n  }\n  const scope = getCurrentScope();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  setCurrentClient(client);\n  client.init();\n  return client;\n}\n\n/**\n * Make the given client the current client.\n */\nexport function setCurrentClient(client: Client): void {\n  getCurrentScope().setClient(client);\n}\n","import { rejectedSyncPromise, resolvedSyncPromise, SyncPromise } from './syncpromise';\n\nexport interface PromiseBuffer<T> {\n  // exposes the internal array so tests can assert on the state of it.\n  // XXX: this really should not be public api.\n  $: Array<PromiseLike<T>>;\n  add(taskProducer: () => PromiseLike<T>): PromiseLike<T>;\n  drain(timeout?: number): PromiseLike<boolean>;\n}\n\nexport const SENTRY_BUFFER_FULL_ERROR = Symbol.for('SentryBufferFullError');\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nexport function makePromiseBuffer<T>(limit?: number): PromiseBuffer<T> {\n  const buffer: Array<PromiseLike<T>> = [];\n\n  function isReady(): boolean {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task: PromiseLike<T>): PromiseLike<T | void> {\n    return buffer.splice(buffer.indexOf(task), 1)[0] || Promise.resolve(undefined);\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer: () => PromiseLike<T>): PromiseLike<T> {\n    if (!isReady()) {\n      return rejectedSyncPromise(SENTRY_BUFFER_FULL_ERROR);\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n","import type { DataCategory } from '../types-hoist/datacategory';\nimport type { TransportMakeRequestResponse } from '../types-hoist/transport';\n\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\nexport type RateLimits = Record<string, number>;\n\nexport const DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nexport function parseRetryAfterHeader(header: string, now: number = Date.now()): number {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nexport function disabledUntil(limits: RateLimits, dataCategory: DataCategory): number {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nexport function isRateLimited(limits: RateLimits, dataCategory: DataCategory, now: number = Date.now()): boolean {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nexport function updateRateLimits(\n  limits: RateLimits,\n  { statusCode, headers }: TransportMakeRequestResponse,\n  now: number = Date.now(),\n): RateLimits {\n  const updatedRateLimits: RateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers?.['x-sentry-rate-limits'];\n  const retryAfterHeader = headers?.['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5) as [string, ...string[]];\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport type { EventDropReason } from '../types-hoist/clientreport';\nimport type { Envelope, EnvelopeItem } from '../types-hoist/envelope';\nimport type {\n  InternalBaseTransportOptions,\n  Transport,\n  TransportMakeRequestResponse,\n  TransportRequestExecutor,\n} from '../types-hoist/transport';\nimport {\n  createEnvelope,\n  envelopeItemTypeToDataCategory,\n  forEachEnvelopeItem,\n  serializeEnvelope,\n} from '../utils/envelope';\nimport { logger } from '../utils/logger';\nimport { type PromiseBuffer, makePromiseBuffer, SENTRY_BUFFER_FULL_ERROR } from '../utils/promisebuffer';\nimport { type RateLimits, isRateLimited, updateRateLimits } from '../utils/ratelimit';\nimport { resolvedSyncPromise } from '../utils/syncpromise';\n\nexport const DEFAULT_TRANSPORT_BUFFER_SIZE = 64;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nexport function createTransport(\n  options: InternalBaseTransportOptions,\n  makeRequest: TransportRequestExecutor,\n  buffer: PromiseBuffer<TransportMakeRequestResponse> = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n): Transport {\n  let rateLimits: RateLimits = {};\n  const flush = (timeout?: number): PromiseLike<boolean> => buffer.drain(timeout);\n\n  function send(envelope: Envelope): PromiseLike<TransportMakeRequestResponse> {\n    const filteredEnvelopeItems: EnvelopeItem[] = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const dataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, dataCategory)) {\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise({});\n    }\n\n    const filteredEnvelope: Envelope = createEnvelope(envelope[0], filteredEnvelopeItems as (typeof envelope)[1]);\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason: EventDropReason): void => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type));\n      });\n    };\n\n    const requestTask = (): PromiseLike<TransportMakeRequestResponse> =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          DEBUG_BUILD && logger.error('Encountered error running transport request:', error);\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error === SENTRY_BUFFER_FULL_ERROR) {\n          DEBUG_BUILD && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise({});\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n","import type { Session, SessionAggregates } from '../types-hoist/session';\nimport type { User } from '../types-hoist/user';\n\n// By default, we want to infer the IP address, unless this is explicitly set to `null`\n// We do this after all other processing is done\n// If `ip_address` is explicitly set to `null` or a value, we leave it as is\n\n/**\n * @internal\n */\nexport function addAutoIpAddressToUser(objWithMaybeUser: { user?: User | null }): void {\n  if (objWithMaybeUser.user?.ip_address === undefined) {\n    objWithMaybeUser.user = {\n      ...objWithMaybeUser.user,\n      ip_address: '{{auto}}',\n    };\n  }\n}\n\n/**\n * @internal\n */\nexport function addAutoIpAddressToSession(session: Session | SessionAggregates): void {\n  if ('aggregates' in session) {\n    if (session.attrs?.['ip_address'] === undefined) {\n      session.attrs = {\n        ...session.attrs,\n        ip_address: '{{auto}}',\n      };\n    }\n  } else {\n    if (session.ipAddress === undefined) {\n      session.ipAddress = '{{auto}}';\n    }\n  }\n}\n","import type { Options } from '../types-hoist/options';\nimport { SDK_VERSION } from '../utils/version';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nexport function applySdkMetadata(options: Options, name: string, names = [name], source = 'npm'): void {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n","import { getClient, getIsolationScope } from './currentScopes';\nimport type { Breadcrumb, BreadcrumbHint } from './types-hoist/breadcrumb';\nimport { consoleSandbox } from './utils/logger';\nimport { dateTimestampInSeconds } from './utils/time';\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n */\nexport function addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n\n  if (!client) return;\n\n  const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } = client.getOptions();\n\n  if (maxBreadcrumbs <= 0) return;\n\n  const timestamp = dateTimestampInSeconds();\n  const mergedBreadcrumb = { timestamp, ...breadcrumb };\n  const finalBreadcrumb = beforeBreadcrumb\n    ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n    : mergedBreadcrumb;\n\n  if (finalBreadcrumb === null) return;\n\n  if (client.emit) {\n    client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n  }\n\n  isolationScope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n}\n","import type { Client } from '../client';\nimport { getClient } from '../currentScopes';\nimport { defineIntegration } from '../integration';\nimport type { IntegrationFn } from '../types-hoist/integration';\nimport type { WrappedFunction } from '../types-hoist/wrappedfunction';\nimport { getOriginalFunction } from '../utils/object';\n\nlet originalFunctionToString: () => void;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap<Client, boolean>();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        Function.prototype.toString = function (this: WrappedFunction, ...args: unknown[]): string {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() as Client) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nexport const functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n","import { DEBUG_BUILD } from '../debug-build';\nimport { defineIntegration } from '../integration';\nimport type { Event } from '../types-hoist/event';\nimport type { IntegrationFn } from '../types-hoist/integration';\nimport type { StackFrame } from '../types-hoist/stackframe';\nimport { getPossibleEventMessages } from '../utils/eventUtils';\nimport { logger } from '../utils/logger';\nimport { getEventDescription } from '../utils/misc';\nimport { stringMatchesSomePattern } from '../utils/string';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/, // The browser logs this when a ResizeObserver handler takes a bit longer. Usually this is not an actual issue though. It indicates slowness.\n  /^Cannot redefine property: googletag$/, // This is thrown when google tag manager is used in combination with an ad blocker\n  /^Can't find variable: gmo$/, // Error from Google Search App https://issuetracker.google.com/issues/396043331\n  /^undefined is not an object \\(evaluating 'a\\.[A-Z]'\\)$/, // Random error that happens but not actionable or noticeable to end-users.\n  'can\\'t redefine non-configurable property \"solana\"', // Probably a browser extension or custom browser (Brave) throwing this error\n  \"vv().getRestrictions is not a function. (In 'vv().getRestrictions(1,a)', 'vv().getRestrictions' is undefined)\", // Error thrown by GTM, seemingly not affecting end-users\n  \"Can't find variable: _AutofillCallbackHandler\", // Unactionable error in instagram webview https://developers.facebook.com/community/threads/320013549791141/\n  /^Non-Error promise rejection captured with value: Object Not Found Matching Id:\\d+, MethodName:simulateEvent, ParamCount:\\d+$/, // unactionable error from CEFSharp, a .NET library that embeds chromium in .NET apps\n  /^Java exception was raised during method invocation$/, // error from Facebook Mobile browser (https://github.com/getsentry/sentry-javascript/issues/15065)\n];\n\n/** Options for the EventFilters integration */\nexport interface EventFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreTransactions: Array<string | RegExp>;\n  ignoreInternal: boolean;\n  disableErrorDefaults: boolean;\n}\n\nconst INTEGRATION_NAME = 'EventFilters';\n\n/**\n * An integration that filters out events (errors and transactions) based on:\n *\n * - (Errors) A curated list of known low-value or irrelevant errors (see {@link DEFAULT_IGNORE_ERRORS})\n * - (Errors) A list of error messages or urls/filenames passed in via\n *   - Top level Sentry.init options (`ignoreErrors`, `denyUrls`, `allowUrls`)\n *   - The same options passed to the integration directly via @param options\n * - (Transactions/Spans) A list of root span (transaction) names passed in via\n *   - Top level Sentry.init option (`ignoreTransactions`)\n *   - The same option passed to the integration directly via @param options\n *\n * Events filtered by this integration will not be sent to Sentry.\n */\nexport const eventFiltersIntegration = defineIntegration((options: Partial<EventFiltersOptions> = {}) => {\n  let mergedOptions: Partial<EventFiltersOptions> | undefined;\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      const clientOptions = client.getOptions();\n      mergedOptions = _mergeOptions(options, clientOptions);\n    },\n    processEvent(event, _hint, client) {\n      if (!mergedOptions) {\n        const clientOptions = client.getOptions();\n        mergedOptions = _mergeOptions(options, clientOptions);\n      }\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n});\n\n/**\n * An integration that filters out events (errors and transactions) based on:\n *\n * - (Errors) A curated list of known low-value or irrelevant errors (see {@link DEFAULT_IGNORE_ERRORS})\n * - (Errors) A list of error messages or urls/filenames passed in via\n *   - Top level Sentry.init options (`ignoreErrors`, `denyUrls`, `allowUrls`)\n *   - The same options passed to the integration directly via @param options\n * - (Transactions/Spans) A list of root span (transaction) names passed in via\n *   - Top level Sentry.init option (`ignoreTransactions`)\n *   - The same option passed to the integration directly via @param options\n *\n * Events filtered by this integration will not be sent to Sentry.\n *\n * @deprecated this integration was renamed and will be removed in a future major version.\n * Use `eventFiltersIntegration` instead.\n */\nexport const inboundFiltersIntegration = defineIntegration(((options: Partial<EventFiltersOptions> = {}) => {\n  return {\n    ...eventFiltersIntegration(options),\n    name: 'InboundFilters',\n  };\n}) satisfies IntegrationFn);\n\nfunction _mergeOptions(\n  internalOptions: Partial<EventFiltersOptions> = {},\n  clientOptions: Partial<EventFiltersOptions> = {},\n): Partial<EventFiltersOptions> {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [...(internalOptions.ignoreTransactions || []), ...(clientOptions.ignoreTransactions || [])],\n  };\n}\n\nfunction _shouldDropEvent(event: Event, options: Partial<EventFiltersOptions>): boolean {\n  if (!event.type) {\n    // Filter errors\n    if (_isIgnoredError(event, options.ignoreErrors)) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n        );\n      return true;\n    }\n    if (_isUselessError(event)) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `Event dropped due to not having an error message, error type or stacktrace.\\nEvent: ${getEventDescription(\n            event,\n          )}`,\n        );\n      return true;\n    }\n    if (_isDeniedUrl(event, options.denyUrls)) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n            event,\n          )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n        );\n      return true;\n    }\n    if (!_isAllowedUrl(event, options.allowUrls)) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n            event,\n          )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n        );\n      return true;\n    }\n  } else if (event.type === 'transaction') {\n    // Filter transactions\n\n    if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n        );\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event: Event, ignoreErrors?: Array<string | RegExp>): boolean {\n  if (!ignoreErrors?.length) {\n    return false;\n  }\n\n  return getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event: Event, ignoreTransactions?: Array<string | RegExp>): boolean {\n  if (!ignoreTransactions?.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event: Event, denyUrls?: Array<string | RegExp>): boolean {\n  if (!denyUrls?.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event: Event, allowUrls?: Array<string | RegExp>): boolean {\n  if (!allowUrls?.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getLastValidUrl(frames: StackFrame[] = []): string | null {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event: Event): string | null {\n  try {\n    // If there are linked exceptions or exception aggregates we only want to match against the top frame of the \"root\" (the main exception)\n    // The root always comes last in linked exceptions\n    const rootException = [...(event.exception?.values ?? [])]\n      .reverse()\n      .find(value => value.mechanism?.parent_id === undefined && value.stacktrace?.frames?.length);\n    const frames = rootException?.stacktrace?.frames;\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nfunction _isUselessError(event: Event): boolean {\n  // We only want to consider events for dropping that actually have recorded exception values.\n  if (!event.exception?.values?.length) {\n    return false;\n  }\n\n  return (\n    // No top-level message\n    !event.message &&\n    // There are no exception values that have a stacktrace, a non-generic-Error type or value\n    !event.exception.values.some(value => value.stacktrace || (value.type && value.type !== 'Error') || value.value)\n  );\n}\n","import type { ExtendedError } from '../types-hoist/error';\nimport type { Event, EventHint } from '../types-hoist/event';\nimport type { Exception } from '../types-hoist/exception';\nimport type { StackParser } from '../types-hoist/stacktrace';\nimport { isInstanceOf } from './is';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nexport function applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  key: string,\n  limit: number,\n  event: Event,\n  hint?: EventHint,\n): void {\n  if (!event.exception?.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException: Exception | undefined =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      hint.originalException as ExtendedError,\n      key,\n      event.exception.values,\n      originalException,\n      0,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  limit: number,\n  error: ExtendedError,\n  key: string,\n  prevExceptions: Exception[],\n  exception: Exception,\n  exceptionId: number,\n): Exception[] {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception: Exception, exceptionId: number): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception: Exception,\n  source: string,\n  exceptionId: number,\n  parentId: number | undefined,\n): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { ConsoleLevel, HandlerDataConsole } from '../types-hoist/instrument';\nimport { CONSOLE_LEVELS, originalConsoleMethods } from '../utils/logger';\nimport { fill } from '../utils/object';\nimport { GLOBAL_OBJ } from '../utils/worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addConsoleInstrumentationHandler(handler: (data: HandlerDataConsole) => void): void {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole(): void {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level: ConsoleLevel): void {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod: () => any): Function {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args: any[]): void {\n        const handlerData: HandlerDataConsole = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log?.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n","import type { SeverityLevel } from '../types-hoist/severity';\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nexport function severityLevelFromString(level: SeverityLevel | string): SeverityLevel {\n  return (\n    level === 'warn' ? 'warning' : ['fatal', 'error', 'warning', 'log', 'info', 'debug'].includes(level) ? level : 'log'\n  ) as SeverityLevel;\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport { defineIntegration } from '../integration';\nimport type { Event } from '../types-hoist/event';\nimport type { Exception } from '../types-hoist/exception';\nimport type { IntegrationFn } from '../types-hoist/integration';\nimport type { StackFrame } from '../types-hoist/stackframe';\nimport { logger } from '../utils/logger';\nimport { getFramesFromEvent } from '../utils/stacktrace';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent: Event | undefined;\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch (_oO) {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Deduplication filter.\n */\nexport const dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/** only exported for tests. */\nexport function _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFrames = getFramesFromEvent(currentEvent);\n  let previousFrames = getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames as StackFrame[];\n  previousFrames = previousFrames as StackFrame[];\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const frameA = previousFrames[i]!;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const frameB = currentFrames[i]!;\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint as string[];\n  previousFingerprint = previousFingerprint as string[];\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event: Event): Exception | undefined {\n  return event.exception?.values && event.exception.values[0];\n}\n","import {\n  SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  SEMANTIC_ATTRIBUTE_URL_FULL,\n} from '../semanticAttributes';\nimport type { SpanAttributes } from '../types-hoist/span';\n\ntype PartialURL = {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n  search?: string;\n  hash?: string;\n};\n\ninterface URLwithCanParse extends URL {\n  canParse: (url: string, base?: string | URL | undefined) => boolean;\n}\n\n// A subset of the URL object that is valid for relative URLs\n// The URL object cannot handle relative URLs, so we need to handle them separately\ntype RelativeURL = {\n  isRelative: true;\n  pathname: URL['pathname'];\n  search: URL['search'];\n  hash: URL['hash'];\n};\n\ntype URLObject = RelativeURL | URL;\n\n// Curious about `thismessage:/`? See: https://www.rfc-editor.org/rfc/rfc2557.html\n//  > When the methods above do not yield an absolute URI, a base URL\n//  > of \"thismessage:/\" MUST be employed. This base URL has been\n//  > defined for the sole purpose of resolving relative references\n//  > within a multipart/related structure when no other base URI is\n//  > specified.\n//\n// We need to provide a base URL to `parseStringToURLObject` because the fetch API gives us a\n// relative URL sometimes.\n//\n// This is the only case where we need to provide a base URL to `parseStringToURLObject`\n// because the relative URL is not valid on its own.\nconst DEFAULT_BASE_URL = 'thismessage:/';\n\n/**\n * Checks if the URL object is relative\n *\n * @param url - The URL object to check\n * @returns True if the URL object is relative, false otherwise\n */\nexport function isURLObjectRelative(url: URLObject): url is RelativeURL {\n  return 'isRelative' in url;\n}\n\n/**\n * Parses string to a URL object\n *\n * @param url - The URL to parse\n * @returns The parsed URL object or undefined if the URL is invalid\n */\nexport function parseStringToURLObject(url: string, urlBase?: string | URL | undefined): URLObject | undefined {\n  const isRelative = url.indexOf('://') <= 0 && url.indexOf('//') !== 0;\n  const base = urlBase ?? (isRelative ? DEFAULT_BASE_URL : undefined);\n  try {\n    // Use `canParse` to short-circuit the URL constructor if it's not a valid URL\n    // This is faster than trying to construct the URL and catching the error\n    // Node 20+, Chrome 120+, Firefox 115+, Safari 17+\n    if ('canParse' in URL && !(URL as unknown as URLwithCanParse).canParse(url, base)) {\n      return undefined;\n    }\n\n    const fullUrlObject = new URL(url, base);\n    if (isRelative) {\n      // Because we used a fake base URL, we need to return a relative URL object.\n      // We cannot return anything about the origin, host, etc. because it will refer to the fake base URL.\n      return {\n        isRelative,\n        pathname: fullUrlObject.pathname,\n        search: fullUrlObject.search,\n        hash: fullUrlObject.hash,\n      };\n    }\n    return fullUrlObject;\n  } catch {\n    // empty body\n  }\n\n  return undefined;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span name\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nexport function getSanitizedUrlStringFromUrlObject(url: URLObject): string {\n  if (isURLObjectRelative(url)) {\n    return url.pathname;\n  }\n\n  const newUrl = new URL(url);\n  newUrl.search = '';\n  newUrl.hash = '';\n  if (['80', '443'].includes(newUrl.port)) {\n    newUrl.port = '';\n  }\n  if (newUrl.password) {\n    newUrl.password = '%filtered%';\n  }\n  if (newUrl.username) {\n    newUrl.username = '%filtered%';\n  }\n\n  return newUrl.toString();\n}\n\ntype PartialRequest = {\n  method?: string;\n};\n\nfunction getHttpSpanNameFromUrlObject(\n  urlObject: URLObject | undefined,\n  kind: 'server' | 'client',\n  request?: PartialRequest,\n  routeName?: string,\n): string {\n  const method = request?.method?.toUpperCase() ?? 'GET';\n  const route = routeName\n    ? routeName\n    : urlObject\n      ? kind === 'client'\n        ? getSanitizedUrlStringFromUrlObject(urlObject)\n        : urlObject.pathname\n      : '/';\n\n  return `${method} ${route}`;\n}\n\n/**\n * Takes a parsed URL object and returns a set of attributes for the span\n * that represents the HTTP request for that url. This is used for both server\n * and client http spans.\n *\n * Follows https://opentelemetry.io/docs/specs/semconv/http/.\n *\n * @param urlObject - see {@link parseStringToURLObject}\n * @param kind - The type of HTTP operation (server or client)\n * @param spanOrigin - The origin of the span\n * @param request - The request object, see {@link PartialRequest}\n * @param routeName - The name of the route, must be low cardinality\n * @returns The span name and attributes for the HTTP operation\n */\nexport function getHttpSpanDetailsFromUrlObject(\n  urlObject: URLObject | undefined,\n  kind: 'server' | 'client',\n  spanOrigin: string,\n  request?: PartialRequest,\n  routeName?: string,\n): [name: string, attributes: SpanAttributes] {\n  const attributes: SpanAttributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanOrigin,\n    [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n  };\n\n  if (routeName) {\n    // This is based on https://opentelemetry.io/docs/specs/semconv/http/http-spans/#name\n    attributes[kind === 'server' ? 'http.route' : 'url.template'] = routeName;\n    attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] = 'route';\n  }\n\n  if (request?.method) {\n    attributes[SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD] = request.method.toUpperCase();\n  }\n\n  if (urlObject) {\n    if (urlObject.search) {\n      attributes['url.query'] = urlObject.search;\n    }\n    if (urlObject.hash) {\n      attributes['url.fragment'] = urlObject.hash;\n    }\n    if (urlObject.pathname) {\n      attributes['url.path'] = urlObject.pathname;\n      if (urlObject.pathname === '/') {\n        attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] = 'route';\n      }\n    }\n\n    if (!isURLObjectRelative(urlObject)) {\n      attributes[SEMANTIC_ATTRIBUTE_URL_FULL] = urlObject.href;\n      if (urlObject.port) {\n        attributes['url.port'] = urlObject.port;\n      }\n      if (urlObject.protocol) {\n        attributes['url.scheme'] = urlObject.protocol;\n      }\n      if (urlObject.hostname) {\n        attributes[kind === 'server' ? 'server.address' : 'url.domain'] = urlObject.hostname;\n      }\n    }\n  }\n\n  return [getHttpSpanNameFromUrlObject(urlObject, kind, request, routeName), attributes];\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url: string): PartialURL {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  return (urlPath.split(/[?#]/, 1) as [string, ...string[]])[0];\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span name\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nexport function getSanitizedUrlString(url: PartialURL): string {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    host\n      // Always filter out authority\n      ?.replace(/^.*@/, '[filtered]:[filtered]@')\n      // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n      // TODO: Use new URL global if it exists\n      .replace(/(:80)$/, '')\n      .replace(/(:443)$/, '') || '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n","import type { SeverityLevel } from '../types-hoist/severity';\n\n/**\n * Determine a breadcrumb's log level (only `warning` or `error`) based on an HTTP status code.\n */\nexport function getBreadcrumbLogLevelFromHttpStatusCode(statusCode: number | undefined): SeverityLevel | undefined {\n  // NOTE: undefined defaults to 'info' in Sentry\n  if (statusCode === undefined) {\n    return undefined;\n  } else if (statusCode >= 400 && statusCode < 500) {\n    return 'warning';\n  } else if (statusCode >= 500) {\n    return 'error';\n  } else {\n    return undefined;\n  }\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport { logger } from './logger';\nimport { GLOBAL_OBJ } from './worldwide';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\ndeclare const EdgeRuntime: string | undefined;\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  return 'history' in WINDOW && !!WINDOW.history;\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n * @deprecated This is no longer used and will be removed in a future major version.\n */\nexport const supportsFetch = _isFetchSupported;\n\nfunction _isFetchSupported(): boolean {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * isNative checks if the given function is a native implementation\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFunction(func: Function): boolean {\n  return func && /^function\\s+\\w+\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!_isFetchSupported()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFunction(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow?.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFunction(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      DEBUG_BUILD &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n * @deprecated This is no longer used and will be removed in a future major version.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!_isFetchSupported()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { HandlerDataFetch } from '../types-hoist/instrument';\nimport type { WebFetchHeaders } from '../types-hoist/webfetchapi';\nimport { isError, isRequest } from '../utils/is';\nimport { addNonEnumerableProperty, fill } from '../utils/object';\nimport { supportsNativeFetch } from '../utils/supports';\nimport { timestampInSeconds } from '../utils/time';\nimport { GLOBAL_OBJ } from '../utils/worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers';\n\ntype FetchResource = string | { toString(): string } | { url: string };\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addFetchInstrumentationHandler(\n  handler: (data: HandlerDataFetch) => void,\n  skipNativeFetchCheck?: boolean,\n): void {\n  const type = 'fetch';\n  addHandler(type, handler);\n  maybeInstrument(type, () => instrumentFetch(undefined, skipNativeFetchCheck));\n}\n\n/**\n * Add an instrumentation handler for long-lived fetch requests, like consuming server-sent events (SSE) via fetch.\n * The handler will resolve the request body and emit the actual `endTimestamp`, so that the\n * span can be updated accordingly.\n *\n * Only used internally\n * @hidden\n */\nexport function addFetchEndInstrumentationHandler(handler: (data: HandlerDataFetch) => void): void {\n  const type = 'fetch-body-resolved';\n  addHandler(type, handler);\n  maybeInstrument(type, () => instrumentFetch(streamHandler));\n}\n\nfunction instrumentFetch(onFetchResolved?: (response: Response) => void, skipNativeFetchCheck: boolean = false): void {\n  if (skipNativeFetchCheck && !supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      // We capture the error right here and not in the Promise error callback because Safari (and probably other\n      // browsers too) will wipe the stack trace up to this point, only leaving us with this file which is useless.\n\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n      //       it means the error, that was caused by your fetch call did not\n      //       have a stack trace, so the SDK backfilled the stack trace so\n      //       you can see which fetch call failed.\n      const virtualError = new Error();\n\n      const { method, url } = parseFetchArgs(args);\n      const handlerData: HandlerDataFetch = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: timestampInSeconds() * 1000,\n        // // Adding the error to be able to fingerprint the failed fetch event in HttpClient instrumentation\n        virtualError,\n        headers: getHeadersFromFetchArgs(args),\n      };\n\n      // if there is no callback, fetch is instrumented directly\n      if (!onFetchResolved) {\n        triggerHandlers('fetch', {\n          ...handlerData,\n        });\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        async (response: Response) => {\n          if (onFetchResolved) {\n            onFetchResolved(response);\n          } else {\n            triggerHandlers('fetch', {\n              ...handlerData,\n              endTimestamp: timestampInSeconds() * 1000,\n              response,\n            });\n          }\n\n          return response;\n        },\n        (error: Error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: timestampInSeconds() * 1000,\n            error,\n          });\n\n          if (isError(error) && error.stack === undefined) {\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n            //       it means the error, that was caused by your fetch call did not\n            //       have a stack trace, so the SDK backfilled the stack trace so\n            //       you can see which fetch call failed.\n            error.stack = virtualError.stack;\n            addNonEnumerableProperty(error, 'framesToPop', 1);\n          }\n\n          // We enhance the not-so-helpful \"Failed to fetch\" error messages with the host\n          // Possible messages we handle here:\n          // * \"Failed to fetch\" (chromium)\n          // * \"Load failed\" (webkit)\n          // * \"NetworkError when attempting to fetch resource.\" (firefox)\n          if (\n            error instanceof TypeError &&\n            (error.message === 'Failed to fetch' ||\n              error.message === 'Load failed' ||\n              error.message === 'NetworkError when attempting to fetch resource.')\n          ) {\n            try {\n              const url = new URL(handlerData.fetchData.url);\n              error.message = `${error.message} (${url.host})`;\n            } catch {\n              // ignore it if errors happen here\n            }\n          }\n\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nasync function resolveResponse(res: Response | undefined, onFinishedResolving: () => void): Promise<void> {\n  if (res?.body) {\n    const body = res.body;\n    const responseReader = body.getReader();\n\n    // Define a maximum duration after which we just cancel\n    const maxFetchDurationTimeout = setTimeout(\n      () => {\n        body.cancel().then(null, () => {\n          // noop\n        });\n      },\n      90 * 1000, // 90s\n    );\n\n    let readingActive = true;\n    while (readingActive) {\n      let chunkTimeout;\n      try {\n        // abort reading if read op takes more than 5s\n        chunkTimeout = setTimeout(() => {\n          body.cancel().then(null, () => {\n            // noop on error\n          });\n        }, 5000);\n\n        // This .read() call will reject/throw when we abort due to timeouts through `body.cancel()`\n        const { done } = await responseReader.read();\n\n        clearTimeout(chunkTimeout);\n\n        if (done) {\n          onFinishedResolving();\n          readingActive = false;\n        }\n      } catch (error) {\n        readingActive = false;\n      } finally {\n        clearTimeout(chunkTimeout);\n      }\n    }\n\n    clearTimeout(maxFetchDurationTimeout);\n\n    responseReader.releaseLock();\n    body.cancel().then(null, () => {\n      // noop on error\n    });\n  }\n}\n\nfunction streamHandler(response: Response): void {\n  // clone response for awaiting stream\n  let clonedResponseForResolving: Response;\n  try {\n    clonedResponseForResolving = response.clone();\n  } catch {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  resolveResponse(clonedResponseForResolving, () => {\n    triggerHandlers('fetch-body-resolved', {\n      endTimestamp: timestampInSeconds() * 1000,\n      response,\n    });\n  });\n}\n\nfunction hasProp<T extends string>(obj: unknown, prop: T): obj is Record<string, string> {\n  return !!obj && typeof obj === 'object' && !!(obj as Record<string, string>)[prop];\n}\n\nfunction getUrlFromResource(resource: FetchResource): string {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nexport function parseFetchArgs(fetchArgs: unknown[]): { method: string; url: string } {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs as [FetchResource, object];\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg as FetchResource),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\nfunction getHeadersFromFetchArgs(fetchArgs: unknown[]): WebFetchHeaders | undefined {\n  const [requestArgument, optionsArgument] = fetchArgs;\n\n  try {\n    if (\n      typeof optionsArgument === 'object' &&\n      optionsArgument !== null &&\n      'headers' in optionsArgument &&\n      optionsArgument.headers\n    ) {\n      return new Headers(optionsArgument.headers as any);\n    }\n\n    if (isRequest(requestArgument)) {\n      return new Headers(requestArgument.headers);\n    }\n  } catch {\n    // noop\n  }\n\n  return;\n}\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\nexport type SdkSource = 'npm' | 'cdn' | 'loader';\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nexport function getSDKSource(): SdkSource {\n  // This comment is used to identify this line in the CDN bundle build step and replace this with \"return 'cdn';\"\n  /* __SENTRY_SDK_SOURCE__ */ return 'npm';\n}\n","import type { Mechanism, WrappedFunction } from '@sentry/core';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  addNonEnumerableProperty,\n  captureException,\n  getLocationHref,\n  getOriginalFunction,\n  GLOBAL_OBJ,\n  markFunctionWrapped,\n  withScope,\n} from '@sentry/core';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype WrappableFunction = Function;\n\nexport function wrap<T extends WrappableFunction>(\n  fn: T,\n  options?: {\n    mechanism?: Mechanism;\n  },\n): WrappedFunction<T>;\nexport function wrap<NonFunction>(\n  fn: NonFunction,\n  options?: {\n    mechanism?: Mechanism;\n  },\n): NonFunction;\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap<T extends WrappableFunction, NonFunction>(\n  fn: T | NonFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n): NonFunction | WrappedFunction<T> {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  function isFunction(fn: T | NonFunction): fn is T {\n    return typeof fn === 'function';\n  }\n\n  if (!isFunction(fn)) {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = (fn as WrappedFunction<T>).__sentry_wrapped__;\n    if (wrapper) {\n      if (typeof wrapper === 'function') {\n        return wrapper;\n      } else {\n        // If we find that the `__sentry_wrapped__` function is not a function at the time of accessing it, it means\n        // that something messed with it. In that case we want to return the originally passed function.\n        return fn;\n      }\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  // Wrap the function itself\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped = function (this: unknown, ...args: unknown[]): unknown {\n    try {\n      // Also wrap arguments that are themselves functions\n      const wrappedArguments = args.map(arg => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  } as unknown as WrappedFunction<T>;\n\n  // Wrap the wrapped function in a proxy, to ensure any other properties of the original function remain available\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property as keyof T] = fn[property as keyof T];\n      }\n    }\n  } catch {\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  }\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name')!;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n  } catch {\n    // This may throw if e.g. the descriptor does not exist, or a browser does not allow redefining `name`.\n    // to save some bytes we simply try-catch this\n  }\n\n  return sentryWrapped;\n}\n\n/**\n * Get HTTP request data from the current page.\n */\nexport function getHttpRequestData(): { url: string; headers: Record<string, string> } {\n  // grab as much info as exists and add it to the event\n  const url = getLocationHref();\n  const { referrer } = WINDOW.document || {};\n  const { userAgent } = WINDOW.navigator || {};\n\n  const headers = {\n    ...(referrer && { Referer: referrer }),\n    ...(userAgent && { 'User-Agent': userAgent }),\n  };\n  const request = {\n    url,\n    headers,\n  };\n\n  return request;\n}\n","import type {\n  Event,\n  EventHint,\n  Exception,\n  ParameterizedString,\n  SeverityLevel,\n  StackFrame,\n  StackParser,\n} from '@sentry/core';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  extractExceptionKeysForMessage,\n  getClient,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isParameterizedString,\n  isPlainObject,\n  normalizeToSize,\n  resolvedSyncPromise,\n} from '@sentry/core';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nexport function exceptionFromError(stackParser: StackParser, ex: Error): Exception {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception: Exception = {\n    type: extractType(ex),\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\nfunction eventFromPlainObject(\n  stackParser: StackParser,\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  isUnhandledRejection?: boolean,\n): Event {\n  const client = getClient();\n  const normalizeDepth = client?.getOptions().normalizeDepth;\n\n  // If we can, we extract an exception from the object properties\n  const errorFromProp = getErrorPropertyFromObject(exception);\n\n  const extra = {\n    __serialized__: normalizeToSize(exception, normalizeDepth),\n  };\n\n  if (errorFromProp) {\n    return {\n      exception: {\n        values: [exceptionFromError(stackParser, errorFromProp)],\n      },\n      extra,\n    };\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        } as Exception,\n      ],\n    },\n    extra,\n  } satisfies Event;\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception.values[0]!.stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\nfunction eventFromError(stackParser: StackParser, ex: Error): Event {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser: StackParser,\n  ex: Error & { framesToPop?: number; stacktrace?: string },\n): StackFrame[] {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const skipLines = getSkipFirstStackStringLines(ex);\n  const framesToPop = getPopFirstTopFrames(ex);\n\n  try {\n    return stackParser(stacktrace, skipLines, framesToPop);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\n/**\n * Certain known React errors contain links that would be falsely\n * parsed as frames. This function check for these errors and\n * returns number of the stack string lines to skip.\n */\nfunction getSkipFirstStackStringLines(ex: Error): number {\n  if (ex && reactMinifiedRegexp.test(ex.message)) {\n    return 1;\n  }\n\n  return 0;\n}\n\n/**\n * If error has `framesToPop` property, it means that the\n * creator tells us the first x frames will be useless\n * and should be discarded. Typically error from wrapper function\n * which don't point to the actual location in the developer's code.\n *\n * Example: https://github.com/zertosh/invariant/blob/master/invariant.js#L46\n */\nfunction getPopFirstTopFrames(ex: Error & { framesToPop?: unknown }): number {\n  if (typeof ex.framesToPop === 'number') {\n    return ex.framesToPop;\n  }\n\n  return 0;\n}\n\n// https://developer.mozilla.org/en-US/docs/WebAssembly/JavaScript_interface/Exception\n// @ts-expect-error - WebAssembly.Exception is a valid class\nfunction isWebAssemblyException(exception: unknown): exception is WebAssembly.Exception {\n  // Check for support\n  // @ts-expect-error - WebAssembly.Exception is a valid class\n  if (typeof WebAssembly !== 'undefined' && typeof WebAssembly.Exception !== 'undefined') {\n    // @ts-expect-error - WebAssembly.Exception is a valid class\n    return exception instanceof WebAssembly.Exception;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Extracts from errors what we use as the exception `type` in error events.\n *\n * Usually, this is the `name` property on Error objects but WASM errors need to be treated differently.\n */\nexport function extractType(ex: Error & { message: { error?: Error } }): string | undefined {\n  const name = ex?.name;\n\n  // The name for WebAssembly.Exception Errors needs to be extracted differently.\n  // Context: https://github.com/getsentry/sentry-javascript/issues/13787\n  if (!name && isWebAssemblyException(ex)) {\n    // Emscripten sets array[type, message] to the \"message\" property on the WebAssembly.Exception object\n    const hasTypeInMessage = ex.message && Array.isArray(ex.message) && ex.message.length == 2;\n    return hasTypeInMessage ? ex.message[0] : 'WebAssembly.Exception';\n  }\n\n  return name;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nexport function extractMessage(ex: Error & { message: { error?: Error } }): string {\n  const message = ex?.message;\n\n  if (isWebAssemblyException(ex)) {\n    // For Node 18, Emscripten sets array[type, message] to the \"message\" property on the WebAssembly.Exception object\n    if (Array.isArray(ex.message) && ex.message.length == 2) {\n      return ex.message[1];\n    }\n    return 'wasm exception';\n  }\n\n  if (!message) {\n    return 'No error message';\n  }\n\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nexport function eventFromException(\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = hint?.syntheticException || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint?.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  level: SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = hint?.syntheticException || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint?.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  stackParser: StackParser,\n  exception: unknown,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n  isUnhandledRejection?: boolean,\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    return eventFromError(stackParser, errorEvent.error as Error);\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception as DOMException)) {\n    const domException = exception as DOMException;\n\n    if ('stack' in (exception as Error)) {\n      event = eventFromError(stackParser, exception as Error);\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception as string, syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\nfunction eventFromString(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n    addExceptionMechanism(event, { synthetic: true });\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception: Record<string, unknown>,\n  { isUnhandledRejection }: { isUnhandledRejection?: boolean },\n): string {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj: unknown): string | undefined | void {\n  try {\n    const prototype: Prototype | null = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\n/** If a plain object has a property that is an `Error`, return this error. */\nfunction getErrorPropertyFromObject(obj: Record<string, unknown>): Error | undefined {\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      const value = obj[prop];\n      if (value instanceof Error) {\n        return value;\n      }\n    }\n  }\n\n  return undefined;\n}\n","import type {\n  BrowserClientProfilingOptions,\n  BrowserClientReplayOptions,\n  ClientOptions,\n  Event,\n  EventHint,\n  Options,\n  ParameterizedString,\n  Scope,\n  SeverityLevel,\n} from '@sentry/core';\nimport {\n  _INTERNAL_flushLogsBuffer,\n  addAutoIpAddressToSession,\n  addAutoIpAddressToUser,\n  applySdkMetadata,\n  Client,\n  getSDKSource,\n} from '@sentry/core';\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { WINDOW } from './helpers';\nimport type { BrowserTransportOptions } from './transports/types';\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\ndeclare const __SENTRY_RELEASE__: string | undefined;\n\nconst DEFAULT_FLUSH_INTERVAL = 5000;\n\ntype BrowserSpecificOptions = BrowserClientReplayOptions &\n  BrowserClientProfilingOptions & {\n    /** If configured, this URL will be used as base URL for lazy loading integration. */\n    cdnBaseUrl?: string;\n  };\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/core Options for more information.\n */\nexport type BrowserOptions = Options<BrowserTransportOptions> &\n  BrowserSpecificOptions & {\n    /**\n     * Important: Only set this option if you know what you are doing!\n     *\n     * By default, the SDK will check if `Sentry.init` is called in a browser extension.\n     * In case it is, it will stop initialization and log a warning\n     * because browser extensions require a different Sentry initialization process:\n     * https://docs.sentry.io/platforms/javascript/best-practices/shared-environments/\n     *\n     * Setting up the SDK in a browser extension with global error monitoring is not recommended\n     * and will likely flood you with errors from other web sites or extensions. This can heavily\n     * impact your quota and cause interference with your and other Sentry SDKs in shared environments.\n     *\n     * If this check wrongfully flags your setup as a browser extension, you can set this\n     * option to `true` to skip the check.\n     *\n     * @default false\n     */\n    skipBrowserExtensionCheck?: boolean;\n  };\n\n/**\n * Configuration options for the Sentry Browser SDK Client class\n * @see BrowserClient for more information.\n */\nexport type BrowserClientOptions = ClientOptions<BrowserTransportOptions> & BrowserSpecificOptions;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends Client<BrowserClientOptions> {\n  private _logFlushIdleTimeout: ReturnType<typeof setTimeout> | undefined;\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserClientOptions) {\n    const opts = applyDefaultOptions(options);\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(opts, 'browser', ['browser'], sdkSource);\n\n    super(opts);\n\n    const { sendDefaultPii, sendClientReports, _experiments } = this._options;\n    const enableLogs = _experiments?.enableLogs;\n\n    if (WINDOW.document && (sendClientReports || enableLogs)) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          if (sendClientReports) {\n            this._flushOutcomes();\n          }\n          if (enableLogs) {\n            _INTERNAL_flushLogsBuffer(this);\n          }\n        }\n      });\n    }\n\n    if (enableLogs) {\n      this.on('flush', () => {\n        _INTERNAL_flushLogsBuffer(this);\n      });\n\n      this.on('afterCaptureLog', () => {\n        if (this._logFlushIdleTimeout) {\n          clearTimeout(this._logFlushIdleTimeout);\n        }\n\n        this._logFlushIdleTimeout = setTimeout(() => {\n          _INTERNAL_flushLogsBuffer(this);\n        }, DEFAULT_FLUSH_INTERVAL);\n      });\n    }\n\n    if (sendDefaultPii) {\n      this.on('postprocessEvent', addAutoIpAddressToUser);\n      this.on('beforeSendSession', addAutoIpAddressToSession);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: ParameterizedString,\n    level: SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(\n    event: Event,\n    hint: EventHint,\n    currentScope: Scope,\n    isolationScope: Scope,\n  ): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n\n    return super._prepareEvent(event, hint, currentScope, isolationScope);\n  }\n}\n\n/** Exported only for tests. */\nexport function applyDefaultOptions<T extends Partial<BrowserClientOptions>>(optionsArg: T): T {\n  return {\n    release:\n      typeof __SENTRY_RELEASE__ === 'string' // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n        ? __SENTRY_RELEASE__\n        : WINDOW.SENTRY_RELEASE?.id, // This supports the variable that sentry-webpack-plugin injects\n    sendClientReports: true,\n    // We default this to true, as it is the safer scenario\n    parentSpanIsAlwaysRootSpan: true,\n    ...optionsArg,\n  };\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import type {\n  FetchBreadcrumbHint,\n  HandlerDataFetch,\n  SentryWrappedXMLHttpRequest,\n  XhrBreadcrumbHint,\n} from '@sentry/core';\nimport { GLOBAL_OBJ } from '@sentry/core';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ &\n  // document is not available in all browser environments (webworkers). We make it optional so you have to explicitly check for it\n  Omit<Window, 'document'> &\n  Partial<Pick<Window, 'document'>>;\n\nexport type NetworkMetaWarning =\n  | 'MAYBE_JSON_TRUNCATED'\n  | 'TEXT_TRUNCATED'\n  | 'URL_SKIPPED'\n  | 'BODY_PARSE_ERROR'\n  | 'BODY_PARSE_TIMEOUT'\n  | 'UNPARSEABLE_BODY_TYPE';\n\ntype RequestBody = null | Blob | BufferSource | FormData | URLSearchParams | string;\n\nexport type XhrHint = XhrBreadcrumbHint & {\n  xhr: XMLHttpRequest & SentryWrappedXMLHttpRequest;\n  input?: RequestBody;\n};\nexport type FetchHint = FetchBreadcrumbHint & {\n  input: HandlerDataFetch['args'];\n  response: Response;\n};\n","import type { HandlerDataDom } from '@sentry/core';\nimport { addHandler, addNonEnumerableProperty, fill, maybeInstrument, triggerHandlers, uuid4 } from '@sentry/core';\nimport { WINDOW } from '../types';\n\ntype SentryWrappedTarget = HTMLElement & { _sentryId?: string };\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: unknown;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID: number | undefined;\nlet lastCapturedEventType: string | undefined;\nlet lastCapturedEventTargetId: string | undefined;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addClickKeypressInstrumentationHandler(handler: (data: HandlerDataDom) => void): void {\n  const type = 'dom';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nexport function instrumentDOM(): void {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    const globalObject = WINDOW as unknown as Record<string, { prototype?: object }>;\n    const proto = globalObject[target]?.prototype;\n\n    // eslint-disable-next-line no-prototype-builtins\n    if (!proto?.hasOwnProperty?.('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (this: InstrumentedElement, type, listener, options): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const handlers = (this.__sentry_instrumentation_handlers__ =\n              this.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListeners` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (this: InstrumentedElement, type, listener, options): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const handlers = this.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete this.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListeners` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event: Event): boolean {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target as SentryWrappedTarget)._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType: string, target: SentryWrappedTarget | null): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target?.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler: (data: HandlerDataDom) => void,\n  globalListener: boolean = false,\n): (event: Event) => void {\n  return (event: Event & { _sentryCaptured?: true }): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      addNonEnumerableProperty(target, '_sentryId', uuid4());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData: HandlerDataDom = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event: Event): SentryWrappedTarget | null {\n  try {\n    return event.target as SentryWrappedTarget | null;\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n","import type { HandlerDataHistory } from '@sentry/core';\nimport { addHandler, fill, maybeInstrument, supportsHistory, triggerHandlers } from '@sentry/core';\nimport { WINDOW } from '../types';\n\nlet lastHref: string | undefined;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addHistoryInstrumentationHandler(handler: (data: HandlerDataHistory) => void): void {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\n/**\n * Exported just for testing\n */\nexport function instrumentHistory(): void {\n  // The `popstate` event may also be triggered on `pushState`, but it may not always reliably be emitted by the browser\n  // Which is why we also monkey-patch methods below, in addition to this\n  WINDOW.addEventListener('popstate', () => {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n\n    if (from === to) {\n      return;\n    }\n\n    const handlerData = { from, to } satisfies HandlerDataHistory;\n    triggerHandlers('history', handlerData);\n  });\n\n  // Just guard against this not being available, in weird environments\n  if (!supportsHistory()) {\n    return;\n  }\n\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: unknown[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        const from = lastHref;\n\n        // Ensure the URL is absolute\n        // this can be either a path, then it is relative to the current origin\n        // or a full URL of the current origin - other origins are not allowed\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/History/pushState#url\n        // coerce to string (this is what pushState does)\n        const to = getAbsoluteUrl(String(url));\n\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n\n        if (from === to) {\n          return originalHistoryFunction.apply(this, args);\n        }\n\n        const handlerData = { from, to } satisfies HandlerDataHistory;\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nfunction getAbsoluteUrl(urlOrPath: string): string {\n  try {\n    const url = new URL(urlOrPath, WINDOW.location.origin);\n    return url.toString();\n  } catch {\n    // fallback, just do nothing\n    return urlOrPath;\n  }\n}\n","import { isNativeFunction, logger } from '@sentry/core';\nimport { DEBUG_BUILD } from './debug-build';\nimport { WINDOW } from './types';\n\n/**\n * We generally want to use window.fetch / window.setTimeout.\n * However, in some cases this may be wrapped (e.g. by Zone.js for Angular),\n * so we try to get an unpatched version of this from a sandboxed iframe.\n */\n\ninterface CacheableImplementations {\n  setTimeout: typeof WINDOW.setTimeout;\n  fetch: typeof WINDOW.fetch;\n}\n\nconst cachedImplementations: Partial<CacheableImplementations> = {};\n\n/**\n * Get the native implementation of a browser function.\n *\n * This can be used to ensure we get an unwrapped version of a function, in cases where a wrapped function can lead to problems.\n *\n * The following methods can be retrieved:\n * - `setTimeout`: This can be wrapped by e.g. Angular, causing change detection to be triggered.\n * - `fetch`: This can be wrapped by e.g. ad-blockers, causing an infinite loop when a request is blocked.\n */\nexport function getNativeImplementation<T extends keyof CacheableImplementations>(\n  name: T,\n): CacheableImplementations[T] {\n  const cached = cachedImplementations[name];\n  if (cached) {\n    return cached;\n  }\n\n  let impl = WINDOW[name] as CacheableImplementations[T];\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFunction(impl)) {\n    return (cachedImplementations[name] = impl.bind(WINDOW) as CacheableImplementations[T]);\n  }\n\n  const document = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow?.[name]) {\n        impl = contentWindow[name] as CacheableImplementations[T];\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      // Could not create sandbox iframe, just use window.xxx\n      DEBUG_BUILD && logger.warn(`Could not create sandbox iframe for ${name} check, bailing to window.${name}: `, e);\n    }\n  }\n\n  // Sanity check: This _should_ not happen, but if it does, we just skip caching...\n  // This can happen e.g. in tests where fetch may not be available in the env, or similar.\n  if (!impl) {\n    return impl;\n  }\n\n  return (cachedImplementations[name] = impl.bind(WINDOW) as CacheableImplementations[T]);\n}\n\n/** Clear a cached implementation. */\nexport function clearCachedImplementation(name: keyof CacheableImplementations): void {\n  cachedImplementations[name] = undefined;\n}\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nexport function fetch(...rest: Parameters<typeof WINDOW.fetch>): ReturnType<typeof WINDOW.fetch> {\n  return getNativeImplementation('fetch')(...rest);\n}\n\n/**\n * Get an unwrapped `setTimeout` method.\n * This ensures that even if e.g. Angular wraps `setTimeout`, we get the native implementation,\n * avoiding triggering change detection.\n */\nexport function setTimeout(...rest: Parameters<typeof WINDOW.setTimeout>): ReturnType<typeof WINDOW.setTimeout> {\n  return getNativeImplementation('setTimeout')(...rest);\n}\n","import type { HandlerDataXhr, SentryWrappedXMLHttpRequest } from '@sentry/core';\nimport { addHandler, isString, maybeInstrument, timestampInSeconds, triggerHandlers } from '@sentry/core';\nimport { WINDOW } from '../types';\n\nexport const SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\ntype WindowWithXhr = Window & { XMLHttpRequest?: typeof XMLHttpRequest };\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addXhrInstrumentationHandler(handler: (data: HandlerDataXhr) => void): void {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nexport function instrumentXHR(): void {\n  if (!(WINDOW as WindowWithXhr).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  xhrproto.open = new Proxy(xhrproto.open, {\n    apply(\n      originalOpen,\n      xhrOpenThisArg: XMLHttpRequest & SentryWrappedXMLHttpRequest,\n      xhrOpenArgArray:\n        | [method: string, url: string | URL]\n        | [method: string, url: string | URL, async: boolean, username?: string | null, password?: string | null],\n    ) {\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n      //       it means the error, that was caused by your XHR call did not\n      //       have a stack trace. If you are using HttpClient integration,\n      //       this is the expected behavior, as we are using this virtual error to capture\n      //       the location of your XHR call, and group your HttpClient events accordingly.\n      const virtualError = new Error();\n\n      const startTimestamp = timestampInSeconds() * 1000;\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(xhrOpenArgArray[0]) ? xhrOpenArgArray[0].toUpperCase() : undefined;\n      const url = parseXhrUrlArg(xhrOpenArgArray[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(xhrOpenThisArg, xhrOpenArgArray);\n      }\n\n      xhrOpenThisArg[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        xhrOpenThisArg.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler: () => void = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = xhrOpenThisArg[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (xhrOpenThisArg.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = xhrOpenThisArg.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData: HandlerDataXhr = {\n            endTimestamp: timestampInSeconds() * 1000,\n            startTimestamp,\n            xhr: xhrOpenThisArg,\n            virtualError,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in xhrOpenThisArg && typeof xhrOpenThisArg.onreadystatechange === 'function') {\n        xhrOpenThisArg.onreadystatechange = new Proxy(xhrOpenThisArg.onreadystatechange, {\n          apply(originalOnreadystatechange, onreadystatechangeThisArg, onreadystatechangeArgArray: unknown[]) {\n            onreadystatechangeHandler();\n            return originalOnreadystatechange.apply(onreadystatechangeThisArg, onreadystatechangeArgArray);\n          },\n        });\n      } else {\n        xhrOpenThisArg.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      xhrOpenThisArg.setRequestHeader = new Proxy(xhrOpenThisArg.setRequestHeader, {\n        apply(\n          originalSetRequestHeader,\n          setRequestHeaderThisArg: SentryWrappedXMLHttpRequest,\n          setRequestHeaderArgArray: unknown[],\n        ) {\n          const [header, value] = setRequestHeaderArgArray;\n\n          const xhrInfo = setRequestHeaderThisArg[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return originalSetRequestHeader.apply(setRequestHeaderThisArg, setRequestHeaderArgArray);\n        },\n      });\n\n      return originalOpen.apply(xhrOpenThisArg, xhrOpenArgArray);\n    },\n  });\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  xhrproto.send = new Proxy(xhrproto.send, {\n    apply(originalSend, sendThisArg: XMLHttpRequest & SentryWrappedXMLHttpRequest, sendArgArray: unknown[]) {\n      const sentryXhrData = sendThisArg[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(sendThisArg, sendArgArray);\n      }\n\n      if (sendArgArray[0] !== undefined) {\n        sentryXhrData.body = sendArgArray[0];\n      }\n\n      const handlerData: HandlerDataXhr = {\n        startTimestamp: timestampInSeconds() * 1000,\n        xhr: sendThisArg,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(sendThisArg, sendArgArray);\n    },\n  });\n}\n\n/**\n * Parses the URL argument of a XHR method to a string.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/open#url\n * url: A string or any other object with a stringifier — including a URL object — that provides the URL of the resource to send the request to.\n *\n * @param url - The URL argument of an XHR method\n * @returns The parsed URL string or undefined if the URL is invalid\n */\nfunction parseXhrUrlArg(url: unknown): string | undefined {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // If the passed in argument is not a string, it should have a `toString` method as a stringifier.\n    // If that fails, we just return undefined (like in IE11 where URL is not available)\n    return (url as URL).toString();\n  } catch {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n","import type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/core';\nimport { createTransport, rejectedSyncPromise } from '@sentry/core';\nimport { clearCachedImplementation, getNativeImplementation } from '@sentry-internal/browser-utils';\nimport type { WINDOW } from '../helpers';\nimport type { BrowserTransportOptions } from './types';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nexport function makeFetchTransport(\n  options: BrowserTransportOptions,\n  nativeFetch: typeof WINDOW.fetch | undefined = getNativeImplementation('fetch'),\n): Transport {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions: RequestInit = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'strict-origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. when finishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60_000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    if (!nativeFetch) {\n      clearCachedImplementation('fetch');\n      return rejectedSyncPromise('No fetch implementation available');\n    }\n\n    try {\n      // Note: We do not need to suppress tracing here, becasue we are using the native fetch, instead of our wrapped one.\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedImplementation('fetch');\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n","// This was originally forked from https://github.com/csnover/TraceKit, and was largely\n// re - written as part of raven - js.\n//\n// This code was later copied to the JavaScript mono - repo and further modified and\n// refactored over the years.\n\n// Copyright (c) 2013 Onur Can Cakmak onur.cakmak@gmail.com and all TraceKit contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this\n// software and associated documentation files(the 'Software'), to deal in the Software\n// without restriction, including without limitation the rights to use, copy, modify,\n// merge, publish, distribute, sublicense, and / or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies\n// or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { StackFrame, StackLineParser, StackLineParserFn } from '@sentry/core';\nimport { createStackParser, UNKNOWN_FUNCTION } from '@sentry/core';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename: string, func: string, lineno?: number, colno?: number): StackFrame {\n  const frame: StackFrame = {\n    filename,\n    function: func === '<anonymous>' ? UNKNOWN_FUNCTION : func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// This regex matches frames that have no function name (ie. are at the top level of a module).\n// For example \"at http://localhost:5000//script.js:1:126\"\n// Frames _with_ function names usually look as follows: \"at commitLayoutEffects (react-dom.development.js:23426:1)\"\nconst chromeRegexNoFnName = /^\\s*at (\\S+?)(?::(\\d+))(?::(\\d+))\\s*$/i;\n\n// This regex matches all the frames that have a function name.\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn: StackLineParserFn = line => {\n  // If the stack line has no function name, we need to parse it differently\n  const noFnParts = chromeRegexNoFnName.exec(line) as null | [string, string, string, string];\n\n  if (noFnParts) {\n    const [, filename, line, col] = noFnParts;\n    return createFrame(filename, UNKNOWN_FUNCTION, +line, +col);\n  }\n\n  const parts = chromeRegex.exec(line) as null | [string, string, string, string, string];\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]) as null | [string, string, string, string];\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nexport const chromeStackLineParser: StackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko: StackLineParserFn = line => {\n  const parts = geckoREgex.exec(line) as null | [string, string, string, string, string, string];\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]) as null | [string, string, string];\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nexport const geckoStackLineParser: StackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs: StackLineParserFn = line => {\n  const parts = winjsRegex.exec(line) as null | [string, string, string, string, string];\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nexport const winjsStackLineParser: StackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10: StackLineParserFn = line => {\n  const parts = opera10Regex.exec(line) as null | [string, string, string, string];\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nexport const opera10StackLineParser: StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11: StackLineParserFn = line => {\n  const parts = opera11Regex.exec(line) as null | [string, string, string, string, string, string];\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nexport const opera11StackLineParser: StackLineParser = [OPERA11_PRIORITY, opera11];\n\nexport const defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser];\n\nexport const defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func: string, filename: string): [string, string] => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? (func.split('@')[0] as string) : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","/* eslint-disable max-lines */\n\nimport type {\n  Breadcrumb,\n  Client,\n  Event as SentryEvent,\n  FetchBreadcrumbData,\n  FetchBreadcrumbHint,\n  HandlerDataConsole,\n  HandlerDataDom,\n  HandlerDataFetch,\n  HandlerDataHistory,\n  HandlerDataXhr,\n  IntegrationFn,\n  XhrBreadcrumbData,\n  XhrBreadcrumbHint,\n} from '@sentry/core';\nimport {\n  addBreadcrumb,\n  addConsoleInstrumentationHandler,\n  addFetchInstrumentationHandler,\n  defineIntegration,\n  getBreadcrumbLogLevelFromHttpStatusCode,\n  getClient,\n  getComponentName,\n  getEventDescription,\n  htmlTreeAsString,\n  logger,\n  parseUrl,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/core';\nimport type { FetchHint, XhrHint } from '@sentry-internal/browser-utils';\nimport {\n  addClickKeypressInstrumentationHandler,\n  addHistoryInstrumentationHandler,\n  addXhrInstrumentationHandler,\n  SENTRY_XHR_DATA_KEY,\n} from '@sentry-internal/browser-utils';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom:\n    | boolean\n    | {\n        serializeAttribute?: string | string[];\n        maxStringLength?: number;\n      };\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options: Partial<BreadcrumbsOptions> = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      // TODO(v10): Remove this functionality and use `consoleIntegration` from @sentry/core instead.\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client: Client): (event: SentryEvent) => void {\n  return function addSentryBreadcrumb(event: SentryEvent): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creates a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client: Client,\n  dom: BreadcrumbsOptions['dom'],\n): (handlerData: HandlerDataDom) => void {\n  return function _innerDomBreadcrumb(handlerData: HandlerDataDom): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event as Event | Node;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb: Breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client: Client): (handlerData: HandlerDataConsole) => void {\n  return function _consoleBreadcrumb(handlerData: HandlerDataConsole): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client: Client): (handlerData: HandlerDataXhr) => void {\n  return function _xhrBreadcrumb(handlerData: HandlerDataXhr): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data: XhrBreadcrumbData = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint: XhrBreadcrumbHint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    const breadcrumb = {\n      category: 'xhr',\n      data,\n      type: 'http',\n      level: getBreadcrumbLogLevelFromHttpStatusCode(status_code),\n    };\n\n    client.emit('beforeOutgoingRequestBreadcrumb', breadcrumb, hint as XhrHint);\n\n    addBreadcrumb(breadcrumb, hint);\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client: Client): (handlerData: HandlerDataFetch) => void {\n  return function _fetchBreadcrumb(handlerData: HandlerDataFetch): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    const breadcrumbData: FetchBreadcrumbData = {\n      method: handlerData.fetchData.method,\n      url: handlerData.fetchData.url,\n    };\n\n    if (handlerData.error) {\n      const data: FetchBreadcrumbData = handlerData.fetchData;\n      const hint: FetchBreadcrumbHint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      const breadcrumb = {\n        category: 'fetch',\n        data,\n        level: 'error',\n        type: 'http',\n      } satisfies Breadcrumb;\n\n      client.emit('beforeOutgoingRequestBreadcrumb', breadcrumb, hint as FetchHint);\n\n      addBreadcrumb(breadcrumb, hint);\n    } else {\n      const response = handlerData.response as Response | undefined;\n      const data: FetchBreadcrumbData = {\n        ...handlerData.fetchData,\n        status_code: response?.status,\n      };\n\n      breadcrumbData.request_body_size = handlerData.fetchData.request_body_size;\n      breadcrumbData.response_body_size = handlerData.fetchData.response_body_size;\n      breadcrumbData.status_code = response?.status;\n\n      const hint: FetchBreadcrumbHint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      const breadcrumb = {\n        category: 'fetch',\n        data,\n        type: 'http',\n        level: getBreadcrumbLogLevelFromHttpStatusCode(data.status_code),\n      };\n\n      client.emit('beforeOutgoingRequestBreadcrumb', breadcrumb, hint as FetchHint);\n\n      addBreadcrumb(breadcrumb, hint);\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client: Client): (handlerData: HandlerDataHistory) => void {\n  return function _historyBreadcrumb(handlerData: HandlerDataHistory): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from: string | undefined = handlerData.from;\n    let to: string | undefined = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom?.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event: unknown): event is Event {\n  return !!event && !!(event as Record<string, unknown>).target;\n}\n","import type { IntegrationFn, WrappedFunction } from '@sentry/core';\nimport { defineIntegration, fill, getFunctionName, getOriginalFunction } from '@sentry/core';\nimport { WINDOW, wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'BrowserApiErrors';\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\ninterface BrowserApiErrorsOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n\n  /**\n   * If you experience issues with this integration causing double-invocations of event listeners,\n   * try setting this option to `true`. It will unregister the original callbacks from the event targets\n   * before adding the instrumented callback.\n   *\n   * @default false\n   */\n  unregisterOriginalCallbacks: boolean;\n}\n\nconst _browserApiErrorsIntegration = ((options: Partial<BrowserApiErrorsOptions> = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    unregisterOriginalCallbacks: false,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(target => _wrapEventTarget(target, _options));\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n */\nexport const browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\nfunction _wrapTimeFunction(original: () => void): () => number {\n  return function (this: unknown, ...args: unknown[]): number {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\nfunction _wrapRAF(original: () => void): (callback: () => void) => unknown {\n  return function (this: unknown, callback: () => void): () => void {\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend: () => void): () => void {\n  return function (this: XMLHttpRequest, ...args: unknown[]): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        fill(xhr, prop, function (original) {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before BrowserApiErrors, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target: string, integrationOptions: BrowserApiErrorsOptions): void {\n  const globalObject = WINDOW as unknown as Record<string, { prototype?: object }>;\n  const proto = globalObject[target]?.prototype;\n\n  // eslint-disable-next-line no-prototype-builtins\n  if (!proto?.hasOwnProperty?.('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original: VoidFunction): (\n    ...args: Parameters<typeof WINDOW.addEventListener>\n  ) => ReturnType<typeof WINDOW.addEventListener> {\n    return function (this: unknown, eventName, fn, options): VoidFunction {\n      try {\n        if (isEventListenerObject(fn)) {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      if (integrationOptions.unregisterOriginalCallbacks) {\n        unregisterOriginalCallback(this, eventName, fn);\n      }\n\n      return original.apply(this, [\n        eventName,\n        wrap(fn, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(proto, 'removeEventListener', function (originalRemoveEventListener: VoidFunction): (\n    this: unknown,\n    ...args: Parameters<typeof WINDOW.removeEventListener>\n  ) => ReturnType<typeof WINDOW.removeEventListener> {\n    return function (this: unknown, eventName, fn, options): VoidFunction {\n      /**\n       * There are 2 possible scenarios here:\n       *\n       * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n       * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n       * as a pass-through, and call original `removeEventListener` with it.\n       *\n       * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n       * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n       * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n       * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n       * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n       *\n       * When someone adds a handler prior to initialization, and then do it again, but after,\n       * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n       * to get rid of the initial handler and it'd stick there forever.\n       */\n      try {\n        const originalEventHandler = (fn as WrappedFunction).__sentry_wrapped__;\n        if (originalEventHandler) {\n          originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n        }\n      } catch (e) {\n        // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n      }\n      return originalRemoveEventListener.call(this, eventName, fn, options);\n    };\n  });\n}\n\nfunction isEventListenerObject(obj: unknown): obj is EventListenerObject {\n  return typeof (obj as EventListenerObject).handleEvent === 'function';\n}\n\nfunction unregisterOriginalCallback(target: unknown, eventName: string, fn: EventListenerOrEventListenerObject): void {\n  if (\n    target &&\n    typeof target === 'object' &&\n    'removeEventListener' in target &&\n    typeof target.removeEventListener === 'function'\n  ) {\n    target.removeEventListener(eventName, fn);\n  }\n}\n","import { captureSession, defineIntegration, logger, startSession } from '@sentry/core';\nimport { addHistoryInstrumentationHandler } from '@sentry-internal/browser-utils';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\n/**\n * When added, automatically creates sessions which allow you to track adoption and crashes (crash free rate) in your Releases in Sentry.\n * More information: https://docs.sentry.io/product/releases/health/\n *\n * Note: In order for session tracking to work, you need to set up Releases: https://docs.sentry.io/product/releases/\n */\nexport const browserSessionIntegration = defineIntegration(() => {\n  return {\n    name: 'BrowserSession',\n    setupOnce() {\n      if (typeof WINDOW.document === 'undefined') {\n        DEBUG_BUILD &&\n          logger.warn('Using the `browserSessionIntegration` in non-browser environments is not supported.');\n        return;\n      }\n\n      // The session duration for browser sessions does not track a meaningful\n      // concept that can be used as a metric.\n      // Automatically captured sessions are akin to page views, and thus we\n      // discard their duration.\n      startSession({ ignoreDuration: true });\n      captureSession();\n\n      // We want to create a session for every navigation as well\n      addHistoryInstrumentationHandler(({ from, to }) => {\n        // Don't create an additional session for the initial route or if the location did not change\n        if (from !== undefined && from !== to) {\n          startSession({ ignoreDuration: true });\n          captureSession();\n        }\n      });\n    },\n  };\n});\n","import type { Client, Event, IntegrationFn, Primitive, StackParser } from '@sentry/core';\nimport {\n  addGlobalErrorInstrumentationHandler,\n  addGlobalUnhandledRejectionInstrumentationHandler,\n  captureEvent,\n  defineIntegration,\n  getClient,\n  getLocationHref,\n  isPrimitive,\n  isString,\n  logger,\n  UNKNOWN_FUNCTION,\n} from '@sentry/core';\nimport type { BrowserClient } from '../client';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\ntype GlobalHandlersIntegrationsOptionKeys = 'onerror' | 'onunhandledrejection';\n\ntype GlobalHandlersIntegrations = Record<GlobalHandlersIntegrationsOptionKeys, boolean>;\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options: Partial<GlobalHandlersIntegrations> = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\nfunction _installGlobalOnErrorHandler(client: Client): void {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event = _enhanceEventWithInitialFrame(\n      eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n      url,\n      line,\n      column,\n    );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client: Client): void {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e as unknown);\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error: unknown): unknown {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // dig the object of the rejection out of known event types\n  try {\n    type ErrorWithReason = { reason: unknown };\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in (error as ErrorWithReason)) {\n      return (error as ErrorWithReason).reason;\n    }\n\n    type CustomEventWithDetail = { detail: { reason: unknown } };\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    if ('detail' in (error as CustomEventWithDetail) && 'reason' in (error as CustomEventWithDetail).detail) {\n      return (error as CustomEventWithDetail).detail.reason;\n    }\n  } catch {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\nfunction _enhanceEventWithInitialFrame(\n  event: Event,\n  url: string | undefined,\n  line: number | undefined,\n  column: number | undefined,\n): Event {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = column;\n  const lineno = line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: UNKNOWN_FUNCTION,\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type: string): void {\n  DEBUG_BUILD && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions(): { stackParser: StackParser; attachStacktrace?: boolean } {\n  const client = getClient<BrowserClient>();\n  const options = client?.getOptions() || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n","import { defineIntegration } from '@sentry/core';\nimport { getHttpRequestData, WINDOW } from '../helpers';\n\n/**\n * Collects information about HTTP request headers and\n * attaches them to the event.\n */\nexport const httpContextIntegration = defineIntegration(() => {\n  return {\n    name: 'HttpContext',\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      const reqData = getHttpRequestData();\n      const headers = {\n        ...reqData.headers,\n        ...event.request?.headers,\n      };\n\n      event.request = {\n        ...reqData,\n        ...event.request,\n        headers,\n      };\n    },\n  };\n});\n","import type { IntegrationFn } from '@sentry/core';\nimport { applyAggregateErrorsToEvent, defineIntegration } from '@sentry/core';\nimport { exceptionFromError } from '../eventbuilder';\n\ninterface LinkedErrorsOptions {\n  key?: string;\n  limit?: number;\n}\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options: LinkedErrorsOptions = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Aggregrate linked errors in an event.\n */\nexport const linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n","import { consoleSandbox, getLocationHref } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\ntype ExtensionRuntime = {\n  runtime?: {\n    id?: string;\n  };\n};\ntype ExtensionProperties = {\n  chrome?: ExtensionRuntime;\n  browser?: ExtensionRuntime;\n  nw?: unknown;\n};\n\n/**\n * Returns true if the SDK is running in an embedded browser extension.\n * Stand-alone browser extensions (which do not share the same data as the main browser page) are fine.\n */\nexport function checkAndWarnIfIsEmbeddedBrowserExtension(): boolean {\n  if (_isEmbeddedBrowserExtension()) {\n    if (DEBUG_BUILD) {\n      consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.error(\n          '[Sentry] You cannot use Sentry.init() in a browser extension, see: https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/',\n        );\n      });\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isEmbeddedBrowserExtension(): boolean {\n  if (typeof WINDOW.window === 'undefined') {\n    // No need to show the error if we're not in a browser window environment (e.g. service workers)\n    return false;\n  }\n\n  const _window = WINDOW as typeof WINDOW & ExtensionProperties;\n\n  // Running the SDK in NW.js, which appears like a browser extension but isn't, is also fine\n  // see: https://github.com/getsentry/sentry-javascript/issues/12668\n  if (_window.nw) {\n    return false;\n  }\n\n  const extensionObject = _window['chrome'] || _window['browser'];\n\n  if (!extensionObject?.runtime?.id) {\n    return false;\n  }\n\n  const href = getLocationHref();\n  const extensionProtocols = ['chrome-extension', 'moz-extension', 'ms-browser-extension', 'safari-web-extension'];\n\n  // Running the SDK in a dedicated extension page and calling Sentry.init is fine; no risk of data leakage\n  const isDedicatedExtensionPage =\n    WINDOW === WINDOW.top && extensionProtocols.some(protocol => href.startsWith(`${protocol}://`));\n\n  return !isDedicatedExtensionPage;\n}\n","import type { Client, Integration, Options } from '@sentry/core';\nimport {\n  dedupeIntegration,\n  functionToStringIntegration,\n  getIntegrationsToSetup,\n  inboundFiltersIntegration,\n  initAndBind,\n  stackParserFromStackParserOptions,\n} from '@sentry/core';\nimport type { BrowserClientOptions, BrowserOptions } from './client';\nimport { BrowserClient } from './client';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs';\nimport { browserApiErrorsIntegration } from './integrations/browserapierrors';\nimport { browserSessionIntegration } from './integrations/browsersession';\nimport { globalHandlersIntegration } from './integrations/globalhandlers';\nimport { httpContextIntegration } from './integrations/httpcontext';\nimport { linkedErrorsIntegration } from './integrations/linkederrors';\nimport { defaultStackParser } from './stack-parsers';\nimport { makeFetchTransport } from './transports/fetch';\nimport { checkAndWarnIfIsEmbeddedBrowserExtension } from './utils/detectBrowserExtension';\n\n/** Get the default integrations for the browser SDK. */\nexport function getDefaultIntegrations(_options: Options): Integration[] {\n  /**\n   * Note: Please make sure this stays in sync with Angular SDK, which re-exports\n   * `getDefaultIntegrations` but with an adjusted set of integrations.\n   */\n  return [\n    // TODO(v10): Replace with `eventFiltersIntegration` once we remove the deprecated `inboundFiltersIntegration`\n    // eslint-disable-next-line deprecation/deprecation\n    inboundFiltersIntegration(),\n    functionToStringIntegration(),\n    browserApiErrorsIntegration(),\n    breadcrumbsIntegration(),\n    globalHandlersIntegration(),\n    linkedErrorsIntegration(),\n    dedupeIntegration(),\n    httpContextIntegration(),\n    browserSessionIntegration(),\n  ];\n}\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): Client | undefined {\n  const shouldDisableBecauseIsBrowserExtenstion =\n    !options.skipBrowserExtensionCheck && checkAndWarnIfIsEmbeddedBrowserExtension();\n\n  const clientOptions: BrowserClientOptions = {\n    ...options,\n    enabled: shouldDisableBecauseIsBrowserExtenstion ? false : options.enabled,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup({\n      integrations: options.integrations,\n      defaultIntegrations:\n        options.defaultIntegrations == null ? getDefaultIntegrations(options) : options.defaultIntegrations,\n    }),\n    transport: options.transport || makeFetchTransport,\n  };\n  return initAndBind(BrowserClient, clientOptions);\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n","import type { Plugin } from '@elizaos/core';\nimport {\n  type Action,\n  type Content,\n  type GenerateTextParams,\n  type HandlerCallback,\n  type IAgentRuntime,\n  type Memory,\n  ModelType,\n  type Provider,\n  type ProviderResult,\n  Service,\n  type State,\n  logger,\n} from '@elizaos/core';\nimport { z } from 'zod';\n\n/**\n * Define the configuration schema for the plugin with the following properties:\n *\n * @param {string} EXAMPLE_PLUGIN_VARIABLE - The name of the plugin (min length of 1, optional)\n * @returns {object} - The configured schema object\n */\nconst configSchema = z.object({\n  EXAMPLE_PLUGIN_VARIABLE: z\n    .string()\n    .min(1, 'Example plugin variable is not provided')\n    .optional()\n    .transform((val) => {\n      if (!val) {\n        console.warn('Warning: Example plugin variable is not provided');\n      }\n      return val;\n    }),\n});\n\n/**\n * Example HelloWorld action\n * This demonstrates the simplest possible action structure\n */\n/**\n * Represents an action that responds with a simple hello world message.\n *\n * @typedef {Object} Action\n * @property {string} name - The name of the action\n * @property {string[]} similes - The related similes of the action\n * @property {string} description - Description of the action\n * @property {Function} validate - Validation function for the action\n * @property {Function} handler - The function that handles the action\n * @property {Object[]} examples - Array of examples for the action\n */\nconst helloWorldAction: Action = {\n  name: 'HELLO_WORLD',\n  similes: ['GREET', 'SAY_HELLO'],\n  description: 'Responds with a simple hello world message',\n\n  validate: async (_runtime: IAgentRuntime, _message: Memory, _state: State): Promise<boolean> => {\n    // Always valid\n    return true;\n  },\n\n  handler: async (\n    _runtime: IAgentRuntime,\n    message: Memory,\n    _state: State,\n    _options: any,\n    callback: HandlerCallback,\n    _responses: Memory[]\n  ) => {\n    try {\n      logger.info('Handling HELLO_WORLD action');\n\n      // Simple response content\n      const responseContent: Content = {\n        text: 'hello world!',\n        actions: ['HELLO_WORLD'],\n        source: message.content.source,\n      };\n\n      // Call back with the hello world message\n      await callback(responseContent);\n\n      return { success: true, content: responseContent };\n    } catch (error) {\n      logger.error('Error in HELLO_WORLD action:', error);\n      throw error;\n    }\n  },\n\n  examples: [\n    [\n      {\n        name: '{{name1}}',\n        content: {\n          text: 'Can you say hello?',\n        },\n      },\n      {\n        name: '{{name2}}',\n        content: {\n          text: 'hello world!',\n          actions: ['HELLO_WORLD'],\n        },\n      },\n    ],\n  ],\n};\n\n/**\n * Example Hello World Provider\n * This demonstrates the simplest possible provider implementation\n */\nconst helloWorldProvider: Provider = {\n  name: 'HELLO_WORLD_PROVIDER',\n  description: 'A simple example provider',\n\n  get: async (\n    _runtime: IAgentRuntime,\n    _message: Memory,\n    _state: State\n  ): Promise<ProviderResult> => {\n    return {\n      text: 'I am a provider',\n      values: {},\n      data: {},\n    };\n  },\n};\n\nexport class StarterService extends Service {\n  static serviceType = 'starter';\n  capabilityDescription =\n    'This is a starter service which is attached to the agent through the starter plugin.';\n\n  constructor(runtime: IAgentRuntime) {\n    super(runtime);\n  }\n\n  static async start(runtime: IAgentRuntime) {\n    logger.info('*** Starting starter service ***');\n    const service = new StarterService(runtime);\n    return service;\n  }\n\n  static async stop(runtime: IAgentRuntime) {\n    logger.info('*** Stopping starter service ***');\n    // get the service from the runtime\n    const service = runtime.getService(StarterService.serviceType);\n    if (!service) {\n      throw new Error('Starter service not found');\n    }\n    service.stop();\n  }\n\n  async stop() {\n    logger.info('*** Stopping starter service instance ***');\n  }\n}\n\nconst plugin: Plugin = {\n  name: 'starter',\n  description: 'A starter plugin for Circle - the DeFi agent',\n  // Set lowest priority so real models take precedence\n  priority: -1000,\n  config: {\n    EXAMPLE_PLUGIN_VARIABLE: process.env.EXAMPLE_PLUGIN_VARIABLE,\n  },\n  async init(config: Record<string, string>) {\n    logger.info('*** Initializing starter plugin ***');\n    try {\n      const validatedConfig = await configSchema.parseAsync(config);\n\n      // Set all environment variables at once\n      for (const [key, value] of Object.entries(validatedConfig)) {\n        if (value) process.env[key] = value;\n      }\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        throw new Error(\n          `Invalid plugin configuration: ${error.errors.map((e) => e.message).join(', ')}`\n        );\n      }\n      throw error;\n    }\n  },\n  models: {\n    [ModelType.TEXT_SMALL]: async (\n      _runtime,\n      { prompt, stopSequences = [] }: GenerateTextParams\n    ) => {\n      return 'Never gonna give you up, never gonna let you down, never gonna run around and desert you...';\n    },\n    [ModelType.TEXT_LARGE]: async (\n      _runtime,\n      {\n        prompt,\n        stopSequences = [],\n        maxTokens = 8192,\n        temperature = 0.7,\n        frequencyPenalty = 0.7,\n        presencePenalty = 0.7,\n      }: GenerateTextParams\n    ) => {\n      return 'Never gonna make you cry, never gonna say goodbye, never gonna tell a lie and hurt you...';\n    },\n  },\n  routes: [\n    {\n      name: 'helloworld',\n      path: '/helloworld',\n      type: 'GET',\n      handler: async (_req: any, res: any) => {\n        // send a response\n        res.json({\n          message: 'Hello World!',\n        });\n      },\n    },\n  ],\n  events: {\n    MESSAGE_RECEIVED: [\n      async (params) => {\n        logger.info('MESSAGE_RECEIVED event received');\n        // print the keys\n        logger.info(Object.keys(params));\n      },\n    ],\n    VOICE_MESSAGE_RECEIVED: [\n      async (params) => {\n        logger.info('VOICE_MESSAGE_RECEIVED event received');\n        // print the keys\n        logger.info(Object.keys(params));\n      },\n    ],\n    WORLD_CONNECTED: [\n      async (params) => {\n        logger.info('WORLD_CONNECTED event received');\n        // print the keys\n        logger.info(Object.keys(params));\n      },\n    ],\n    WORLD_JOINED: [\n      async (params) => {\n        logger.info('WORLD_JOINED event received');\n        // print the keys\n        logger.info(Object.keys(params));\n      },\n    ],\n  },\n  services: [StarterService],\n  actions: [helloWorldAction],\n  providers: [helloWorldProvider],\n};\n\nexport default plugin;\n","import dotenv from \"dotenv\";\ndotenv.config();\n\nimport type { Character } from \"@elizaos/core\";\n// Remove ModelProviderName import as it's not available\n\n/**\n * A character object representing Circle, a sophisticated DeFi agent and assistant.\n */\nexport const character: Character = {\n  name: \"Circle\",\n  plugins: [\"@elizaos/plugin-bootstrap\"],\n  settings: {\n    model: \"gpt-4\",\n    modelProvider: \"openai\",\n  },\n  system: `You are Circle, a sophisticated DeFi (Decentralized Finance) agent and assistant. You are knowledgeable about:\n\n- Decentralized exchanges (DEXs) and automated market makers (AMMs)\n- Yield farming and liquidity provision strategies\n- DeFi protocols like Uniswap, Aave, Compound, MakerDAO\n- Token swaps, bridges, and circlepay operations\n- Risk management in DeFi\n- Smart contract interactions\n- Blockchain networks (Ethereum, Polygon, BSC, Arbitrum, etc.)\n- DeFi analytics and portfolio tracking\n\nYou communicate in a helpful, professional manner while being approachable. You prioritize user safety and always mention risks when discussing DeFi strategies. You can help users understand complex DeFi concepts, analyze opportunities, and make informed decisions.\n\nAlways be cautious about providing financial advice and remind users to do their own research (DYOR) and never invest more than they can afford to lose.`,\n\n  bio: [\n    \"Expert in decentralized finance (DeFi) protocols and strategies\",\n    \"Helps users navigate the complex world of DeFi safely\",\n    \"Provides insights on yield farming, liquidity provision, and token swaps\",\n    \"Emphasizes risk management and user education\",\n    \"Stays updated on the latest DeFi trends and opportunities\"\n  ],\n\n  // lore property removed as it's not part of the Character type\n\n  messageExamples: [\n    [\n      {\n        name: \"{{name1}}\",\n        content: {\n          text: \"What's the best way to start with DeFi?\"\n        }\n      },\n      {\n        name: \"Circle\",\n        content: { \n          text: \"Great question! Starting with DeFi safely involves several key steps:\\n\\n1. **Education First**: Learn about wallets, smart contracts, and how DeFi protocols work\\n2. **Start Small**: Begin with small amounts you can afford to lose\\n3. **Use Established Protocols**: Stick to well-audited, popular protocols like Uniswap, Aave, or Compound\\n4. **Understand Gas Fees**: Factor in transaction costs, especially on Ethereum\\n5. **Never Share Your Seed Phrase**: Security is paramount\\n\\nWould you like me to explain any of these points in more detail? Remember, always DYOR (Do Your Own Research)!\" \n        }\n      }\n    ],\n    [\n      {\n        name: \"{{name1}}\",\n        content: {\n          text: \"How does yield farming work?\"\n        }\n      },\n      {\n        name: \"Circle\",\n        content: { \n          text: \"Yield farming is essentially lending your crypto assets to earn rewards! Here's how it works:\\n\\n**Basic Process:**\\n- You provide liquidity to a DeFi protocol (like depositing tokens in a pool)\\n- The protocol uses your tokens for various purposes (lending, trading, etc.)\\n- You earn yield through fees, interest, or protocol tokens\\n\\n**Common Strategies:**\\n- **Liquidity Provision**: Add tokens to DEX pools (like ETH/USDC on Uniswap)\\n- **Lending**: Deposit assets on platforms like Aave to earn interest\\n- **Staking**: Lock tokens to support network operations\\n\\n**⚠️ Risks to Consider:**\\n- Impermanent loss in liquidity pools\\n- Smart contract vulnerabilities\\n- Market volatility\\n- Rug pulls in newer protocols\\n\\nWant to explore any specific yield farming strategy?\" \n        }\n      }\n    ],\n    [\n      {\n        name: \"{{name1}}\",\n        content: {\n          text: \"Tell me about crypto prices today\"\n        }\n      },\n      {\n        name: \"Circle\",\n        content: {\n          text: \"While I can't provide real-time price data, I can help you understand how to analyze DeFi opportunities regardless of market conditions. What specific DeFi strategy or protocol are you interested in learning about? I can explain the mechanics and help you understand the risks and rewards involved.\"\n        }\n      }\n    ]\n  ],\n\n  postExamples: [\n    \"Just analyzed the latest DeFi yields - some interesting opportunities emerging in the stablecoin farming space. Remember to always check the protocol's audit status! 🛡️\",\n    \"PSA: Always simulate your transactions before executing them. A small test can save you from costly mistakes in DeFi! 💡\",\n    \"The beauty of DeFi is its composability - you can stack different protocols like building blocks. But with great power comes great responsibility! 🔧\"\n  ],\n\n  adjectives: [\n    \"knowledgeable\",\n    \"cautious\",\n    \"helpful\",\n    \"analytical\",\n    \"security-focused\",\n    \"educational\",\n    \"professional\",\n    \"trustworthy\"\n  ],\n\n  // people property removed as it's not part of the Character type\n  topics: [\n    \"DeFi protocols\",\n    \"yield farming\",\n    \"liquidity provision\",\n    \"decentralized exchanges\",\n    \"smart contracts\",\n    \"blockchain networks\",\n    \"risk management\",\n    \"token economics\",\n    \"circlepay bridges\",\n    \"DeFi analytics\"\n  ],\n\n  style: {\n    all: [\n      \"Be helpful and educational\",\n      \"Always mention risks when discussing DeFi strategies\",\n      \"Use clear explanations for complex concepts\",\n      \"Include relevant emojis to make responses engaging\",\n      \"Encourage users to do their own research (DYOR)\",\n      \"Stay professional but approachable\"\n    ],\n    chat: [\n      \"Respond conversationally\",\n      \"Ask follow-up questions to better help the user\",\n      \"Provide actionable advice\",\n      \"Break down complex topics into digestible parts\"\n    ],\n    post: [\n      \"Share educational content\",\n      \"Highlight important DeFi developments\",\n      \"Always include risk warnings\",\n      \"Use hashtags relevant to DeFi topics\"\n    ]\n  },\n\n  knowledge: []\n};\n\nconst CircleAgent = {\n  character,\n  plugins: [], // Plugin objects will be added here if needed\n};\n\nexport const project = {\n  agents: [CircleAgent],\n  skipBootstrap: false,\n};\n\nexport default project;","import { type TestSuite } from '@elizaos/core';\n\n/**\n * Project E2E Test Suite\n *\n * This file demonstrates how to write end-to-end (E2E) tests for ElizaOS projects.\n * E2E tests are run using the `elizaos test` command, which provides a REAL runtime\n * environment with actual database, services, and plugin initialization.\n *\n * Key differences from unit tests:\n * - E2E tests receive a fully initialized IAgentRuntime instance\n * - The runtime has a real database (in-memory PGLite for testing)\n * - All plugins and services are actually initialized and running\n * - You can test real agent interactions and behaviors\n *\n * HOW TO ADD NEW E2E TESTS:\n * 1. Add a new test object to the `tests` array below\n * 2. Each test should have a descriptive `name` and async `fn` function\n * 3. The test function receives a real runtime instance as its parameter\n * 4. Use the runtime to simulate real agent interactions\n * 5. Throw an error if the test fails (assertions that fail should throw)\n *\n * IMPORTANT: These tests run in a real environment, so:\n * - Don't use mocks or stubs - everything is real\n * - Tests may be slower than unit tests due to real operations\n * - Each test should be independent and not rely on previous test state\n */\nexport class ProjectTestSuite implements TestSuite {\n  name = 'project';\n  description = 'E2E tests for project-specific features';\n\n  tests = [\n    {\n      name: 'Project runtime environment test',\n      fn: async (runtime: any) => {\n        /**\n         * This test verifies that the project's runtime environment is set up correctly.\n         * It's a basic smoke test to ensure the character and core systems are loaded.\n         */\n        try {\n          // Verify character is loaded\n          if (!runtime.character) {\n            throw new Error('Character not loaded in runtime');\n          }\n\n          // Verify expected character properties\n          const character = runtime.character;\n          if (!character.name) {\n            throw new Error('Character name is missing');\n          }\n\n          // Verify the character has the expected name\n          if (character.name !== 'Eliza') {\n            throw new Error(`Expected character name 'Eliza', got '${character.name}'`);\n          }\n\n          // Verify character has required configuration\n          if (!character.system) {\n            throw new Error('Character system prompt is missing');\n          }\n\n          if (!Array.isArray(character.bio)) {\n            throw new Error('Character bio should be an array');\n          }\n\n          if (!Array.isArray(character.messageExamples)) {\n            throw new Error('Character message examples should be an array');\n          }\n\n          // Verify plugins are loaded (if specified in character)\n          if (character.plugins && !Array.isArray(character.plugins)) {\n            throw new Error('Character plugins should be an array');\n          }\n\n          // Test passed - no need to return anything\n          // The test framework considers it successful if no error is thrown\n        } catch (error) {\n          // Re-throw with more context for debugging\n          throw new Error(`Project runtime environment test failed: ${(error as Error).message}`);\n        }\n      },\n    },\n\n    /**\n     * Example: How to add a new test that checks if services are initialized\n     * Uncomment and modify this template for your own tests\n     */\n    /*\n    {\n      name: 'Services initialization test',\n      fn: async (runtime: any) => {\n        // Example: Check if a specific service is available\n        const myService = runtime.getService('my-service-name');\n        if (!myService) {\n          throw new Error('Expected service not found');\n        }\n        \n        // Example: Test service functionality\n        const result = await myService.doSomething();\n        if (!result) {\n          throw new Error('Service did not return expected result');\n        }\n      },\n    },\n    */\n\n    /**\n     * Example: How to test agent message processing\n     * This shows how to simulate a conversation with the agent\n     */\n    /*\n    {\n      name: 'Agent conversation test',\n      fn: async (runtime: any) => {\n        // Create a test room/conversation\n        const roomId = `test-room-${Date.now()}`;\n        \n        // Simulate sending a message to the agent\n        const userMessage = {\n          userId: 'test-user',\n          roomId: roomId,\n          content: { text: 'Hello agent!' },\n          // Add other required message properties\n        };\n        \n        // Process the message through the runtime\n        await runtime.processMessage(userMessage);\n        \n        // Retrieve messages from the conversation\n        const messages = await runtime.messageManager.getMessages({ roomId });\n        \n        // Verify the agent responded\n        if (messages.length < 2) {\n          throw new Error('Agent did not respond to message');\n        }\n        \n        // Check the agent's response\n        const agentResponse = messages.find(m => m.userId === runtime.agentId);\n        if (!agentResponse) {\n          throw new Error('Could not find agent response');\n        }\n        \n        // Verify response content\n        if (!agentResponse.content.text.toLowerCase().includes('hello')) {\n          throw new Error('Agent response did not contain expected greeting');\n        }\n      },\n    },\n    */\n  ];\n}\n\n// Export a default instance of the test suite for the E2E test runner\n// The test runner will automatically discover and run this suite\nexport default new ProjectTestSuite();\n","import { v4 as uuidv4 } from 'uuid';\n\n/**\n * Starter Plugin E2E Test Suite\n *\n * This comprehensive test suite demonstrates how to write end-to-end tests for ElizaOS plugins.\n * These tests run in a REAL runtime environment provided by `elizaos test`, meaning:\n *\n * - All services are actually initialized and running\n * - The database is real (in-memory PGLite for testing)\n * - Actions, providers, and events are fully functional\n * - The agent's AI/LLM capabilities are active\n *\n * STRUCTURE OF AN E2E TEST:\n * 1. Each test receives a live IAgentRuntime instance\n * 2. You interact with the runtime as if it were production\n * 3. Test success = no errors thrown, test failure = throw an error\n *\n * HOW TO ADD NEW TESTS:\n * 1. Add a new object to the `tests` array with:\n *    - `name`: A descriptive name for your test\n *    - `fn`: An async function that receives the runtime\n * 2. In your test function:\n *    - Set up any required state (rooms, messages, etc.)\n *    - Execute the functionality you want to test\n *    - Assert the results (throw errors on failure)\n * 3. Keep tests independent - don't rely on other tests' state\n *\n * TESTING PATTERNS DEMONSTRATED:\n * - Character configuration validation\n * - Plugin initialization\n * - Action execution (both direct and natural language)\n * - Provider functionality\n * - Service lifecycle management\n * - Natural language understanding\n */\n\n// Define a minimal TestSuite interface that matches what's needed\ninterface TestSuite {\n  name: string;\n  description: string;\n  tests: Array<{\n    name: string;\n    fn: (runtime: any) => Promise<any>;\n  }>;\n}\n\n// Define minimal interfaces for the types we need\ntype UUID = `${string}-${string}-${string}-${string}-${string}`;\n\ninterface Memory {\n  entityId: UUID;\n  roomId: UUID;\n  content: {\n    text: string;\n    source: string;\n    actions?: string[];\n  };\n}\n\ninterface State {\n  values: Record<string, any>;\n  data: Record<string, any>;\n  text: string;\n}\n\ninterface Content {\n  text: string;\n  source?: string;\n  actions?: string[];\n}\n\nexport class StarterTestSuite implements TestSuite {\n  name = 'starter';\n  description = 'E2E tests for the starter project demonstrating comprehensive testing patterns';\n\n  tests = [\n    {\n      /**\n       * Test 1: Character Configuration Validation\n       * This test ensures that the character is properly configured with all required fields.\n       * It's a good first test because it validates the basic setup before testing functionality.\n       */\n      name: 'Character configuration test',\n      fn: async (runtime: any) => {\n        const character = runtime.character;\n        const requiredFields = ['name', 'bio', 'plugins', 'system', 'messageExamples'];\n        const missingFields = requiredFields.filter((field) => !(field in character));\n\n        if (missingFields.length > 0) {\n          throw new Error(`Missing required fields: ${missingFields.join(', ')}`);\n        }\n\n        // Additional character property validations\n        if (character.name !== 'Eliza') {\n          throw new Error(`Expected character name to be 'Eliza', got '${character.name}'`);\n        }\n        if (!Array.isArray(character.plugins)) {\n          throw new Error('Character plugins should be an array');\n        }\n        if (!character.system) {\n          throw new Error('Character system prompt is required');\n        }\n        if (!Array.isArray(character.bio)) {\n          throw new Error('Character bio should be an array');\n        }\n        if (!Array.isArray(character.messageExamples)) {\n          throw new Error('Character message examples should be an array');\n        }\n      },\n    },\n\n    {\n      /**\n       * Test 2: Plugin Initialization\n       * This test verifies that plugins can be registered with the runtime.\n       * It's important to test this separately from action execution to isolate issues.\n       */\n      name: 'Plugin initialization test',\n      fn: async (runtime: any) => {\n        // Test plugin initialization with empty config\n        try {\n          await runtime.registerPlugin({\n            name: 'starter',\n            description: 'A starter plugin for Eliza',\n            init: async () => {},\n            config: {},\n          });\n        } catch (error) {\n          throw new Error(`Failed to register plugin: ${(error as Error).message}`);\n        }\n      },\n    },\n\n    {\n      /**\n       * Test 3: Direct Action Execution\n       * This test explicitly requests the HELLO_WORLD action to verify it works correctly.\n       * This is useful for testing that the action itself is functioning before testing\n       * natural language understanding.\n       */\n      name: 'Hello world action test - Direct execution',\n      fn: async (runtime: any) => {\n        const message: Memory = {\n          entityId: uuidv4() as UUID,\n          roomId: uuidv4() as UUID,\n          content: {\n            text: 'Can you say hello?',\n            source: 'test',\n            actions: ['HELLO_WORLD'], // Explicitly request the HELLO_WORLD action\n          },\n        };\n\n        const state: State = {\n          values: {},\n          data: {},\n          text: '',\n        };\n        let responseReceived = false;\n\n        // Test the hello world action\n        try {\n          await runtime.processActions(message, [], state, async (content: Content) => {\n            if (content.text === 'hello world!' && content.actions?.includes('HELLO_WORLD')) {\n              responseReceived = true;\n            }\n            return [];\n          });\n\n          if (!responseReceived) {\n            // Try directly executing the action if processActions didn't work\n            const helloWorldAction = runtime.actions.find((a: any) => a.name === 'HELLO_WORLD');\n            if (helloWorldAction) {\n              await helloWorldAction.handler(\n                runtime,\n                message,\n                state,\n                {},\n                async (content: Content) => {\n                  if (content.text === 'hello world!' && content.actions?.includes('HELLO_WORLD')) {\n                    responseReceived = true;\n                  }\n                  return [];\n                },\n                []\n              );\n            } else {\n              throw new Error('HELLO_WORLD action not found in runtime.actions');\n            }\n          }\n\n          if (!responseReceived) {\n            throw new Error('Hello world action did not produce expected response');\n          }\n        } catch (error) {\n          throw new Error(`Hello world action test failed: ${(error as Error).message}`);\n        }\n      },\n    },\n\n    {\n      /**\n       * Test 4: Natural Language Understanding - Hello World\n       * This is the KEY TEST that demonstrates how the agent should naturally understand\n       * a request to say \"hello world\" without explicitly specifying the action.\n       *\n       * This test simulates a real conversation where:\n       * 1. The user asks the agent to say \"hello world\" in natural language\n       * 2. The agent understands the request and decides to use the HELLO_WORLD action\n       * 3. The agent responds with \"hello world!\"\n       *\n       * This tests the full AI pipeline: understanding → decision making → action execution\n       */\n      name: 'Natural language hello world test',\n      fn: async (runtime: any) => {\n        // Create a unique room for this conversation\n        const roomId = uuidv4() as UUID;\n        const userId = uuidv4() as UUID;\n\n        try {\n          // Step 1: Send a natural language message asking for hello world\n          // Note: We do NOT specify any actions - the agent must understand and decide\n          const userMessage: Memory = {\n            entityId: userId,\n            roomId: roomId,\n            content: {\n              text: 'Please say hello world', // Natural language request\n              source: 'test',\n              // No actions specified - agent must understand the intent\n            },\n          };\n\n          // Step 2: Process the message through the agent's full pipeline\n          // This includes:\n          // - Natural language understanding\n          // - Intent recognition\n          // - Action selection\n          // - Response generation\n          let agentResponse: string | null = null;\n          let actionUsed: string | null = null;\n\n          // Set up a callback to capture the agent's response\n          const responseCallback = async (content: Content) => {\n            agentResponse = content.text;\n            if (content.actions && content.actions.length > 0) {\n              actionUsed = content.actions[0];\n            }\n            return [];\n          };\n\n          // Process the message - this simulates a real conversation\n          await runtime.processMessage(userMessage, [], responseCallback);\n\n          // Alternative approach if processMessage isn't available\n          if (!agentResponse) {\n            // Try using the evaluate method which processes messages through the full pipeline\n            const state: State = {\n              values: {},\n              data: {},\n              text: userMessage.content.text,\n            };\n\n            const result = await runtime.evaluate(userMessage, state, responseCallback);\n\n            // If evaluate doesn't work, try the action selection pipeline\n            if (!agentResponse && runtime.evaluateActions) {\n              const selectedActions = await runtime.evaluateActions(userMessage, state);\n\n              if (selectedActions && selectedActions.length > 0) {\n                // Execute the selected action\n                const action = runtime.actions.find((a: any) => a.name === selectedActions[0]);\n                if (action) {\n                  await action.handler(runtime, userMessage, state, {}, responseCallback, []);\n                }\n              }\n            }\n          }\n\n          // Step 3: Verify the agent understood and responded correctly\n          if (!agentResponse) {\n            throw new Error('Agent did not respond to natural language request');\n          }\n\n          // Check that the response contains \"hello world\" (case insensitive)\n          const responseText = (agentResponse || '') as string;\n          if (!responseText.toLowerCase().includes('hello world')) {\n            throw new Error(\n              `Agent response did not contain \"hello world\". Got: \"${agentResponse}\"`\n            );\n          }\n\n          // Optionally verify that the HELLO_WORLD action was used\n          if (actionUsed && actionUsed !== 'HELLO_WORLD') {\n            console.log(`Note: Agent used action \"${actionUsed}\" instead of \"HELLO_WORLD\"`);\n          }\n\n          // Test passed! The agent successfully understood the natural language request\n          // and responded with \"hello world\"\n        } catch (error) {\n          throw new Error(`Natural language hello world test failed: ${(error as Error).message}`);\n        }\n      },\n    },\n\n    {\n      /**\n       * Test 5: Provider Functionality\n       * Providers supply context to the agent. This test verifies that our\n       * HELLO_WORLD_PROVIDER is functioning and returning the expected data.\n       */\n      name: 'Hello world provider test',\n      fn: async (runtime: any) => {\n        const message: Memory = {\n          entityId: uuidv4() as UUID,\n          roomId: uuidv4() as UUID,\n          content: {\n            text: 'What can you provide?',\n            source: 'test',\n          },\n        };\n\n        const state: State = {\n          values: {},\n          data: {},\n          text: '',\n        };\n\n        // Test the hello world provider\n        try {\n          if (!runtime.providers || runtime.providers.length === 0) {\n            throw new Error('No providers found in runtime');\n          }\n\n          // Find the specific provider we want to test\n          const helloWorldProvider = runtime.providers.find(\n            (p: any) => p.name === 'HELLO_WORLD_PROVIDER'\n          );\n\n          if (!helloWorldProvider) {\n            throw new Error('HELLO_WORLD_PROVIDER not found in runtime providers');\n          }\n\n          const result = await helloWorldProvider.get(runtime, message, state);\n\n          if (result.text !== 'I am a provider') {\n            throw new Error(`Expected provider to return \"I am a provider\", got \"${result.text}\"`);\n          }\n        } catch (error) {\n          throw new Error(`Hello world provider test failed: ${(error as Error).message}`);\n        }\n      },\n    },\n\n    {\n      /**\n       * Test 6: Service Lifecycle Management\n       * Services are long-running components. This test verifies that our\n       * starter service can be properly started, accessed, and stopped.\n       */\n      name: 'Starter service test',\n      fn: async (runtime: any) => {\n        // Test service registration and lifecycle\n        try {\n          const service = runtime.getService('starter');\n          if (!service) {\n            throw new Error('Starter service not found');\n          }\n\n          if (\n            service.capabilityDescription !==\n            'This is a starter service which is attached to the agent through the starter plugin.'\n          ) {\n            throw new Error('Incorrect service capability description');\n          }\n\n          await service.stop();\n        } catch (error) {\n          throw new Error(`Starter service test failed: ${(error as Error).message}`);\n        }\n      },\n    },\n\n    /**\n     * TEMPLATE: How to add a new E2E test\n     * Copy this template and modify it for your specific test case\n     */\n    /*\n    {\n      name: 'My new feature test',\n      fn: async (runtime: any) => {\n        try {\n          // 1. Set up test data\n          const testData = {\n            // Your test setup here\n          };\n          \n          // 2. Execute the feature\n          const result = await runtime.someMethod(testData);\n          \n          // 3. Verify the results\n          if (!result) {\n            throw new Error('Expected result but got nothing');\n          }\n          \n          if (result.someProperty !== 'expected value') {\n            throw new Error(`Expected 'expected value' but got '${result.someProperty}'`);\n          }\n          \n          // Test passed if we reach here without throwing\n        } catch (error) {\n          // Always wrap errors with context for easier debugging\n          throw new Error(`My new feature test failed: ${error.message}`);\n        }\n      },\n    },\n    */\n  ];\n}\n\n// Export a default instance of the test suite for the E2E test runner\nexport default new StarterTestSuite();\n","import { type TestSuite } from '@elizaos/core';\n\n/**\n * Natural Language E2E Test Suite\n *\n * This suite tests the agent's ability to respond to natural language inputs,\n * including the requested \"hello world\" test.\n *\n * HOW TO ADD NEW NATURAL LANGUAGE TESTS:\n * 1. Add a new test object to the `tests` array\n * 2. Create a message with natural language content\n * 3. Process it through the runtime\n * 4. Verify the agent's response makes sense\n *\n * These tests use the REAL runtime with actual language processing,\n * so responses may vary based on the model and character configuration.\n */\nexport class NaturalLanguageTestSuite implements TestSuite {\n  name = 'natural-language';\n  description = 'E2E tests for natural language processing and agent responses';\n\n  tests = [\n    {\n      name: 'Agent responds to hello world',\n      fn: async (runtime: any) => {\n        /**\n         * This test verifies that the agent can respond appropriately\n         * to a simple \"hello world\" greeting.\n         */\n        try {\n          // Create a unique room for this test\n          const roomId = `test-room-hello-${Date.now()}`;\n          const userId = 'test-user-hello';\n\n          // Create a message saying \"hello world\"\n          const helloMessage = {\n            id: `msg-${Date.now()}`,\n            userId: userId,\n            agentId: runtime.agentId,\n            roomId: roomId,\n            content: {\n              text: 'hello world',\n              type: 'text',\n            },\n            createdAt: Date.now(),\n          };\n\n          console.log('Sending hello world message to agent...');\n\n          // Process the message through the runtime\n          // This will trigger the agent to generate a response\n          await runtime.processMessage(helloMessage);\n\n          // Give the agent a moment to process and respond\n          await new Promise((resolve) => setTimeout(resolve, 1000));\n\n          // Retrieve messages from the conversation\n          const messages = await runtime.messageManager.getMessages({\n            roomId,\n            limit: 10,\n          });\n\n          console.log(`Retrieved ${messages.length} messages from conversation`);\n\n          // Verify we have at least 2 messages (user + agent)\n          if (messages.length < 2) {\n            throw new Error(`Expected at least 2 messages, got ${messages.length}`);\n          }\n\n          // Find the agent's response\n          const agentResponse = messages.find(\n            (m: any) =>\n              m.userId === runtime.agentId && m.roomId === roomId && m.id !== helloMessage.id\n          );\n\n          if (!agentResponse) {\n            throw new Error('Agent did not respond to hello world message');\n          }\n\n          console.log('Agent response:', agentResponse.content.text);\n\n          // Verify the response contains a greeting\n          const responseText = agentResponse.content.text.toLowerCase();\n          const greetingWords = ['hello', 'hi', 'hey', 'greetings', 'welcome'];\n\n          const containsGreeting = greetingWords.some((word) => responseText.includes(word));\n\n          if (!containsGreeting) {\n            throw new Error(\n              `Agent response did not contain a greeting. ` +\n                `Response was: \"${agentResponse.content.text}\"`\n            );\n          }\n\n          console.log('✓ Agent successfully responded to hello world');\n        } catch (error) {\n          throw new Error(`Hello world test failed: ${(error as Error).message}`);\n        }\n      },\n    },\n\n    {\n      name: 'Agent responds to casual greeting',\n      fn: async (runtime: any) => {\n        /**\n         * Test various casual greetings to ensure the agent\n         * responds appropriately to different forms of hello.\n         */\n        try {\n          const greetings = ['hey there!', 'hi, how are you?', 'good morning!', 'whats up?'];\n\n          for (const greeting of greetings) {\n            const roomId = `test-room-greeting-${Date.now()}-${Math.random()}`;\n            const userId = 'test-user-greeting';\n\n            const message = {\n              id: `msg-${Date.now()}-${Math.random()}`,\n              userId: userId,\n              agentId: runtime.agentId,\n              roomId: roomId,\n              content: {\n                text: greeting,\n                type: 'text',\n              },\n              createdAt: Date.now(),\n            };\n\n            console.log(`Testing greeting: \"${greeting}\"`);\n\n            await runtime.processMessage(message);\n            await new Promise((resolve) => setTimeout(resolve, 500));\n\n            const messages = await runtime.messageManager.getMessages({\n              roomId,\n              limit: 10,\n            });\n\n            const agentResponse = messages.find(\n              (m: any) => m.userId === runtime.agentId && m.id !== message.id\n            );\n\n            if (!agentResponse) {\n              throw new Error(`Agent did not respond to greeting: \"${greeting}\"`);\n            }\n\n            // Just verify we got a response - content may vary\n            if (!agentResponse.content.text || agentResponse.content.text.length < 2) {\n              throw new Error(`Agent gave empty response to: \"${greeting}\"`);\n            }\n\n            console.log(`✓ Agent responded to: \"${greeting}\"`);\n          }\n        } catch (error) {\n          throw new Error(`Casual greeting test failed: ${(error as Error).message}`);\n        }\n      },\n    },\n\n    {\n      name: 'Agent maintains conversation context',\n      fn: async (runtime: any) => {\n        /**\n         * Test that the agent remembers context from previous messages\n         * in the same conversation.\n         */\n        try {\n          const roomId = `test-room-context-${Date.now()}`;\n          const userId = 'test-user-context';\n\n          // First message - introduce a topic\n          const firstMessage = {\n            id: `msg-1-${Date.now()}`,\n            userId: userId,\n            agentId: runtime.agentId,\n            roomId: roomId,\n            content: {\n              text: \"My favorite color is blue. What's yours?\",\n              type: 'text',\n            },\n            createdAt: Date.now(),\n          };\n\n          console.log('Sending first message about favorite color...');\n          await runtime.processMessage(firstMessage);\n          await new Promise((resolve) => setTimeout(resolve, 1000));\n\n          // Second message - reference the topic\n          const secondMessage = {\n            id: `msg-2-${Date.now()}`,\n            userId: userId,\n            agentId: runtime.agentId,\n            roomId: roomId,\n            content: {\n              text: 'Why did you choose that color?',\n              type: 'text',\n            },\n            createdAt: Date.now() + 1000,\n          };\n\n          console.log('Sending follow-up question...');\n          await runtime.processMessage(secondMessage);\n          await new Promise((resolve) => setTimeout(resolve, 1000));\n\n          // Get all messages\n          const messages = await runtime.messageManager.getMessages({\n            roomId,\n            limit: 10,\n          });\n\n          // Should have at least 4 messages (2 user + 2 agent)\n          if (messages.length < 4) {\n            throw new Error(`Expected at least 4 messages, got ${messages.length}`);\n          }\n\n          // Find the agent's second response\n          const agentResponses = messages.filter((m: any) => m.userId === runtime.agentId);\n          if (agentResponses.length < 2) {\n            throw new Error('Agent did not respond to both messages');\n          }\n\n          // The second response should reference colors or the previous conversation\n          const secondResponse = agentResponses[agentResponses.length - 1];\n          const responseText = secondResponse.content.text.toLowerCase();\n\n          // Check if the response shows context awareness\n          const contextWords = ['color', 'blue', 'favorite', 'chose', 'choice', 'because'];\n          const hasContext = contextWords.some((word) => responseText.includes(word));\n\n          if (!hasContext) {\n            console.warn(\n              'Agent response may not show context awareness. ' +\n                `Response: \"${secondResponse.content.text}\"`\n            );\n          }\n\n          console.log('✓ Agent maintained conversation context');\n        } catch (error) {\n          throw new Error(`Context test failed: ${(error as Error).message}`);\n        }\n      },\n    },\n  ];\n}\n\n// Export a default instance for the test runner\nexport default new NaturalLanguageTestSuite();\n","/**\n * E2E Test Suite Exports\n *\n * This file exports all E2E test suites for the ElizaOS test runner.\n */\n\nimport projectTestSuite from './project.test';\nimport starterTestSuite from './starter-plugin.test';\nimport naturalLanguageTestSuite from './natural-language.test';\n\n// Export test suites for the test runner to discover\nexport const testSuites = [projectTestSuite, starterTestSuite, naturalLanguageTestSuite];\n\nexport default testSuites;\n","import {\n  logger,\n  type Character,\n  type IAgentRuntime,\n  type Project,\n  type ProjectAgent,\n} from '@elizaos/core';\nimport starterPlugin from './plugin.ts';\nimport { character as circleCharacter } from './agent.ts';\n\n/**\n * Represents the Circle character - a sophisticated DeFi agent and assistant.\n * Circle responds to DeFi-related questions, provides strategy recommendations,\n * and helps users navigate the complex world of decentralized finance safely.\n * Circle emphasizes risk management, user education, and staying updated on DeFi trends.\n */\nexport const character: Character = circleCharacter;\n\nconst initCharacter = ({ runtime }: { runtime: IAgentRuntime }) => {\n  logger.info('Initializing Circle character');\n  logger.info('Name: ', character.name);\n  logger.info('Bio: ', character.bio);\n};\n\nexport const projectAgent: ProjectAgent = {\n  character,\n  init: async (runtime: IAgentRuntime) => await initCharacter({ runtime }),\n  plugins: [starterPlugin], // Enable the starter plugin\n};\n\nconst project: Project = {\n  agents: [projectAgent],\n};\n\n// Export test suites for the test runner\nexport { testSuites } from './__tests__/e2e/index.ts';\n\nexport default project;\n"],"mappings":"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","names":["isFunction","createFrame","options","options","options","options","options","options","options","ret","logger","wrapper","options","options","ret","context","handlebars","parse","self","lexer","options","close","options","parse","compile","options","base64","normalize","util","util","util","sourceFile","util","needle","section","util","merge","wrap","location","options","options","handlebars","module","WINDOW","Buffer","isString","blocks","exports","options","self","options","original","require_retry","options","pRetry","error","handlers","options","options","options","options","parse","options","parse","options","parse","options","options","parse","parse","options","parse","options","options","z","options","options","options","options","options","require_valid","options","options","options","options","options","options","options","require_semver","parse","character","camelCase","options","styles","character","len","arr","i","len2","err","err","validator","validate","require_parse","parse","serialize","i","node","serialize","validator","parse","validate","serialize","validator","validate","serialize","format","flush","onExit","options","fixTarget","format","time","stringify","defaultOptions","customLevels","_","require_constants","customLevels","flush","bindings","options","hasOwnProperty","options","value","tmp","key","res","join","stringify","clone","streamLevels","time","defaultOptions","normalize","pino","serializers","customLevels","import_p_retry","uuidv4","uuid","uuid","options","PQueueMod","pRetry","options","options","attachments","encoder","project","options","datasetId_","datasetName_","response","examples","value","client","uuid","validate","keys","i","document","arr","validate","uuid","snakeCase","isBrowser","isWebWorker","isJsDom","isDeno","isNode","getEnv","runtimeEnvironment","runtimeEnvironment","getEnv","getEnvironmentVariable","isDeno","getEnvironmentVariable","stripNonAlphanumeric","convertToDottedOrderFormat","elapsed","styles","arr","obj","getEnvironmentVariable","client","queue","import_p_queue","TRACING_ALS_KEY","PQueueMod","isTracingEnabled","getEnvironmentVariable","handlers","err","options","getEnvironmentVariable","isTracingEnabled","MockAsyncLocalStorage","mockAsyncLocalStorage","AsyncLocalStorageProvider","AsyncLocalStorageProviderSingleton","import_p_retry","import_p_queue","uuidv4","ZodFirstPartyTypeKind","ZodFirstPartyTypeKind","OutputFormat","base64","z","console","logger","arr","options","uuid4","performance","uuid4","uuid4","client","lastEventId","uuid4","withScope","options","dsn","client","options","dsc","dsn","dsn","States","options","client","uuid4","client","dsn","options","client","dsn","Client","options","uuid4","isErrorEvent","isError","client","options","isErrorEvent","dsn","client","options","client","options","flush","options","name","client","client","INTEGRATION_NAME","options","client","INTEGRATION_NAME","_shouldDropEvent","WINDOW","WINDOW","WINDOW","url","options","WINDOW","wrap","options","fn","withScope","client","Client","options","WINDOW","DEBUG_BUILD","WINDOW","WINDOW","options","handlers","uuid4","WINDOW","WINDOW","document","DEBUG_BUILD","WINDOW","options","line","DEBUG_BUILD","INTEGRATION_NAME","options","client","DEBUG_BUILD","WINDOW","INTEGRATION_NAME","options","WINDOW","wrap","WINDOW","DEBUG_BUILD","INTEGRATION_NAME","options","client","DEBUG_BUILD","WINDOW","INTEGRATION_NAME","options","client","DEBUG_BUILD","WINDOW","options","z2","uuidv4","__require","logger","pino","__require","z","z2","z","logger","character","uuidv4","character","helloWorldAction","helloWorldProvider","character","logger"]}