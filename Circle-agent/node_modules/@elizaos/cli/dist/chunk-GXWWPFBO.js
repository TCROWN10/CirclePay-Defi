// src/commands/shared/url-utils.ts
function getAgentRuntimeUrl(opts) {
  return opts.remoteUrl?.replace(/\/$/, "") || // Use the flag if provided
  process.env.AGENT_RUNTIME_URL?.replace(/\/$/, "") || // Fallback to env var
  `http://localhost:${opts.port || process.env.SERVER_PORT || "3000"}`;
}
function getAgentsBaseUrl(opts) {
  return `${getAgentRuntimeUrl(opts)}/api/agents`;
}

// src/commands/shared/auth-utils.ts
function getAuthHeaders(opts) {
  const authToken = opts.authToken || process.env.ELIZA_SERVER_AUTH_TOKEN;
  if (authToken) {
    return {
      "X-API-KEY": authToken
    };
  }
  return {};
}
function createApiClientConfig(opts) {
  const authToken = opts.authToken || process.env.ELIZA_SERVER_AUTH_TOKEN;
  return {
    baseUrl: getAgentRuntimeUrl(opts),
    apiKey: authToken,
    timeout: 3e4,
    // 30 seconds default
    headers: {
      "Content-Type": "application/json"
    }
  };
}

export {
  getAgentRuntimeUrl,
  getAgentsBaseUrl,
  getAuthHeaders,
  createApiClientConfig
};
